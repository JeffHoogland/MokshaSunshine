group { name: "elm/ews/background/default";

   parts {
      part { name: "bg"; type: RECT;
         description { state: "default" 0.0; 
            color_class: "dialog_base";
         }
      }
   }
}

group { name: "elm/ews/decoration/default";
	inherit: "e/widgets/border/default/border";
	
	parts {
		part { 			name: "elm.text.title";
			insert_after: "e.text.title";
			type: TEXT;
			effect: SOFT_SHADOW BOTTOM;	
			scale: 1;
			description	{	
						state: "default" 0;	
						min: 0 10;	
						color: 255 255 255 255;
						color2: 255 255 255 255;	
						color3: 255 255 255 255;
						rel1 {
					to: "title.area.clip";
					relative: 0.0 0.5;
					offset: 0 4; 
				}

				rel2 { 
					to: "title.area.clip";
					relative: 1.0 0.5; 
					offset: -5 0;
				}

				text {
					text: "";
					font: "Sans";
					size: 10;
					min: 0 1;
					align: 0.5 0.5;
					text_class: "title_bar";
				}
			}		
							
			description	{	
						state: "focused" 0;	
						inherit: "default" 0.0;
			 			color_class: "border_title_active";	
			
						}	
			}
	}

	programs {
	      
      //Focus / Unfocus Windows Programs
      program {
        signal: "elm,state,focus,on"; source: "elm";
        action: STATE_SET "focused" 0.0;
        target: "elm.text.title";
		//~ target: "button-close";
		//~ target: "button-min";
		//~ target: "button-max";
		//~ target: "top-center-over";
		//~ target: "top-right-over";
      }
      program {
        signal: "elm,state,focus,off"; source: "elm";
        action: STATE_SET "default" 0.0;
        target: "elm.text.title";
		//~ target: "button-close";
		//~ target: "button-min";
		//~ target: "button-max";
		//~ target: "top-center-over";
		//~ target: "top-right-over";
      }
      
  }
	
	}

//////////////////////////////////////////////////////////////////////////////////
//This part it's not complete. This because it is not showed on elm_theme_viewer//
/*
group { name: "elm/border/base/default"; inherit: "elm/ews/decoration/default";
   /*images.image: "win_shadow.png" COMP;
   images.image: "win_glow.png" COMP;
   
   images.image: "vgrad_med_lighter.png" COMP;
   images.image: "vgrad_med_dark.png" COMP;
   images.image: "img/bevel_out.png" COMP;
   images.image: "shine.png" COMP;
   images.image: "bevel_dark_out.png" COMP;
   images.image: "sym_close_dark_normal.png" COMP;
   images.image: "sym_close_dark_selected.png" COMP;
   images.image: "sym_close_light_normal.png" COMP;
   images.image: "sym_close_light_selected.png" COMP;
   images.image: "sym_down_dark_normal.png" COMP;
   images.image: "sym_down_dark_selected.png" COMP;
   images.image: "sym_down_light_normal.png" COMP;
   images.image: "sym_down_light_selected.png" COMP;
   images.image: "sym_up_dark_normal.png" COMP;
   images.image: "sym_up_dark_selected.png" COMP;
   images.image: "sym_up_light_normal.png" COMP;
   images.image: "sym_up_light_selected.png" COMP;
   images.image: "glow_round_corners_small.png" COMP;
   images.image: "knob_round_small_busy.png" COMP;
   parts {
      part { name: "focus_clip"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.swallow.frame_spacer"; type: SWALLOW;
         clip_to: "focus_clip";
         description { state: "default" 0.0;
            rel1.to: "frame";
            rel2.to: "frame";
         }
      }
      part { name: "frame"; type: SPACER;
         description { state: "default" 0.0;
            rel1.offset: 7 5;
            rel2.offset: -8 -12;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 0 0;
            rel2.offset: -1 -1;
         }
      }
      part { name: "shadow"; mouse_events: 0;
         clip_to: "focus_clip";
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.offset: -7  -3;
            rel1.to: "frame";
            rel2.offset: 6 11;
            rel2.to: "frame";
            fill.smooth: 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "glow"; mouse_events: 0;
         clip_to: "focus_clip";
         description { state: "default" 0.0;
            image.normal: "win_glow.png";
            image.border: 9 9 9 9;
            image.middle: 0;
            rel1.offset: -5  -5;
            rel1.to: "frame";
            rel2.offset: 4 4;
            rel2.to: "frame";
            fill.smooth: 0;
            color: 255 255 255 0;
            color_class: "focus";
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "client_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.to_y: "elm.swallow.client";
            rel2.to_y: "elm.swallow.client";
         }
      }
      part { name: "elm.swallow.client"; type: SWALLOW;
         clip_to: "client_clip";
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.to: "border";
            rel1.offset: 1 27;
            rel2.relative: 1.0 1.0;
            rel2.to: "border";
            rel2.offset: -2 -2;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "top";
         description { state: "default" 0.0;
            color_class: "border_top";
            image.normal: "vgrad_med_lighter.png";
            rel1.to: "frame";
            rel2.to_y: "title2";
            rel2.to_x: "frame";
            rel2.offset: -1 -4;
            fill.smooth: 0;
            TILED_HORIZ(120)
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            image.normal: "vgrad_med_dark.png";
         }
      }
      part { name: "bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "img/bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            rel1.to: "top";
            rel2.to: "top";
            fill.smooth: 0;
         }
      }
      part { name: "elm.text.title"; type: TEXT;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.to_x: "elm.event.icon";
         }
      }
      part { name: "icon"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "elm.event.icon";
            rel2.to: "elm.event.icon";
         }
         description { state: "bounce1" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.15;
            rel2.relative: 1.0 1.15;
         }
         description { state: "bounce2" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 -0.15;
            rel2.relative: 1.0 0.85;
         }
      }
      part { name: "elm.swallow.icon"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "icon";
            rel1.relative: 0.15 0.15;
            rel2.to: "icon";
            rel2.relative: 0.85 0.85;
            rel2.offset: 0 0;
         }
      }
      part { name: "busy_clip"; type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "hung" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "knob"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            fixed: 1 1;
            image.normal: "knob_round_small_busy.png";
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            max: 20 20;
            rel1.relative: 1.0 0.0;
            rel1.offset: 2 -0;
            rel1.to: "elm.event.icon";
            rel2.relative: 1.0 1.0;
            rel2.offset: 2 -1;
            rel2.to: "elm.event.icon";
            align: 0.0 0.5;
            fixed: 1 1;
         }
      }
      part { name: "knob_spinner"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "knob";
            rel2.to: "knob";
            image.normal: "glow_round_corners.png";
            map.on: 1;
            map.smooth: 1;
            map.rotation.center: "knob";
         }
         description { state: "spin" 0.0;
            inherit: "default" 0.0;
            map.rotation.z: 360;
         }
      }
      part { name: "elm.event.icon"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.to: "top";
            rel2.relative: 0.0 1.0;
            rel2.to: "top";
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         signal: "elm,state,urgent"; source: "elm";
         action: STATE_SET "bounce1" 0.0;
         target: "icon";
         after: "urg1";
      }
      program { name: "urg1";
         action: STATE_SET "bounce2" 0.0;
         transition: DECELERATE 0.2;
         target: "icon";
         after: "urg2";
      }
      program { name: "urg2";
         action: STATE_SET "bounce1" 0.0;
         transition: ACCELERATE 0.2;
         target: "icon";
         after: "urg1";
      }
      program {
         signal: "elm,state,not_urgent"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "icon";
      }
      program { name: "spin";
         signal: "elm,state,hung"; source: "elm";
         action: STATE_SET "spin" 0.0;
         transition: LINEAR 1.0;
         target: "knob_spinner";
         after: "spin2";
      }
      program { name: "spin2";
         action: STATE_SET "default" 0.0;
         target: "knob_spinner";
         after: "spin";
      }
      program {
         signal: "elm,state,hung"; source: "elm";
         action: STATE_SET "hung" 0.0;
         transition: SINUSOIDAL 0.25;
         target: "busy_clip";
      }
      program {
         signal: "elm,state,unhung"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 1.0;
         target: "busy_clip";
         after: "spin3";
      }
      program { name: "spin3";
         action: ACTION_STOP;
         target: "spin";
         target: "spin2";
         after: "spin4";
      }
      program { name: "spin4";
         action: STATE_SET "default" 0.0;
         target: "knob_spinner";
      }
      program {
         signal: "elm,state,shaded"; source: "elm";
         action: STATE_SET "shaded" 0.0;
         target: "elm.swallow.client";
         target: "bottom";
         target: "bevel2";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }

      program {
         signal: "elm,state,unshading"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.client";
         target: "bottom";
         target: "bevel2";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }
      
      program {
         signal: "elm,state,maximized"; source: "elm";
         action: STATE_SET "max" 0.0;
         target: "elm.swallow.client";
         target: "frame";
         target: "focus_clip";
         target: "bottom";
         target: "bevel2";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }
      program {
         signal: "elm,state,unmaximized"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.client";
         target: "frame";
         target: "focus_clip";
         target: "bottom";
         target: "bevel2";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }
      program {
         signal: "mouse,down,*"; source: "e.event.close";
         action: STATE_SET "selected" 0.0;
         target: "close1";
         target: "close2";
      }
      program {
         signal: "mouse,up,*"; source: "e.event.close";
         action: STATE_SET "default" 0.0;
         target: "close1";
         target: "close2";
      }
      program {
         signal: "mouse,down,*"; source: "e.event.maximize";
         action: STATE_SET "selected" 0.0;
         target: "max1";
         target: "max2";
      }
      program {
         signal: "mouse,up,*"; source: "e.event.maximize";
         action: STATE_SET "default" 0.0;
         target: "max1";
         target: "max2";
      }
      program {
         signal: "mouse,down,*"; source: "e.event.minimize";
         action: STATE_SET "selected" 0.0;
         target: "min1";
         target: "min2";
      }
      program {
         signal: "mouse,up,*"; source: "e.event.minimize";
         action: STATE_SET "default" 0.0;
         target: "min1";
         target: "min2";
      }

      program {
         signal: "mouse,down,1"; source: "e.event.titlebar";
         action: SIGNAL_EMIT "elm,action,move,start" "elm";
      }
      program {
         signal: "mouse,up,1"; source: "e.event.titlebar";
         action: SIGNAL_EMIT "elm,action,move,stop" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.minimize";
         action: SIGNAL_EMIT "elm,action,minimize" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.maximize";
         action: SIGNAL_EMIT "elm,action,maximize" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.close";
         action: SIGNAL_EMIT "elm,action,close" "elm";
      }
      program {
         signal: "mouse,in"; source: "e.event.resize.t";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.t";
      }
      program {
         signal: "mouse,out"; source: "e.event.resize.t";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.t";
      }
      program { name: "resize_t_down";
         signal: "mouse,down,1"; source: "e.event.resize.t";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.t";
      }
      program {
         signal: "mouse,in"; source: "e.event.resize.b";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.b";
      }
      program {
         signal: "mouse,out"; source: "e.event.resize.b";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.b";
      }
      program {
         signal: "mouse,down,1"; source: "e.event.resize.b";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.b";
      }
      program {
         signal: "mouse,in"; source: "e.event.resize.tl";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.tl";
      }
      program {
         signal: "mouse,out"; source: "e.event.resize.tl";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.tl";
      }
      program {
         signal: "mouse,down,1"; source: "e.event.resize.tl";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.tl";
      }
      program {
         signal: "mouse,in"; source: "e.event.resize.tr";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.tr";
      }
      program {
         signal: "mouse,out"; source: "e.event.resize.tr";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.tr";
      }
      program {
         signal: "mouse,down,1"; source: "e.event.resize.tr";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.tr";
      }
      program {
         signal: "mouse,in"; source: "e.event.resize.bl";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.bl";
      }
      program {
         signal: "mouse,out"; source: "e.event.resize.bl";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.bl";
      }
      program {
         signal: "mouse,down,1"; source: "e.event.resize.bl";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.bl";
      }
      program {
         signal: "mouse,in"; source: "e.event.resize.br";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.br";
      }
      program {
         signal: "mouse,out"; source: "e.event.resize.br";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.br";
      }
      program {
         signal: "mouse,down,1"; source: "e.event.resize.br";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.br";
      }
   }
}*/
