#define OVER(NAME_SRC, NAME_TRG)	\
		  program {				\
			  name: NAME_TRG"_over";	\
			  signal: "mouse,in";	\
			  source: NAME_SRC;		\
			  action: STATE_SET "over" 0.0;	\
			  target: NAME_TRG;			\
		  }			  \
		  program {				\
			  name: NAME_TRG"_over_out";	\
			  signal: "mouse,out";	\
			  source: NAME_SRC;		\
			  action: STATE_SET "default" 0.0;	\
			  target: NAME_TRG;			\
		  }			  \
		  
//NAVIGATION

   group {
   name: "modules/efm_navigation/main";
      
      images {
      image: "icon_left_arrow.png" COMP;
      image: "icon_right_arrow.png" COMP;
      image: "icon_up_arrow.png" COMP;
      image: "refresh.png" COMP;
      image: "favorites.png" COMP;
      image: "button-prelight.png" COMP;
      image: "button-normal.png" COMP;
      image: "button-pressed.png" COMP;
      }

      parts {
	 part {
	 name: "base";
	 type: RECT;
	 mouse_events: 1;

	    description {
	    state: "default" 0.0;
	    color: 0 0 0 0;
	    }
	 }
	 part {
	 name: "begin";
	 type: RECT;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    max: 1 1;
	    align: 0.0 0.0;
	    color: 0 0 0 0;
	    }
	 }

#define NAV_BUTTON(NAME, ICON, REL_TO, OFF_X)	\
	 part {					\
	 name: NAME"_bg";			\
	 mouse_events: 1;			\
	 repeat_events: 1;			\
	 type: IMAGE;				\
	    description	{			\
	    state: "default" 0.0;		\
	    min: 12 12;				\
	    max: 64 64;				\
	    aspect: 1.0 1.0;			\
	    aspect_preference: VERTICAL;	\
	    align: 0.0 0.5;			\
	    color: 255 255 255 0;	\
	       rel1 {				\
	       to_x: REL_TO;			\
	       relative: 1.0 0.0;		\
	       offset: OFF_X 0;			\
	       }				\
	       image {				\
	       normal: "button-normal.png";		\
	       border: 7 7 7 7;			\
	       }				\
	    }					\
	    description {			\
	    state: "over" 0.0;			\
	    inherit: "default" 0.0;		\
	    color: 255 255 255 255;		\
	    image.normal: "button-prelight.png";	\
	    }					\
	    description {			\
	    state: "selected" 0.0;			\
	    inherit: "default" 0.0;		\
	    color: 255 255 255 255;		\
	    image.normal: "button-pressed.png";	\
	    }					\
	 }					\
	 part {					\
	 name: NAME"_img";			\
	 mouse_events: 0;			\
	 type: IMAGE;				\
	    description	{			\
	    state: "default" 0.0;		\
	    min: 22 22;				\
	    max: 22 22;				\
	       rel1 {				\
	       offset: 7 7;			\
	       to: NAME"_bg";			\
	       }				\
	       rel2 {				\
	       offset: -8 -8;			\
	       to: NAME"_bg";			\
	       }				\
	    image.normal: ICON".png";		\
	    }					\
	    description {			\
			state: "disabled" 0.0;	\
			inherit: "default" 0.0;	\
			color: 255 255 255 150;	\
		}						\
	 }					\
	 part {					\
	 name: NAME"_event_eater";		\
	 type: RECT;				\
	 mouse_events: 1;			\
	 repeat_events: 0;			\
	    description {			\
	    state: "default" 0.0;		\
	    visible: 0;				\
	    color: 255 255 255 0;		\
	    rel1.to: NAME"_bg";			\
	    rel2.to: NAME"_bg";			\
	    }					\
	    description	{			\
	    state: "disabled" 0.0;		\
	    inherit: "default" 0.0;		\
	    visible: 1;				\
	    }					\
	 }					\

	 
	 NAV_BUTTON("back",       "icon_left_arrow",  "begin", 5);
	 NAV_BUTTON("forward",    "icon_right_arrow", "back_bg", 1);
	 NAV_BUTTON("up",         "icon_up_arrow",    "forward_bg", 10);
	 NAV_BUTTON("refresh",    "refresh",          "up_bg", 1);
	 NAV_BUTTON("favorites",  "favorites",        "refresh_bg", 1);

	 part {
	 name: "e.swallow.pathbar";
	 type: SWALLOW;
	    description {
	    state: "default" 0.0;
	    align: 0.0 0.5;

	       /* rel1.to_x: "favorites_base"; */
	    rel1.to_x: "favorites_bg";
	    rel1.relative: 1.0 0.0;
	    rel1.offset: 10 0;
	    rel2.offset: -40 -1;
	    color: 200 0 0 200;
	    }
	 }
			
      }

      programs {
#define NAV_BUTTON_PROG(NAME)					\
	OVER(NAME"_bg", NAME"_bg")			\
	 program {						\
	 name: NAME"_click";					\
	 signal: "mouse,down,1";				\
	 source: NAME"_bg";						\
	 action: STATE_SET "selected" 0.0;				\
	 target: NAME"_bg";					\
	 }							\
	 program {						\
	 name: NAME"_unclick";					\
	 signal: "mouse,up,1";					\
	 source: NAME"_bg";						\
	 action: STATE_SET "default" 0.0;			\
	 target: NAME"_bg";					\
	 }							\
	 program	{					\
	 name: NAME"_send";					\
	 signal: "mouse,clicked,1";				\
	 source: NAME"_bg";					\
	 action: SIGNAL_EMIT "e,action,"NAME",click" "";	\
	 }							\
	 program	{					\
	 name: NAME"_disable";					\
	 signal: "e,state,"NAME",disabled";			\
	 source: "e";						\
	 action: STATE_SET "disabled" 0.0;			\
	 target: NAME"_img";					\
	 target: NAME"_event_eater";				\
	 }							\
	 program	{					\
	 name: NAME"_enable";					\
	 signal: "e,state,"NAME",enabled";			\
	 source: "e";						\
	 action: STATE_SET "default" 0.0;			\
	 target: NAME"_img";					\
	 target: NAME"_event_eater";				\
	 }							\

	 NAV_BUTTON_PROG("back");
	 NAV_BUTTON_PROG("forward");
	 NAV_BUTTON_PROG("up");
	 NAV_BUTTON_PROG("refresh");
	 NAV_BUTTON_PROG("favorites");
      }
   }

   group {
   name: "modules/efm_navigation/pathbar_scrollframe";
      images {
      image: "icon_left_arrow.png" COMP;
      image: "icon_right_arrow.png" COMP;
      }

      parts {
	 part {
	 name: "base";
	 type: RECT;
	 mouse_events: 1;
	    description {
	    state: "default" 0.0;
	       rel1 {
	       to_x: "left_arrow";
	       relative: 1.0 0.0;
	       offset: 0 -1;
	       }
	       rel2 {
	       to_x: "right_arrow";
	       relative: 0.0 1.0;
	       }
	    color: 0 0 0 0;
	    }
	 }
	 part {
	 name: "clipper";
	 type: RECT;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    rel1.to: "base";
	    rel2.to: "base";
	    }
	 }
	 part {
	 name: "e.swallow.content";
	 type: SWALLOW;
	 clip_to: "clipper";
	    description {
	    state: "default" 0.0;
	    rel1.to: "clipper";
	    rel2.to: "clipper";
	    }
	 }
	 part {
	 name: "left_arrow";
	 type: IMAGE;
	 mouse_events: 1;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	       /* aspect: 1.0 1.0;
		* aspect_preference: VERTICAL; */
	    align: 0.0 0.5;
	    min: 16 16;
	    max: 18 20;
	    image.normal: "icon_left_arrow.png";
	    }
	    description {
			state: "over" 0.0;
			inherit: "default" 0.0;
			image.normal: "icon_left_arrow.png";
		}
	 }
	 part {
	 name: "right_arrow";
	 type: IMAGE;
	 mouse_events: 1;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	    align: 1.0 0.5;
	    min: 16 16;
	    max: 18 20;
	    image.normal: "icon_right_arrow.png";
	    }
	    description {
			state: "over" 0.0;
			inherit: "default" 0.0;
			image.normal: "icon_right_arrow.png";
		}
	 }
	 part {
	 name: "e.dragable.hbar";
	 mouse_events: 0;
	    dragable {
	    x: 1 1 0;
	    y: 0 0 0;
	    confine: "base";
	    }
	    description {
	    state: "default" 0.0;
	    visible: 0;
	    rel1.to: "base";
	    rel2.to: "base";
	    }
	 }
	 part {
	 name: "event";
	 mouse_events: 1;
	 repeat_events: 1;
	    description {
	    state: "default" 0.0;
	    color: 0 0 0 0;
	    }
	 }
      }
      programs {
		OVER("right_arrow", "right_arrow")
		OVER("left_arrow", "left_arrow")
		  
		program {
			name: "sb_left";
			signal: "mouse,down,1";
			source: "left_arrow";
			action: DRAG_VAL_STEP -5.0 0.0;
			target: "e.dragable.hbar";
		}
		program {
			name: "sb_right";
			signal: "mouse,down,1";
			source: "right_arrow";
			action: DRAG_VAL_STEP 5.0 0.0;
			target: "e.dragable.hbar";
		}
	}

   }

   group {
   name: "modules/efm_navigation/pathbar_button";
      images {
      image: "button-normal.png" COMP;
      image: "button-pressed.png" COMP;
      image: "button-prelight.png" COMP;
      }

      parts {
	 part {
	 name: "bg";
	 type: IMAGE;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    min: 28 28;
	       image {
	       normal: "button-normal.png";
	       border: 9 9 9 9;
	       }
	    }
	    description {
	    state: "over" 0.0;
	    inherit: "default" 0.0;
	    image.normal: "button-prelight.png";
	    }
	    description {
	    state: "selected" 0.0;
	    inherit: "default" 0.0;
	    image.normal: "button-pressed.png";
	    }
	 }
	 //Label3 part is used to set the size of the button on pathbar, in fact it has the min option set to 1 1
	 part {
	 name: "label3";
	 type: TEXT;
	 mouse_events: 0;
	 scale: 1;
	    description {
		max: 200 32;
	    state: "default" 0.0;
	    rel1.to: "e.text.label";
	    rel2.to: "e.text.label";
	    visible: 0;
	       text {
	       font: "Sans:style=Bold";
	       text_source: "e.text.label";
	       size: 11;
	       min: 1 1;
	       }
	    }
	 }
	 part {
	 name: "label2";
	 type: TEXT;
	 mouse_events: 0;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	    max: 200 32;
	    rel1.to: "e.text.label";
	    rel2.to: "e.text.label";
	    color: 0 0 0 255;
	       text {
	       font: "Sans";
	       text_source: "e.text.label";
	       size: 11;
	       min: 0 1; //with min 0 1 the label will be truncate
	       align: 0.5 0.5;
	       elipsis: 0.0;
	       }
	    }
	    description {
	    state: "selected" 0.0;
	    inherit: "default" 0.0;
	    visible: 0;
	    }
	 }
	 part {
	 name: "e.text.label";
	 type: TEXT;
	 mouse_events: 0;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	    max: 200 32;
	    rel1.offset: 7 0;
	    rel2.offset: -8 -1;
	    visible: 0;
	    color: 0 0 0 255;
	       text {
	       font: "Sans:style=Bold";
	       size: 11;
	       min: 0 1; //with min 0 1 the label will be truncate
	       max: 1 0;
	       align: 0.5 0.5;
	       elipsis: 0.0;
	       }
	    }
	    description {
	    state: "selected" 0.0;
	    inherit: "default" 0.0;
	    visible: 1;
	    }
	 }
	 part {
	 name: "event";
	 type: RECT;
	 mouse_events: 1;
	 ignore_flags: ON_HOLD;
	    description {
	    state: "default" 0.0;
	    color: 0 0 0 0;
	    }
	 }
      }
      programs {
		  OVER("event", "bg")
	 program {
	 name: "click";
	 signal: "mouse,down,1";
	 source: "event";
	 action: STATE_SET "selected" 0.0;
	 target: "bg";
	 }
	 program {
	 name: "unclick";
	 signal: "mouse,up,1";
	 source: "event";
	 action: STATE_SET "default" 0.0;
	 target: "bg";
	 }
	 program {
	 name: "send";
	 signal: "mouse,clicked,1";
	 source: "event";
	 action: SIGNAL_EMIT "e,action,click" "";
	 }
	 program {
	 name: "select";
	 signal: "e,state,selected";
	 source: "e";
	 action: STATE_SET "selected" 0.0;
	 target: "e.text.label";
	 target: "label2";
	 }
	 program {
	 name: "normal";
	 signal: "e,state,default";
	 source: "e";
	 action: STATE_SET "default" 0.0;
	 target: "e.text.label";
	 target: "label2";
	 }
      }
   }

