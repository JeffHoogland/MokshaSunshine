/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *																	   *
 *							<Morning Sunshine>						   *
 *																	   *
 *			The E19 version of the OpenGEU Quarto di Luna Theme.       *
 *				Updated by Alberto "Duma" Verdoja					   *
 * 			All the credits to Luca De Marini and Art Pulse!		   *
 *																	   *
 *																	   *
 * 							give me a suggest: a.verdoja@gmail.com	   *
 * 						 or search me (Duma) on forums.bodhilinux.com  *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

data {
	item: "theme/name"		"Morning Sunshine";
	item: "theme/version"	"beta";
	item: "theme/author"	"Alberto 'Duma' Verdoja";
	item: "gtk-theme"       "Morning Sunshine";
	item: "icon-theme"      "Icons-Moksha-Sunshine"; 
	item: "version"			"110";
	
}

/// These stuffs can be changed also with Settings -> Look -> Colors, but
/// won't affect the Elementary widget
//Background of Window
#define BACADA(TRASP) 186\ 202\ 218\ TRASP

#define BGWIN 242\ 225\ 190

//Focus Color
#define SELECTED 186\ 202\ 218

//Color of foreground: e.g.: labels on buttons, on menus
#define FG_COLOR 41\ 41\ 41

//The color of the Window Border
#define RADIANCE_COLOR BGWIN

//Color of selected foreground
#define SEL_FG_COLOR FG_COLOR

//Color of insensitive foreground
#define INSENSITIVE_FG_COLOR 152\ 148\ 144

//Color of EDJ Tooltips
#define TOOLTIP_COLOR 0\ 0\ 0\ 255

//Color of Label on EDJ Tooltips
#define TOOLTIP_FG_COLOR 255\ 255\ 255

//ELM Tooltip Opacity: they take RADIANCE_COLOR as background color
#define TOOLTIP_OPACITY 200

//Color of error on background entry (used only on desklock at the moment)
#define ERROR_BG_COLOR 237\ 123\ 123
///

///Panel settings
//Systray Background Color for Xembed
#define RADCONF_SYS_BG "186 202 218"

//Pixmap showed on hidden shelf
#define RADCONF_SHELF_HID_SIZE 2

#include "macros.edc"
#include "color_class.edc"
 
collections { /* begin the collection of edje groups that are in this file */

#include "shelf.edc"
#include "systray.edc"
//#include "colors.edc"
#include "efm_toolbar.edc"
#include "tasks.edc"
#include "clock.edc"
#include "tclock.edc"
#include "ibaribox.edc"
#include "sysconbutton.edc"
#include "comp.edc"
#include "everything.edc"
#include "battery.edc"
#include "mixer.edc"
#include "music_control.edc"
#include "notification.edc"
#include "packagekit.edc"
#include "randr.edc"
#include "mokshapreview.edc"
#include "border-icons.edc"

//ELM Support
#include "elm/access.edc"
#include "elm/actionslider.edc"
#include "elm/bg.edc"
//elm/border.edc is down, near border.edc
#include "elm/bubble.edc"
#include "elm/button.edc"
#include "elm/calendar.edc"
#include "elm/check.edc"
#include "elm/clock.edc"
#include "elm/colorsel.edc"
#include "elm/conform.edc"
#include "elm/ctxpopup.edc"
#include "elm/datetime.edc"
#include "elm/dayselector.edc"
#include "elm/diskselector.edc"
//elm/entry.edc is down, near e/widgets/scrollframe
#include "elm/epulse_playbacks.edc"
#include "elm/fileselector.edc"
#include "elm/flipselector.edc"
#include "elm/focus.edc"
//elm/frame.edc is down, near e/widgets/frame
#include "elm/genlist.edc"
#include "elm/gengrid.edc"
#include "elm/hover.edc"
#include "elm/icon.edc"
#include "elm/index.edc"
#include "elm/inwin.edc"
#include "elm/label.edc"
#include "elm/layout.edc"
#include "elm/list.edc"
//elm/map.edc is down, near e/widget/scrollframe
//elm/menu is down, near e/widgets/menu/default/separator
#include "elm/multibuttonentry.edc"
#include "elm/naviframe.edc"
#include "elm/notify.edc"
#include "elm/panel.edc"
#include "elm/panes.edc"
#include "elm/photo.edc"
//elm/photocam.edc is down, near e/widget/scrollframe
#include "elm/player.edc"
//elm/pointer.edc is down, near e/pointer/enlightenment/default/color
#include "elm/popup.edc"
#include "elm/progress.edc"
#include "elm/radio.edc"
//elm/scroller.edc is down, near e/widgets/scrollframe
#include "elm/segment_control.edc"
//elm/separator.edc" is down, near e/widgets/menu/default/separator
#include "elm/slider.edc"
#include "elm/slideshow.edc"
#include "elm/spinner.edc"
#include "elm/thumb.edc"
#include "elm/toolbar.edc"
#include "elm/tooltip.edc"
#include "elm/video.edc"
#include "elm/win.edc"

#include "wallpaper.edc"

/////////////////////////////////////////////////////////////////////////////
	/*** DEFAULT WALLPAPER ***/
	group { name: "e/desktop/background"; /* the name of the group */
		alias: "e/desklock/background";

		/* CHOOSE YOUR BACKGROUND STYLE!! */
		//BACKGROUND_ANIMATED
		BACKGROUND_LIGHT
		
	}

	group { name: "e/desktop/background/scrollframe";
		parts {
			part { name: "clipper";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
				}
			}
			part { name: "e.swallow.content";
				clip_to: "clipper";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.offset: 0 0;
					rel2 {
						relative: 0.0  0.0;
						offset:	-1	-1;
					}
				}
			}
		}
	}

images {
//~ border: default border style
//~ image: "images/window-border_im9.png" COMP; 	/* bottom center */
//~ image: "images/window-border_im10.png" COMP; 	/* bottom left */
//~ image: "images/window-border_im11.png" COMP; 	/* bottom right */
//~ image: "images/window-border_im12.png" COMP;	/* shadow overlay */

//~ border: dialog border style
//~ image: "images/window-border_im18.png" COMP; 	/*  */
//~ image: "images/window-border_im19.png" COMP; 	/*  */
//~ image: "images/window-border_im20.png" COMP;	/*  */

//~ border: application blend style
//~ image: "images/window-border_im15.png" COMP; 	/* bottom left */
//~ image: "images/window-border_im16.png" COMP;	/* bottom center */
//~ image: "images/window-border_im17.png" COMP;	/* bottom right */

//~ border buttons
//~ image: "images/window-border_bt0.png" COMP; /* base */
//~ image: "images/window-border_bt2.png" COMP; /* minimize */
//~ image: "images/window-border_bt3.png" COMP; /* maximize */
//~ image: "images/window-border_bt4.png" COMP; /* close */
//~ image: "images/window-border_bt5.png" COMP; /* base for border menu */

image: "bd_top_left.png" COMP;
image: "bd_top_right.png" COMP;
image: "bd_top_lefts.png" COMP;
image: "bd_top_rights.png" COMP;

image: "bd_bottom_left.png" COMP;
image: "bd_bottom_right.png" COMP;
image: "bd_bottom_lefts.png" COMP;
image: "bd_bottom_rights.png" COMP;
image: "bd_bottom.png" COMP;

image: "bd_button_close_unfocused.png" COMP;
image: "bd_button_max_unfocused.png" COMP;
image: "bd_button_min_unfocused.png" COMP;

image: "bd_top_over.png" COMP;
image: "bd_top_overm.png" COMP;
image: "bd_top_right_over.png" COMP;
image: "bd_top_right_overs.png" COMP;

//~ image: "bd_left.png" COMP;
image: "win_shadow.png" COMP;
}
#include "border.edc"
#include "elm/border.edc"


/////////////////////////////////////////////////////////////////////////////
	/*** THE DEFAULT MOUSE CURSOR - COLOR ***/
	group { name: "e/pointer/enlightenment/default/color";
		images {
			image: "pointer.png" COMP;
		}

		parts {
			part { name: "base";
				mouse_events: 0;
				description { state: "default" 0.0;
					aspect: 0.71875 0.71875; /* force a specific aspect ratio so
							* when it gets scaled it wont squash
							* or stretch */
					aspect_preference: BOTH; /* both axes control aspect - thus it
							* will be WITHIN the bounds the axes
							* of thre part describe */
					image {
						normal: "pointer.png";
					}
					rel1 {
						relative: 0.0 0.0;
						offset: -10 0;
					}
				}
			}
		}
	}

#include "elm/pointer.edc"

group { name: "e/pointer/enlightenment/resize_br/color";
   inherit: "e/pointer/enlightenment/default/color";
   images.image: "pager_window.png" COMP;
   parts {
      part { name: "box";
         insert_after: "base";
         description { state: "default" 0.0;
            image.normal: "pager_window.png";
            image.border: 7 7 7 7;
            rel1.relative: 0.3 0.3;
            rel2.relative: 0.7 0.7;
         }
         description { state: "p1" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 1.0;
         }
      }
   }
   programs {
      program { name: "box1";
         signal: "load"; source: "";
         action: STATE_SET "p1" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box2";
      }
      program { name: "box2";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box1";
      }
   }
}

group { name: "e/pointer/enlightenment/resize_tr/color";
   inherit: "e/pointer/enlightenment/resize_br/color";
   parts {
      part { name: "box";
         description { state: "default" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 0.7 0.7;
         }
         description { state: "p1" 0.0;
            rel1.relative: 0.3 0.0;
            rel2.relative: 1.0 0.7;
         }
      }
   }
}

group { name: "e/pointer/enlightenment/resize_tl/color";
   inherit: "e/pointer/enlightenment/resize_br/color";
   parts {
      part { name: "box";
         description { state: "default" 0.0;
            rel1.relative: 0.6 0.6;
            rel2.relative: 1.0 1.0;
         }
         description { state: "p1" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/pointer/enlightenment/resize_bl/color";
   inherit: "e/pointer/enlightenment/resize_br/color";
   parts {
      part { name: "box";
         description { state: "default" 0.0;
            rel1.relative: 0.7 0.3;
            rel2.relative: 1.0 0.7;
         }
         description { state: "p1" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/pointer/enlightenment/resize_b/color";
   inherit: "e/pointer/enlightenment/resize_br/color";
   parts {
      part { name: "box";
         description { state: "default" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 0.7;
         }
         description { state: "p1" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/pointer/enlightenment/resize_t/color";
   inherit: "e/pointer/enlightenment/resize_br/color";
   parts {
      part { name: "box";
         description { state: "default" 0.0;
            rel1.relative: 0.3 0.6;
            rel2.relative: 1.0 1.0;
         }
         description { state: "p1" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/pointer/enlightenment/resize_l/color";
   inherit: "e/pointer/enlightenment/resize_br/color";
   parts {
      part { name: "box";
         description { state: "default" 0.0;
            rel1.relative: 0.6 0.3;
            rel2.relative: 1.0 1.0;
         }
         description { state: "p1" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/pointer/enlightenment/resize_r/color";
   inherit: "e/pointer/enlightenment/resize_br/color";
   parts {
      part { name: "box";
         description { state: "default" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 0.7 1.0;
         }
         description { state: "p1" 0.0;
            rel1.relative: 0.3 0.3;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/pointer/enlightenment/hand/color";
		alias: "e/pointer/enlightenment/move/color";
   inherit: "e/pointer/enlightenment/default/color";
   images.image: "pager_window.png" COMP;
   parts {
      part { name: "box";
         insert_after: "base";
         description { state: "default" 0.0;
            image.normal: "pager_window.png";
            image.border: 7 7 7 7;
            rel1.relative: 0.5 0.5;
            rel2.relative: 1.0 1.0;
         }
         description { state: "p1" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.5 0.2;
            rel2.relative: 1.0 0.7;
         }
         description { state: "p2" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.5;
            rel2.relative: 0.5 1.0;
         }
         description { state: "p3" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.2 0.2;
            rel2.relative: 0.7 0.7;
         }
         description { state: "p4" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.3 0.5;
            rel2.relative: 0.8 1.0;
         }
      }
   }
   programs {
      program { name: "box1";
         signal: "load"; source: "";
         action: STATE_SET "p1" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box2";
      }
      program { name: "box2";
         action: STATE_SET "p2" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box3";
      }
      program { name: "box3";
         action: STATE_SET "p3" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box4";
      }
      program { name: "box4";
         action: STATE_SET "p4" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box5";
      }
      program { name: "box5";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box1";
      }
   }
}

group { name: "e/pointer/enlightenment/rotate/color";
   inherit: "e/pointer/enlightenment/default/color";
   images.image: "pager_window.png" COMP;
   parts {
      part { name: "box";
         insert_after: "base";
         description { state: "default" 0.0;
            image.normal: "pager_window.png";
            image.border: 7 7 7 7;
            rel1.relative: 0.3 0.3;
            rel2.relative: 0.8 0.8;
            map.on: 1;
            map.smooth: 1;
            map.rotation.center: "box";
         }
         description { state: "p1" 0.0;
            inherit: "default" 0.0;
            map.rotation.z: 30;
         }
         description { state: "p2" 0.0;
            inherit: "default" 0.0;
            map.rotation.z: -60;
         }
      }
   }
   programs {
      program { name: "box1";
         signal: "load"; source: "";
         action: STATE_SET "p1" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box2";
      }
      program { name: "box2";
         action: STATE_SET "p2" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box3";
      }
      program { name: "box3";
         action: STATE_SET "p1" 0.0;
         transition: SINUSOIDAL 0.5;
         target: "box";
         after: "box2";
      }
   }
}

/////////////////////////////////////////////////////////////////////////////
	/*** THE DEFAULT MOUSE CURSOR - MONOCHROME. REALLY BORING ***/
	/* This pointer is used if the Xserver does not support full ARGB color
			* pointers. This can happen if X is old or the driver or libxcursor did
			* not exist when ecore was compiled. since the cursor will be literally
			* reduced down to black and white whith a single transparency mask,
			* colors other than black and whigte will be lost (and be approximated
			* with dithering) and any translucency other than completely opaque or
			* completely transparent pixels will also be lost. it then makes sense
			* to have a special black and white only image with no semi-transparency
			* so when this is displayed it will look directly as intended by the
			* artist */
	group { name: "e/pointer/enlightenment/default/mono";
		images {
			image: "pointer_mono.png" COMP; /* a simple mono cursor image */
		}
		parts {
			part { name: "e/pointer";
				mouse_events:  0;
				description {
					state:  "default" 0.0;
					image {
						normal: "pointer_mono.png";
					}
				}
			}
			part { name: "hotspot"; /* this cursor also has a hotspot */
				type: SWALLOW;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						relative: 0.0 0.0;
						offset: 1 1;
					}
					rel2 {
						relative: 0.0 0.0;
						offset: 1 1;
					}
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** TOOLBAR */
	group { name: "e/widgets/toolbar";
		images {
			image: "button-insensitive.png" COMP;
			image: "icon_left_arrow.png" COMP;
			image: "icon_right_arrow.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events: 1;
				description { state: "default" 0.0;
					rel1 {
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2.offset: -3 -3;
					image {
						normal: "button-insensitive.png";
						border: 4 4 4 4;
					}
					fill.smooth: 0;
				}
			}
			part { name: "clipper";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 {
						to: "base";
						offset: 2 2;
					}
					rel2 {
						to: "base";
						offset: -3 -3;
					}
				}
			}
			part { name: "e.swallow.content";
				clip_to: "clipper";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					rel1.to: "clipper";
					rel2.to: "clipper";
				}
			}
			part { name: "left_arrow";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					image.normal: "icon_left_arrow.png";
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					align: 0.0 0.5;
					min: 32 32;
					max: 32 32;
				}
				description { state: "hidden" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 255 255 255 255;
				}
			}
			part { name: "right_arrow";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					image.normal: "icon_right_arrow.png";
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					align: 1.0 0.5;
					min: 32 32;
					max: 32 32;
				}
				description { state: "hidden" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 255 255 255 255;
				}
			}
			part { name: "e.dragable.hbar";
				mouse_events: 0;
				dragable {
					x: 1 1 0;
					y: 0 0 0;
					confine: "base";
				}
				description { state: "default" 0.0;
					visible: 0;
					rel1.to: "base";
					rel2.to: "base";
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
		}
		programs {
			program { name: "sb_hbar_show";
				signal: "e,action,show,hbar";
				source: "e";
				action:  STATE_SET "default" 0.0;
				transition: LINEAR 0.5;
				target: "left_arrow";
				target: "right_arrow";
			}
			program { name: "sb_hbar_hide";
				signal: "e,action,hide,hbar";
				source: "e";
				action:  STATE_SET "hidden" 0.0;
				target: "left_arrow";
				target: "right_arrow";
				transition: LINEAR 0.5;
			}
			program { name: "sb_left";
				signal: "mouse,down,1";
				source: "left_arrow";
				//~ action:  DRAG_VAL_STEP -1.0 0.0;
				action: SIGNAL_EMIT "e,action,prev" "e";
				target: "e.dragable.hbar";
				after: "arrow1_repeat";
			}
			program { name: "arrow1_repeat";
				action: SIGNAL_EMIT "e,action,prev" "e";
				in: 0.3 0.0;
				after: "arrow1_repeat";
			}
			program {
				signal: "mouse,up,1"; source: "left_arrow";
				action: ACTION_STOP;
				target: "arrow1_repeat";
			} 
			program {
				signal: "mouse,down,1*"; source: "left_arrow";
				action: STATE_SET "clicked" 0.0;
				target: "left_arrow";
			}
			program {
				signal: "mouse,up,1"; source: "left_arrow";
				action: STATE_SET "default" 0.0;
				target: "left_arrow";
			}
			
			program { name: "sb_right";
				signal: "mouse,down,1";
				source: "right_arrow";
				//~ action:  DRAG_VAL_STEP 8.0 0.0;
				action: SIGNAL_EMIT "e,action,next" "e";
				target: "e.dragable.hbar";
				after: "arrow2_repeat";
			}
			program { name: "arrow2_repeat";
				action: SIGNAL_EMIT "e,action,next" "e";
				in: 0.3 0.0;
				after: "arrow2_repeat";
			}
			program {
				signal: "mouse,up,1"; source: "right_arrow";
				action: ACTION_STOP;
				target: "arrow2_repeat";
			} 
			program {
				signal: "mouse,down,1*"; source: "right_arrow";
				action: STATE_SET "clicked" 0.0;
				target: "right_arrow";
			}
			program {
				signal: "mouse,up,1"; source: "right_arrow";
				action: STATE_SET "default" 0.0;
				target: "right_arrow";
			}
			
		}
	}

	group { name: "e/widgets/toolbar/item";
		images {
			image: "toolbar_sel.png" COMP;
		}
		parts {
			part { name: "label2";
				type: TEXT;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
					color: 0 0 0 255;
					text {
						font: "Sans";
						text_source: "e.text.label";
						size: 10;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "fileman_icon";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "toolbar_sel.png";
						border: 3 3 0 0;
					}
					fill.smooth: 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 {
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						to_y: "e.text.label";
						relative: 1.0 0.0;
						offset: -3 -1;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						offset:	0 -1;
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-1 -1;
					}
					visible: 0;
					color: 224 224 224 255;
					color3: 0 0 0 32;
					text {
						font: "Sans:style=Bold";
						size: 10;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "fileman_icon";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "bg";
				target:  "e.text.label";
				target:  "label2";
				transition: LINEAR 0.2;
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "bg";
				target:  "e.text.label";
				target:  "label2";
				transition: LINEAR 0.1;
			}
			program { name: "go";
				signal:  "mouse,up,1";
				source:  "event";
				action:  SIGNAL_EMIT "e,action,click" "e";
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** MENUS ***/
	/* this is the background for all menus. it also may optionally display a
			* title for the menu. this is wrapped around all the menu items that are
			* laid out in a vertical list from top to bottom */
	group { name: "e/widgets/menu/default/background";
		images {
			image: "base_bg.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: IMAGE;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					image {
						normal: "base_bg.png";
						border: 2 2 2 2;
					}
					fill {
						smooth: 0;
					}
				}
			}
			part {
				name: "e.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					rel1 {
						to: "base"; 
						relative: 0.0 0.0; 
						offset: 3 2; 
					}
					rel2 { 
						relative: 1.0 1.0; 
						offset: -5 -5; 
					}
				} 
			}
		}
	}

	/* this is placed as a horizontal separator between menu items in the
			* vertical menu item list. it has no functionality other than being
			* a visual separator */
	group { name: "e/widgets/menu/default/separator";
		images {
			image: "menu_sep.png" COMP;
		}
		parts {
			part { name: "separator";
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 16 2;
					rel1.offset: 2 2;
					rel2.offset: -3 -3;
					image {
						normal: "menu_sep.png";
						border: 2 2 0 0;
					}
					fill.smooth: 0;
				}
			}
		}
	}

#include "elm/menu.edc"
#include "elm/separator.edc"

	/* this is used for regular menu items. this is what swallows/holds the
			* whole line of the menu item, icon, check/radio mark, label and submenu
			* indicator, where applicable */
	group { name: "e/widgets/menu/default/item_bg";
		/* this is idential to the regular menu item above, but used only for
				* items that have a submenu. this is to allow for a possible different
				* look for submenu holding items. here this is identical to to the
				* normal menu item, thus we are making use of the alias directive that
				* gives a group the ability to go by manu names */
		alias: "e/widgets/menu/default/submenu_bg";
		images {
			image: "menuitem.png" COMP;
		}
		parts {
			part { name: "bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -3;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 5;
					}
					image {
						normal: "menuitem.png";
						border: 4 4 4 4;
					}
					fill.smooth: 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 0;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 0;
					}
				}
			}
			part { name: "e.swallow.content"; /* all item content will go here */
				type: SWALLOW;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.offset: 2 1;
					rel2.offset: -3 -2;
				}
			}
			part { name: "events"; type: RECT;
         description { state: "default";
            color: 0 0 0 0;
         }
	  }
		}
		programs {
			program { name: "sel"; /* when the menu item is selected (hilighted)
						* this program is run to give the whole item
						* an overall selected look */
				signal: "e,state,selected";
				source: "e";
				action: STATE_SET "selected" 0.0;
				transition: LINEAR 0.2;
				target: "bg";
			}
			program { name: "unsel"; /* when selection is removed from the menu
					* item */
				signal: "e,state,unselected";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.1;
				target: "bg";
			}
		}
	}

	/* this group holds a menu icon. here we just use it to add padding around
			* the icon. And to gray-out when disabled */
	group { name: "e/widgets/menu/default/icon";
		parts {
			part { name: "clip";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
				description { state: "disabled" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "e.swallow.content"; /* icon is swallowed here */
				type: SWALLOW;
				clip_to: "clip";
				description {
					state: "default" 0.0;
					rel1 {
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: -3 -3;
					}
				}
			}
		}
		programs {
			program { name: "enable"; /* enable */
				signal: "e,state,enable";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "clip";
			}
			program { name: "disable"; /* disable */
				signal: "e,state,disable";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "clip";
			}
		}
	}

	/* this is the actual text label for the menu item */
	group { name: "e/widgets/menu/default/label";
		parts {
			part { name: "e.text.label"; /* e sets the text of this */
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						relative: 0.0 0.0;
						offset: 1 -1;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: -10 1;
					}
					color: 0 0 0 255;
					color3: 0 0 0 0;
					color_class: "menu_item";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "menu_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					color3: 0 0 0 64;
					color_class: "menu_item";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 110 110 110 255;
					color3: 0 0 0 0;
				}
			}
		}
		programs {
			program { name: "sel"; /* when the menu item is actually selected */
				signal: "e,state,selected";
				source: "e";
				action: STATE_SET "selected" 0.0;
				transition: LINEAR 0.2;
				target: "e.text.label";
			}
			program { name: "unsel"; /* on de-select */
				signal: "e,state,unselected";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.3;
				target: "e.text.label";
			}
			program { name: "enable"; /* enable */
				signal: "e,state,enable";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.3;
				target: "e.text.label";
			}
			program { name: "disable"; /* disable */
				signal: "e,state,disable";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				//transition: LINEAR 0.3;
				target: "e.text.label";
			}
		}
	}

	/* this is a small arrow on the right of the menu item to indicate that it
			* has a submenu after it */
	group { name: "e/widgets/menu/default/submenu";
		images {
			image: "menu_arrow_normal.png" COMP;
			image: "menu_arrow_sel.png" COMP;
		}
		parts {
			part { name: "arrow";
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 9 12;
					max: 9 12;
					rel1 {
						relative: 0.0 0.0;
						offset: 0 1;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: -3 -1;
					}
					image.normal: "menu_arrow_normal.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "menu_arrow_sel.png";
				}
			}
		}
		programs {
			program { name: "sel";
				signal: "e,state,selected";
				source: "e";
				action: STATE_SET "selected" 0.0;
				target: "arrow";
			}
			program { name: "unsel";
				signal: "e,state,unselected";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "arrow";
			}
		}
	}

	/* this is placed left of the icon in a menu item (if any icon) or left
			* of the label if no icon is present. this is a checkbox to indicate if
			* the menu item is enabled or disabled */
	group { name: "e/widgets/menu/default/check";
		images {
			image: "check_base.png" COMP;
			image: "check_on.png" COMP;
			image: "check_sel.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 18 19;
					max: 18 19;
					image.normal: "check_base.png";
				}
			}
			part { name: "mark";
				mouse_events: 0;
				clip_to: "mark_hold";
				description { state: "default" 0.0;
					rel1.to: "mark_hold";
					rel2.to: "mark_hold";
					image.normal: "check_on.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "check_sel.png";
				}
			}
			part { name: "mark_hold";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						to: "base";
						offset: -5 -5;
					}
					rel2 {
						to: "base";
						offset: 4 4;
					}
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
				}
			}
		}
		programs {
			program { name: "sel"; /* on selection of the menu item */
				signal: "e,state,selected";
				source: "e";
				action: STATE_SET "selected" 0.0;
				target: "mark";
			}
			program { name: "unsel"; /* de-select */
				signal: "e,state,unselected";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "mark";
			}
			program { name: "on"; /* if the checkmark is to be displayed */
				signal: "e,state,on";
				source: "e";
				action: STATE_SET "on" 0.0;
				transition: LINEAR 0.15;
				target: "mark_hold";
			}
			program { name: "off"; /* check mark is not to be displayed */
				signal: "e,state,off";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.2;
				target: "mark_hold";
			}
		}
	}

	/* for a radio menu item - same as check, but only one of a group of radio
			* menu item can be selected at any one time */
	group { name: "e/widgets/menu/default/radio";
		images {
			image: "radio_base.png" COMP;
			image: "radio_on.png" COMP;
			image: "radio_sel.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 19 19;
					max: 19 19;
					image.normal: "radio_base.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "menu_arrow_sel.png";
				}
			}
			part { name: "mark";
				mouse_events: 0;
				clip_to: "mark_hold";
				description { state: "default" 0.0;
					rel1.to: "mark_hold";
					rel2.to: "mark_hold";
					image.normal: "radio_on.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "radio_sel.png";
				}
			}
			part { name: "mark_hold";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						to: "base";
						offset: -5 -5;
					}
					rel2 {
						to: "base";
						offset: 4 4;
					}
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
				}
			}
		}
		programs {
			program { name: "sel";
				signal: "e,state,selected";
				source: "e";
				action: STATE_SET "selected" 0.0;
				target: "mark";
			}
			program { name: "unsel";
				signal: "e,state,unselected";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "mark";
			}
			program { name: "on";
				signal: "e,state,on";
				source: "e";
				action: STATE_SET "on" 0.0;
				transition: LINEAR 0.15;
				target: "mark_hold";
			}
			program { name: "off";
				signal: "e,state,off";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.2;
				target: "mark_hold";
			}
		}
	}


/////////////////////////////////////////////////////////////////////////////
	/*** MOD: CONF_EDGEBINDINGS ***/
	/* This group draws the edge and corners for the user to pick.
			* XXX: Needs some love from masters of the brush! */
	group {
		name: "e/modules/conf_edgebindings/selection"; // for gadget
		parts {
			part { name: "e.swallow.background";
				type: SWALLOW;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 210 150;
					rel1.offset: 4 4;
					rel2 {
						relative: 0.5 1;
						offset: -2 -5;
					}
				}
			}
			part { name: "e.edge.top_left";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						to: "e.swallow.background";
					}
					rel2 {
						relative: 0 0;
						offset: 20 20;
						to: "e.swallow.background";
					}
					color: 255 0 0 150;
				}
			}
			part { name: "e.edge.top";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						offset: 20 0;
						to: "e.swallow.background";
					}
					rel2 {
						relative: 1 0;
						offset: -20 15;
						to: "e.swallow.background";
					}
					color: 186 202 218 150;
				}
			}
			part { name: "e.edge.top_right";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						relative: 1 0;
						offset: -20 0;
						to: "e.swallow.background";
					}
					rel2 {
						relative: 1 0;
						offset: 0 20;
						to: "e.swallow.background";
					}
					color: 255 0 0 150;
				}
			}
			part { name: "e.edge.right";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						relative: 1 0;
						offset: -15 20;
						to: "e.swallow.background";
					}
					rel2 {
						relative: 1 1;
						offset: 0 -20;
						to: "e.swallow.background";
					}
					color: 186 202 218 150;
				}
			}
			part { name: "e.edge.bottom_right";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						relative: 1 1;
						offset: -20 -20;
						to: "e.swallow.background";
					}
					rel2 {
						relative: 1 1;
						offset: 0 0;
						to: "e.swallow.background";
					}
					color: 255 0 0 150;
				}
			}
			part { name: "e.edge.bottom";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						relative: 0 1;
						offset: 20 -15;
						to: "e.swallow.background";
					}
					rel2 {
						relative: 1 1;
						offset: -20 0;
						to: "e.swallow.background";
					}
					color: 186 202 218 150;
				}
			}
			part { name: "e.edge.bottom_left";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						relative: 0 1;
						offset: 0 -20;
						to: "e.swallow.background";
					}
					rel2 {
						relative: 0 1;
						offset: 20 0;
						to: "e.swallow.background";
					}
					color: 255 0 0 150;
				}
			}
			part { name: "e.edge.left";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						relative: 0 0;
						offset: 0 20;
						to: "e.swallow.background";
					}
					rel2 {
						relative: 0 1;
						offset: 15 -20;
						to: "e.swallow.background";
					}
					color: 186 202 218 150;
				}
			}

         part { name: "e.box"; type: BOX;
         description { state: "default" 0.0;
            rel1 {
               relative: 1 1;
               offset: 50 4;
               to_x: "e.edge.bottom_right";
               to_y: "e.text.description";
            }
            rel2 {
               offset: -50 24;
               to_y: "e.text.description";
            }
            box { layout: "horizontal";
               padding: 0 0;
               align: 0.5 0.5;
               min: 1 1;
            }
         }
      }
         part {
            name: "e.swallow.slider";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  offset: 5 2;
                  to_x: "e.swallow.background";
                  to_y: "e.box";
               }
               rel2 {
                  relative: 1 1;
                  offset: -5 -5;
               }
            }
         }
         part {
            name: "e.text.description";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  offset: 5 4;
                  to_x: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: -5 -45;
               }
               text {
                  style: "dialog_style";
                  min: 1 1;
                  ellipsis: -1;
               }
            }
         }
         part {
            name: "e.text.selection";
            type: TEXT;
            effect: GLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 1 1;
                  offset: 5 5;
                  to: "e.edge.top_left";
               }
               rel2 {
                  relative: 0 0;
                  offset: -5 -5;
                  to: "e.edge.bottom_right";
               }
               color: 0 0 0 255;
               color2: 255 255 255 100;
               color3: 255 255 255 200;
               text {
                  font: "Sans:style=Bold";
                  size: 11;
                  align: 0.5 0.5;
                  fit: 1 1;
               }
            }
         }
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** MOD: START ***/
	/* This is for the "start" module - i.e. a "start" button. It simply
			* provides such a button/gadget in a shelf that pops up E's main
			* menu - a nice familiarity feature for those from the windows world.
			* Other than that it really does nothing, so this button can be quite
			* imaginative as it has few functional requirements */
	group { name: "e/modules/start/main";
		max: 149 149;
		images {
			image: "logo.png" COMP;
		}
		parts {
			part { name: "base";
				description { state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					image.normal: "logo.png";
					map.on: 1;
					map.smooth: 1;
					map.rotation.center: "base";
				}
				description { state: "spin" 0.0;
					inherit: "default" 0.0;
					map.rotation.z: 360;
				}
			}
		}
		programs {
			program {
         signal: "e,state,focused";
         source: "e";
         transition: LINEAR 1.0;
         action: STATE_SET "spin" 0.0;
         target: "base";
      }
      program {
         signal: "e,state,unfocused";
         source: "e";
         transition: LINEAR 0.0;
         action: STATE_SET "default" 0.0;
         target: "base";
      }
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** GADMAN ***/

	group { name: "e/gadman/popup";
		images.image: "dia_bg.png" COMP;
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
				color_class: "dialog_base";
					image {
						normal: "dia_bg.png";
						border: 15 15 2 2;
					}
					fill.smooth: 0;
				}
			}
			part { name: "e.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.offset: 3 3;
					rel2.offset: -4 -4;
				}
			}
		}
	}


/////////////////////////////////////////////////////////////////////////////
	/*** MOD: PAGER ***/
	group { name: "e/modules/pager/popup";
	alias: "e/modules/pager16/popup";
	inherit: "e/gadman/popup";

		images {
			image: "dia_topshad.png" COMP;
			image: "bd_top.png" COMP;
		}
		parts {
			part { name: "e.text.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 0.0;
					rel1 {
						relative: 0.0 0.0;
						offset: 0 0;
					}
					rel2 {
						relative: 1.0 0.0;
						offset: -1 0;
					}
					color: 0 0 0 255;
					text {
						font: "Sans:style=Bold";
						size: 10;
						align: 0.5 0.0;
						min: 1 1;
					}
				}
			}
			part { name: "e.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1 {
						to_y: "e.text.label";
						relative: 0.0 1.0;
						offset: 12 11;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: -13 -13;
					}
				}
			}
		}
	}
	group { name: "e/modules/pager/desk";
		images {
			image: "button-insensitive.png" COMP;
			image: "button-normal.png" COMP;
		}
		parts {
			part { name: "zoom";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					rel1.offset: 1 1;
					rel2.offset: -2 -2;
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -2 -2;
					rel2.offset: 1 1;
				}
			}
			part { name: "base";
				description { state: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						to: "zoom";
						offset: -1 -1;
					}
					rel2 {
						to: "zoom";
						offset: 0 0;
					}
					image.normal: "button-insensitive.png";
					image.border: 5 5 5 5;
					fill.smooth: 0;
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
				}
			}
			part { name: "base2";
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						to: "zoom";
						offset: -11 -11;
					}
					rel2 {
						to: "zoom";
						offset: 10 10;
					}
					image.normal: "button-normal.png";
					image.border: 5 5 5 5;
					fill.smooth: 0;
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: -1 -1;
					rel2.offset: 0 0;
				}
			}
			part { name: "clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 255 255 255 128;
					rel1 {
						to: "base";
						offset: 4 4;
					}
					rel2 {
						to: "base";
						offset: -5 -5;
					}
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part { name: "e.swallow.content";
				type: SWALLOW;
				clip_to: "clip";
				description { state: "default" 0.0;
					rel1.to: "clip";
					rel2.to: "clip";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "clip";
					rel2.to: "clip";
					color: 0 0 0 0;
					color_class: "module_label";
					text {
						font: "Sans:style=Bold";
						size: 8;
						align: 0.5 0.5;
						text_class: "module_small";
					}
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
		}
		programs {
			program { name: "on";
				signal: "e,state,selected";
				source: "e";
				action: STATE_SET "active" 0.0;
				transition: LINEAR 0.2;
				target: "base";
				target: "base2";
				target: "clip";
			}
			program { name: "off";
				signal: "e,state,unselected";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.3;
				target: "base";
				target: "base2";
				target: "clip";
			}
			program { name: "drg";
				signal: "e,action,drag,in";
				source: "e";
				action: STATE_SET "active" 0.0;
				transition: SINUSOIDAL 0.2;
				target: "zoom";
				after: "drg2";
			}
			program { name: "drg2";
				action: STATE_SET "default" 0.0;
				transition: SINUSOIDAL 0.2;
				target: "zoom";
				after: "drg";
			}
			program { name: "ndrg";
				signal: "e,action,drag,out";
				source: "e";
				action: ACTION_STOP;
				target: "drg";
				target: "drg2";
				after: "ndrg2";
			}
			program { name: "ndrg2";
				action: STATE_SET "default" 0.0;
				target: "zoom";
			}

			program { name: "name_show";
				signal: "mouse,in";
				source: "over3";
				action: STATE_SET "active" 0.0;
				transition: SINUSOIDAL 0.1;
				target: "e.text.label";
			}
			program { name: "name_hide";
				signal: "mouse,out";
				source: "over3";
				action: STATE_SET "default" 0.0;
				transition: SINUSOIDAL 0.2;
				target: "e.text.label";
			}
// don't have any states/anim for urgent windows on a desktop
//			program { name: "xx";
//				signal: "e,state,urgent";
//				source: "e";
//			}
// don't have any states/anim for urgent windows on a desktop
//			program { name: "xx";
//				signal: "e,state,not_urgent";
//				source: "e";
//			}
		}
	}
	group { name: "e/modules/pager/window";
		images {
			image: "pager_window.png" COMP;
			image: "pager_window_unsel.png" COMP;
			image: "exclam.png" COMP;
		}
		parts {
			part { name: "icon_area";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "icon_area2";
				type: RECT;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "uw0" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -3 -2;
					rel2.offset: -4 -3;
				}
				description { state: "uw1" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 5 -2;
					rel2.offset: 4 -3;
				}
				description { state: "uw2" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -1 4;
					rel2.offset: -2 3;
				}
				description { state: "uw3" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -2 -1;
					rel2.offset: -3 -2;
				}
				description { state: "uw4" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -4 1;
					rel2.offset: -5 0;
				}
			}
			part { name: "base";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "icon_area2";
						offset: -3 -3;
					}
					rel2 {
						to: "icon_area2";
						offset: 2 2;
					}
					image.normal: "pager_window_unsel.png";
					image.border: 9 9 7 6;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "pager_window.png";
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					max: 24  24;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					rel1 {
						to: "base";
						offset: 4 7;
					}
					rel2 {
						to: "base";
						offset: -5 -7;
					}
				}
			}
			part {
				name: "urgent";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					image.normal: "exclam.png";
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
			part {
				name: "urgent2";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					image.normal: "exclam.png";
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
				description {
					state: "faded" 0.0;
					inherit: "default" 0.0;
					rel1.relative: -1.0 -1.0;
					rel2.relative: 2.0 2.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
		}
		programs {
			program { name: "focus_in";
				signal: "e,state,focused";
				source: "e";
				action: STATE_SET "focused" 0.0;
				target: "base";
			}
			program { name: "focus_out";
				signal: "e,state,unfocused";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "base";
			}
			program { name: "urgent";
				signal: "e,state,urgent";
				source: "e";
				action: STATE_SET "visible" 0.0;
				transition: DECELERATE 0.5;
				target: "urgent";
				target: "urgent2";
				after: "urgent2";
			}
			program { name: "urgent2";
				action: STATE_SET "faded" 0.0;
				transition: LINEAR 0.5;
				target: "urgent2";
				after: "urgent3";
			}
			program { name: "urgent3";
				action: STATE_SET "visible" 0.0;
				target: "urgent2";
				after: "urgent2";
			}
			program { name: "urgentw0";
				signal: "e,state,urgent";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: DECELERATE 0.1;
				target: "icon_area2";
				after: "urgentw1";
			}
			program { name: "urgentw1";
				action: STATE_SET "uw1" 0.0;
				transition: DECELERATE 0.1;
				target: "icon_area2";
				after: "urgentw2";
			}
			program { name: "urgentw2";
				action: STATE_SET "uw2" 0.0;
				target: "icon_area2";
				transition: DECELERATE 0.1;
				after: "urgentw3";
			}
			program { name: "urgentw3";
				action: STATE_SET "uw3" 0.0;
				transition: DECELERATE 0.1;
				target: "icon_area2";
				after: "urgentw4";
			}
			program { name: "urgentw4";
				action: STATE_SET "uw4" 0.0;
				transition: DECELERATE 0.1;
				target: "icon_area2";
				after: "urgentw0";
			}
			program { name: "not_urgent";
				signal: "e,state,not_urgent";
				source: "e";
				action: ACTION_STOP;
				target: "urgentw0";
				target: "urgentw1";
				target: "urgentw2";
				target: "urgentw3";
				target: "urgentw4";
				target: "urgent";
				target: "urgent2";
				target: "urgent3";
				after: "not_urgent2";
			}
			program { name: "not_urgent2";
				action: STATE_SET "default" 0.0;
				target: "urgent";
				target: "urgent2";
				target: "icon_area2";
			}
		}
	}

	group { name: "e/modules/pager16/desk";
	inherit: "e/modules/pager/desk";

	parts {
		part { name: "e.swallow.content"; type: SWALLOW;
			clip_to: "clip";
			description { state: "default" 0.0;
				rel1.offset: 0 0;
				rel2.offset: -1 -1;
			}
		}
	}
}
/////////////////////////////////////////////////////////////////////////////
	/*** MOD: WINLIST ***/

	group { name: "e/widgets/winlist/main";
		images {
			image: "menuitem.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
					image {
						normal: "base_bg.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
				}
			}
			part { name: "title_back";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.offset: 4 0;
					rel2.offset: -5 -4;
					rel2.to_y: "e.text.title";
					image {
						normal: "menuitem.png";
						border: 7 7 2 7;
					}
					fill.smooth: 0;
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					align: 0.5 0.0;
					min: 32 32;
					fixed: 1 1;
					rel1 {
						relative: 0.0 1.0;
						offset:	1			 6;
						to_y: "title_back";
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-2			6;
						to_y: "title_back";
					}
				}
			}
			part { name: "separator";
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 16 2;
					rel1 {
						offset: 16 2;
						relative: 0.0 1.0;
						to_y: "e.text.label";
					}
					rel2 {
						offset: -17 4;
						relative: 1.0 1.0;
						to_y: "e.text.label";
					}
					image {
						normal: "menu_sep.png";
						border: 2 2 0 0;
					}
					fill.smooth: 0;
				}
			}
			part { name: "e.swallow.list";
				type: SWALLOW;
				clip_to: "list_clip";
				description { state: "default" 0.0;
					rel1 {
						relative: 0.0 1.0;
						offset:  12	12;
						to_y:  "e.text.label";
					}
					rel2.offset:  -13  -12;
				}
			}
			part { name: "list_clip";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
					rel1.to_y: "e.swallow.list";
					rel2.to_y: "e.swallow.list";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: NONE;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						offset:  16	16;
						to_y: "e.swallow.icon";
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-17 16;
						to_y: "e.swallow.icon";
					}
					color: 0 0 0 255;
					color_class: "winlist_label";
					text {
						text: "Title goes here";
						font: "Sans:style=Bold";
						size: 10;
						min:  0 1;
						align: 0.5 0.5;
						text_class: "winlist_label";
					}
				}
			}
			part { name: "e.text.title";
				type: TEXT;
				mouse_events: 0;
				effect: SOFT_SHADOW;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 0.0;
					rel1 {
						relative: 0.0 0.0;
						offset: 0 0;
					}
					rel2 {
						relative: 1.0 0.0;
						offset: -1 0;
					}
					color: 224 224 224 255;
					color3: 0 0 0 64;
					text {
						font: "Sans:style=Bold";
						size: 10;
						align: 0.5 0.0;
						min: 1 1;
					}
				}
			}
		}
	}

	group {
		name: "e/widgets/winlist/item";
		images {
			image: "menuitem.png" COMP;
			image: "pager_window.png" COMP;
			image: "pager_window_shaded.png" COMP;
			image: "inv.png" COMP;
		}
		parts {
			part { name: "bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1.offset: -5 -3;
					rel2.offset: 4 5;
					image {
						normal: "menuitem.png";
						border: 8 8 5 9;
					}
					fill.smooth : 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: -2 0;
					rel2.offset: 1 2;
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					align: 0.0 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset:	4  3;
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	4	-1;
						to_y: "e.text.label";
					}
				}
			}
			part { name: "type";
				description { state: "default" 0.0;
					min: 23 24;
					max: 23 24;
					align: 1.0 0.5;
					rel1 {
						relative: 1.0 0.5;
						offset:	-23  -12;
					}
					rel2 {
						relative: 1.0 0.5;
						offset:	-1  11;
						to_y: "e.text.label";
					}
					image.normal: "pager_window.png";
				}
				description { state: "iconified" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
				description { state: "invisible" 0.0;
					inherit: "default" 0.0;
					image.normal: "inv.png";
				}
				description { state: "shaded" 0.0;
					inherit: "default" 0.0;
					image.normal: "pager_window_shaded.png";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						relative: 1.0 0.0;
						offset: 3 5;
						to_x: "e.swallow.icon";
					}
					rel2 {
						relative: 0.0 1.0;
						offset: -4 -4;
						to_x: "type";
					}
					color: 0 0 0 255;
					color3: 0 0 0 0;
					color_class: "winlist_item";
					text {
						font: "Sans";
						size: 10;
						min: 0 1;
						align: 0.0 0.5;
						text_class: "winlist_title";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					color3: 0 0 0 64;
				}
			}
			part { name: "e.event.winlist.item";
				type:	RECT;
				mouse_events:  1;
				description { state: "default" 0.0;
					min:		12 12;
					visible:  1;
					color: 0 0 0 0;
					rel1.to: "bg";
					rel2.to: "bg";
				}
			}
		}
		programs {
			program { name:			"type1";
				signal:  "e,state,iconified";
				source:  "e";
				action:  STATE_SET "iconified" 0.0;
				target:  "type";
			}
			program { name:			"type2";
				signal:  "e,state,invisible";
				source:  "e";
				action:  STATE_SET "invisible" 0.0;
				target:  "type";
			}
			program { name:			"type3";
				signal:  "e,state,shaded";
				source:  "e";
				action:  STATE_SET "shaded" 0.0;
				target:  "type";
			}
			program { name: "sel";
				signal: "e,state,selected";
				source: "e";
				action: STATE_SET "selected" 0.0;
				transition: LINEAR 0.2;
				target: "bg";
				target: "e.text.label";
			}
			program { name: "unsel";
				signal: "e,state,unselected";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.1;
				target: "bg";
				target: "e.text.label";
			}
		}
	}


/////////////////////////////////////////////////////////////////////////////
	/*** MOD: SYSCON ***/

	group { name: "e/widgets/syscon/main";
		images {
			image: "dia_bg.png" COMP;
			image: "button-normal.png" COMP;
			image: "button-pressed.png" COMP;
			image: "button-insensitive.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
				color_class: "dialog_base";
					image {
						normal: "dia_bg.png";
						border: 15 15 2 2;
					}
					fill.smooth: 0;
				}
			}
			part { name: "e.swallow.main";
				type: SWALLOW;
				description { state: "default" 0.0;
					fixed: 0 1;
					align: 0.5 0.0;
					rel1.offset: 12 12;
					rel2.relative: 1.0 0.0;
					rel2.offset: -13 12;
				}
			}
			part { name: "e.swallow.secondary";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.to: "e.swallow.main";
					rel1.relative: 0.0 1.0;
					rel1.offset: 0 12;
					rel2.to: "e.swallow.main";
					align: 0.5 0.0;
					fixed: 0 1;
				}
			}
			part { name: "e.swallow.extra";
				type: SWALLOW;
				description { state: "default" 0.0;
					align: 0.5 0.0;
					rel1.to: "e.swallow.secondary";
					rel1.relative: 0.0 1.0;
					rel1.offset: 0 12;
					rel2.to: "e.swallow.secondary";
					fixed: 0 1;
				}
			}
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 0;
					align: 0.5 1.0;
					rel1.offset: 0 12;
					rel1.relative: 0.5 0.0;
					rel1.to_y: "e.swallow.extra";
					rel2.offset: -1 -14;
					rel2.relative: 0.5 1.0;
					min: 64 26;
					max: 64 26;
					image {
						normal: "button-normal.png";
						border: 10 10 10 10;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-pressed.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-insensitive.png";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						to: "button_image";
						relative: 0.0  0.0;
						offset:	3			3;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-4	-4;
						to:			 "button_image";
					}
					color: 0 0 0 192;
					color3: 255 255 255 128;
					color_class: "button_text";
					text {
						text:			 "Cancel";
						font:			 "Sans";
						size:			 10;
						min:		1 1;
						align:			0.5 0.5;
						text_class: "button";
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 201 181 156 255;
					color3: 247 237 214 255;
					color_class: "button_text_disabled";
				}
			}
			part { name: "event"; type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            STAY_ON("button_image")
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
	 }
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "event";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "event";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "event";
				action: SIGNAL_EMIT "e,action,close" "";
			}
		}
	}

	group { name: "e/widgets/syscon/item/button";
		images {
			image: "button-normal.png" COMP;
			image: "button-pressed.png" COMP;
			image: "button-insensitive.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 32 16;
					image {
						normal: "button-normal.png";
						border: 10 10 4 10;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-pressed.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-insensitive.png";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 0 1;
					align: 0.5 1.0;
					rel1 {
						relative: 0.0  1.0;
						offset:	3			-4;
						to:			 "button_image";
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-4	-4;
						to:			 "button_image";
					}
					color: 0 0 0 192;
					color3: 255 255 255 128;
					color_class: "button_text";
					text {
						font:			 "Sans";
						size:			 10;
						min:		1 1;
						align:			0.5 1.0;
						text_class: "button";
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 201 181 156 255;
					color3: 247 237 214 255;
					color_class: "button_text_disabled";
				}
			}
			part { name: "glow"; mouse_events: 0;
            description { state: "default" 0.0;
				image.normal: "win_shadow.png";
				image.border: 9 9 9 9;
				image.middle: 0;
				rel1.to: "button_image";
				rel1.offset: -4 -4;
				rel2.to: "button_image";
				rel2.offset: 1 0;
				fill.smooth: 0;
				color: 255 255 255 0;
				visible: 0;
            }
			description { state: "focused" 0.0;
            inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
         }
      }
			part {
				name: "e.swallow.icon";
				type: SWALLOW;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 0.5 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset:	3  3;
						to: "button_image";
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-4	-1;
						to_x: "button_image";
						to_y: "e.text.label";
					}
				}
			}
 			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program {
				name:	"button_click";
				signal: "mouse,down,1";
				source: "button_image";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick";
				signal: "mouse,up,1";
				source: "button_image";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick2";
				signal: "mouse,clicked,1";
				source: "button_image";
				action: SIGNAL_EMIT "e,action,click" "";
			}
			program {
				name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "disabler";
			}
			program {
				name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "disabler";
			}
			      program { signal: "e,state,focused"; source: "e";
         action: STATE_SET "focused" 0.0;
         target: "glow";
      }
      program { signal: "e,state,unfocused"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "glow";
      }
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** FILEMAN ***/

	group { name: "e/fileman/default/window/main";
		images {
			image: "dia_bg.png" COMP;
			image: "dia_topshad.png" COMP;
			image: "dia_botshad.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
					color_class: "fileman_base";
					image.normal: "dia_bg.png";
					image.border: 15 15 1 1; 
					fill.smooth: 0;
				}
			}
			part { name: "shadow";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.0;
					rel2.offset: -1 31;
					image.normal: "dia_topshad.png";
					color_class: "fileman_base";
					image.border: 15 15 1 1; 
					fill.smooth: 0;
				}
			}
			part { name: "e.swallow.bg";
				type: SWALLOW;
				//mouse_events: 0;
				description { state: "default" 0.0;
				}
			}
			part { name: "e.swallow.favorites"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 1.0;
            rel1.offset: 4 4;
            rel1.to: "region"; 
            rel2.offset: 4 -5;
            rel2.relative: 0.0 1.0;
            rel2.to: "region"; 
            fixed: 1 0;
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 4 4;
            rel1.to: "region"; 
            rel2.offset: -5 -5;
            rel2.to: "region"; 
            align: 1.0 1.0;
         }
         description { state: "fav" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.favorites";
         }
      }
      part { name: "e.swallow.toolbar"; type: SWALLOW;
         description { state: "default" 0.0;
         }
         description { state: "tb_top" 0.0;
            align: 0.5 0.0;
            rel1.offset: 4 4;
            // XXX: this is a bug workaround. should be -4 4;
            rel2.offset: -9 4;
            rel2.relative: 1.0 0.0;
            fixed: 0 1;
         }
         description { state: "tb_bottom" 0.0;
            align: 0.5 1.0;
            rel1.offset: 4 -5;
            rel1.relative: 0.0 1.0;
            // XXX: this is a bug workaround. should be -4 -5;
            rel2.offset: -9 -5;
            fixed: 0 1;
         }
      }
      part { name: "region"; type: SPACER;
         description { state: "default" 0.0;
         }
         description { state: "tb_top" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to_y: "e.swallow.toolbar"; 
         }
         description { state: "tb_bottom" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 0.0;
            rel2.to_y: "e.swallow.toolbar"; 
         }
         description { state: "tb_left" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.toolbar"; 
         }
         description { state: "tb_right" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "e.swallow.toolbar"; 
         }
      }
			
			part { name: "shadow2";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.relative: 0.0 1.0;
					rel1.offset: 0 -4;
					image.normal: "dia_botshad.png";
					color_class: "fileman_base";
					image.border: 15 15 1 1; 
					fill.smooth: 0;
				}
			}
		}
	programs {
      program {
         signal: "e,favorites,enabled"; source: "e";
         action: STATE_SET "fav" 0.0;
         target: "e.swallow.content";
      }
      program {
         signal: "e,favorites,disabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.content";
      }
      program {
         signal: "e,toolbar,left"; source: "e";
         action: STATE_SET "tb_left" 0.0;
         target: "region";
      }
      program {
         signal: "e,toolbar,right"; source: "e";
         action: STATE_SET "tb_right" 0.0;
         target: "region";
      }
      program {
         signal: "e,toolbar,top"; source: "e";
         action: STATE_SET "tb_top" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,bottom"; source: "e";
         action: STATE_SET "tb_bottom" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,disabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
   }	
	}
	group { name: "e/fileman/default/progress";
		min: 250 40;
		images {
			image: "icon_efm_file_del.png" COMP;
		}
		parts {
			part { name: "bg";
				type: IMAGE;
				mouse_events: 0;
				description { state: "default" 0.0;
					image.normal: "button-insensitive.png";
					image.border: 5 5 5 5;
				}
				description { state: "need_attention" 0.0;
					inherit: "default" 0.0;
					color: 200 0 0 150;
				}
			}
			part { name: "icon";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 32 32;
					max: 32 32;
					align: 0.01 0.5;
					rel1.to: "bg";
					rel2.to: "bg";
					image.normal: "icon_efm_dnd_ask.png";
				}
				description { state: "copy" 0.0;
					inherit: "default" 0.0;
					image.normal: "icon_efm_dnd_copy.png";
				}
				description { state: "move" 0.0;
					inherit: "default" 0.0;
					image.normal: "icon_efm_dnd_move.png";
				}
				description { state: "delete" 0.0;
					inherit: "default" 0.0;
					image.normal: "icon_efm_file_del.png";
				}
			}
			part { name: "gauge_bg";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1.to: "icon";
					rel1.relative: 1.0 0.60;
					rel2.to: "bg";
					rel2.relative: 1.0 1.0;
					rel2.offset: -4 -5;
					image.normal: "inset_sunk.png";
					image.border: 6 6 6 6;
				}
			}
			part { name: "gauge_confine";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1.to: "gauge_bg";
					rel1.offset: 1 1;
					rel2.to: "gauge_bg";
					rel2.offset: -2 -2;
					color: 0 255 0 0;
				}
			}
			part { name: "e.gauge.bar";
				mouse_events: 0;
				scale: 1;
				type: RECT;
				description { state: "default" 0.0;
					min: 0 0;
					color: 55 55 55 100;
				}
				dragable {
					x: 1 1 0;
					y: 0 0 0;
					confine:"gauge_confine";
				}
			}
			part { name: "e.text.info";
				type: TEXT;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
				relative: 1.0 0.0;
				to_x: "icon";
				to_y: "bg";
					}
					rel2 {
						relative: 0.0 0.6;
						to_x: "bt_abort";
						to_y: "icon";
					}
					color: 0 0 0 255;
					text {
						font: "Sans";
						size: 10;
						align: 0.0 0.5;
						text_class: "fileman_icon";
					}
				}
			}
			part { name: "bt_abort";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.5;
					min: 9 9;
					max: 9 9;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 {
						relative: 1.0 0.0;
						to_x: "e.text.info";
						to_y: "bg";
					}
					rel2 {
						relative: 0.99 1.0;
						to_x: "bg";
						to_y: "e.text.info";
					}
					color: 255 255 255 0;
				}
			}
			part { name: "bt_abort_bt";
				type: IMAGE;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.to: "bt_abort";
					rel2.to: "bt_abort";
					image.normal: "slider.png";
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1.offset: 0 1;
					rel2.offset: -1 0;
				}
			}
			part { name: "e.event.abort";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					rel1.to: "bt_abort";
					rel2.to: "bt_abort";
					color: 0 0 0 0;
				}
			}
		}
		programs {
			program { name: "set_need_attention";
				signal: "e,action,set,need_attention";
				source: "e";
				action:  STATE_SET "need_attention" 0.0;
				transition: SINUSOIDAL 1.0;
				target: "bg";
				after: "need_loop";
			}
			program { name: "need_loop";
				action:  STATE_SET "default" 0.0;
				transition: SINUSOIDAL 1.0;
				target: "bg";
				after: "set_need_attention";
			}
			program { name: "set_normal";
				signal: "e,action,set,normal";
				source: "e";
				action:  STATE_SET "default" 0.0;
				transition: SINUSOIDAL 1.0;
				target: "bg";
			}
			program { name: "set_icon_unknow";
				signal: "e,action,icon,unknow";
				source: "e";
				action:  STATE_SET "default" 0.0;
				target: "icon";
			}
			program { name: "set_icon_copy";
				signal: "e,action,icon,copy";
				source: "e";
				action:  STATE_SET "copy" 0.0;
				target: "icon";
			}
			program { name: "set_icon_move";
				signal: "e,action,icon,move";
				source: "e";
				action:  STATE_SET "move" 0.0;
				target: "icon";
			}
			program { name: "set_icon_delete";
				signal: "e,action,icon,delete";
				source: "e";
				action:  STATE_SET "delete" 0.0;
				target: "icon";
			}
			program { name: "bt_abort_down";
				signal: "mouse,down,*";
				source: "e.event.abort";
				action: STATE_SET "active" 0.0;
				target: "bt_abort_bt";
			}
			program { name: "bt_abort_up";
				signal: "mouse,up,*";
				source: "e.event.abort";
				action: STATE_SET "default" 0.0;
				target: "bt_abort_bt";
			}
			program { name: "bt_abort_click";
				signal: "mouse,clicked,*";
				source: "e.event.abort";
				action: SIGNAL_EMIT "e,fm,operation,abort" "";
			}
		}
	}
	group { name: "e/fileman/default/scrollframe";
		alias:  "e/modules/everything/thumbview/main/scrollframe";
		images {
			image: "scrollbar_arrow_down.png" COMP;
			image: "scrollbar_arrow_left.png" COMP;
			image: "scrollbar_arrow_right.png" COMP;
			image: "scrollbar_arrow_up.png" COMP;
			image: "scrollbar-background.png" COMP;
			image: "slider-horiz-active.png" COMP;
			image: "slider-horiz.png" COMP;
			image: "slider-vert-active.png" COMP;
			image: "slider-vert.png" COMP;
		}
		parts {
			part { name: "bg"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "e.swallow.content";
            rel2.to: "e.swallow.content";
            color: 255 255 255 255;
            color_class: "scrollframe_base";
			}
		}
		part { name: "e.swallow.bg"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
			}
			part { name: "clipper";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
				}
			}
			part { name: "e.swallow.content";
				clip_to: "clipper";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.offset: 1 1;
					rel2 {
						relative: 0.0  0.0;
						offset:	-1	-1;
						to_x: "sb_vbar";
						to_y: "sb_hbar";
					}
				}
			}
			part { name: "conf_over";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.offset: -1 -1;
					rel2.offset: 0 0;
					image {
						normal: "inset_sunk.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			part { name: "sb_vbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 1.0 0.0;
					rel1 {
						relative: 1.0 0.0;
						offset:	-2 1;
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-2 -1;
						to_y:			 "sb_hbar";
					}
				}
				description { state: "hidden" 0.0;
					visible: 0;
					max: 0 99999;
					rel1 {
						relative: 1.0 0.0;
						offset:	-1 0;
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-1 -1;
						to_y:			 "sb_hbar";
					}
				}
			}
			part { name: "sb_vbar_base";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0  1.0;
						offset:	0			-2;
						to:				"sb_vbar_a1";
					}
					rel2 {
						relative: 1.0  0.0;
						offset:	0			1;
						to:				"sb_vbar_a2";
					}
				}
			}
			part { name: "sb_vbar_runner";
				clip_to: "sb_vbar";
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 16 99999;
					rel1.to:				"sb_vbar_base";
					rel1.offset:	0 0;
					rel2.to:				"sb_vbar_base";
					image {
						normal: "scrollbar-background.png";
						border: 2 2 3 3;
					}
					fill.smooth: 0;
				}
			}
			part { name: "sb_vbar_p1";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0 1.0;
						to:				"sb_vbar_a1";
					}
					rel2 {
						relative: 1.0 0.0;
						to:				"e.dragable.vbar";
					}
				}
			}
			part { name: "sb_vbar_p2";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0 1.0;
						to:				"e.dragable.vbar";
					}
					rel2 {
						relative: 1.0 0.0;
						to:				"sb_vbar_a2";
					}
				}
			}
			part { name: "e.dragable.vbar";
				clip_to: "sb_vbar";
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 0 0 0;
					y: 1 1 0;
					confine: "sb_vbar_base";
				}
				description { state: "default" 0.0;
					min: 16 40;
					max: 16 99999;
					rel1 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_vbar_base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_vbar_base";
					}
					image {
						normal: "slider-vert.png";
						border: 0 0 10 10;
					}
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider-vert-active.png";
				}
			}

			part { name: "sb_vbar_a1";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.5 0.0;
					aspect: 1.0 1.0;
					aspect_preference: HORIZONTAL;
					color: 0 0 0 0;
					rel1 { to: "sb_vbar";
						relative: 0.0  0.0;
						offset:	-1			0;
					}
					rel2 { to: "sb_vbar";
						relative: 1.0  0.0;
						offset:	-1	0;
					}
				}
			}
			part { name: "sb_vbar_a1_arrow";
				mouse_events: 0;
				clip_to: "sb_vbar";
				description { state: "default" 0.0;
					max:16 16;
					rel1.to: "sb_vbar_a1";
					rel1.offset:	1 0;
					rel2.to: "sb_vbar_a1";
					image.normal: "scrollbar_arrow_up.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 -1;
					rel2.offset: -1 -2;
				}
			}

			part { name: "sb_vbar_a2";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.5 1.0;
					aspect: 1.0 1.0;
					aspect_preference: HORIZONTAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_vbar";
						relative: 0.0  1.0;
						offset:	-1			0;
					}
					rel2 {
						to: "sb_vbar";
						relative: 1.0  1.0;
						offset:	-1	0;
					}
				}
			}
			part { name: "sb_vbar_a2_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_vbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_vbar_a2";
					rel1.offset:	1 0;
					rel2.to: "sb_vbar_a2";
					image.normal: "scrollbar_arrow_down.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 1;
					rel2.offset: -1 0;
				}
			}

			part { name: "sb_hbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.0 1.0;
					rel1 {
						relative: 0.0 1.0;
						offset:	1 -2;
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	-1 -2;
						to_x: "sb_vbar";
					}
				}
				description { state: "hidden" 0.0;
					visible: 0;
					rel1 {
						relative: 0.0  1.0;
						offset:	0 -1;
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	-1 -1;
						to_x: "sb_vbar";
					}
				}
			}
			part { name: "sb_hbar_base";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						offset:	-2 0;
						to: "sb_hbar_a1";
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	1 0;
						to: "sb_hbar_a2";
					}
				}
			}
			part { name: "sb_hbar_runner";
				clip_to: "sb_hbar";
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 99999 16;
					rel1.to: "sb_hbar_base";
					rel1.offset: 0 0;
					rel2.to: "sb_hbar_base";
					image {
						normal: "scrollbar-background.png";
						border: 3 3 2 2;
					}
					fill.smooth: 0;
				}
			}
			part { name: "sb_hbar_p1";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						to: "sb_hbar_a1";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "e.dragable.hbar";
					}
				}
			}
			part { name: "sb_hbar_p2";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						to: "e.dragable.hbar";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "sb_hbar_a2";
					}
				}
			}
			part { name: "e.dragable.hbar";
				clip_to: "sb_hbar";
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 1 1 0;
					y: 0 0 0;
					confine: "sb_hbar_base";
				}
				description { state: "default" 0.0;
					min: 40 16;
					max: 99999 16;
					rel1 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_hbar_base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_hbar_base";
					}
					image {
						normal: "slider-horiz.png";
						border: 10 10 0 0;
					}
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider-horiz-active.png";
				}
			}

			part { name: "sb_hbar_a1";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.0 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_hbar";
						relative: 0.0  0.0;
						offset:	0 -1;
					}
					rel2 {
						to: "sb_hbar";
						relative: 0.0  1.0;
						offset:	0 -1;
					}
				}
			}
			part { name: "sb_hbar_a1_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_hbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_hbar_a1";
					rel1.offset:	0 1;
					rel2.to: "sb_hbar_a1";
					image.normal: "scrollbar_arrow_left.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -1 0;
					rel2.offset: -2 -1;
				}
			}

			part { name: "sb_hbar_a2";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 1.0 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_hbar";
						relative: 1.0  0.0;
						offset:	-1 -1;
					}
					rel2 {
						to: "sb_hbar";
						relative: 1.0  1.0;
						offset:	-1	-1;
					}
				}
			}
			part { name: "sb_hbar_a2_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_hbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_hbar_a2";
					rel1.offset:	0 1;
					rel2.to: "sb_hbar_a2";
					image.normal: "scrollbar_arrow_right.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 1 0;
					rel2.offset: 0 -1;
				}
			}
			part { name: "e.box.operations";
				type: BOX;
				description { state: "default" 0.0;
					rel2.to_x: "sb_vbar";
					rel2.to_y: "sb_hbar";
					rel2.relative: 0.0 0.0;
					box {
						layout: "vertical";
						padding: 0 0;
						align: 1.0 1.0;
					}
				}
			}
		}
		programs {
			program { name: "sb_vbar_show";
				signal: "e,action,show,vbar";
				source: "e";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar";
			}
			program { name: "sb_vbar_hide";
				signal: "e,action,hide,vbar";
				source: "e";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_vbar";
			}
			program { name: "sb_hbar_show";
				signal: "e,action,show,hbar";
				source: "e";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar";
			}
			program { name: "sb_hbar_hide";
				signal: "e,action,hide,hbar";
				source: "e";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_hbar";
			}

			program { name: "sb_vbar_a1_down";
				signal: "mouse,down,1";
				source: "sb_vbar_a1";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_vbar_a1_arrow";
			}
			program { name: "sb_vbar_a1_down2";
				signal: "mouse,down,1";
				source: "sb_vbar_a1";
				action:  DRAG_VAL_STEP 0.0 -1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_a1_up";
				signal: "mouse,up,1";
				source: "sb_vbar_a1";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar_a1_arrow";
			}
			program { name: "sb_vbar_a2_down";
				signal: "mouse,down,1";
				source: "sb_vbar_a2";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_vbar_a2_arrow";
			}
			program { name: "sb_vbar_a2_down2";
				signal: "mouse,down,1";
				source: "sb_vbar_a2";
				action:  DRAG_VAL_STEP 0.0 1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_a2_up";
				signal: "mouse,up,1";
				source: "sb_vbar_a2";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar_a2_arrow";
			}
			program { name: "sb_vbar_p1_down";
				signal: "mouse,down,1";
				source: "sb_vbar_p1";
				action:  DRAG_VAL_PAGE 0.0 -1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_p2_down";
				signal: "mouse,down,1";
				source: "sb_vbar_p2";
				action:  DRAG_VAL_PAGE  0.0 1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_down";
				signal: "mouse,down,1";
				source: "e.dragable.vbar";
				action:  STATE_SET "clicked" 0.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_up";
				signal: "mouse,up,1";
				source: "e.dragable.vbar";
				action:  STATE_SET "default" 0.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_hbar_a1_down";
				signal: "mouse,down,1";
				source: "sb_hbar_a1";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_hbar_a1_arrow";
			}
			program { name: "sb_hbar_a1_down2";
				signal: "mouse,down,1";
				source: "sb_hbar_a1";
				action:  DRAG_VAL_STEP -1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_a1_up";
				signal: "mouse,up,1";
				source: "sb_hbar_a1";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar_a1_arrow";
			}
			program { name: "sb_hbar_a2_down";
				signal: "mouse,down,1";
				source: "sb_hbar_a2";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_hbar_a2_arrow";
			}
			program { name: "sb_hbar_a2_down2";
				signal: "mouse,down,1";
				source: "sb_hbar_a2";
				action:  DRAG_VAL_STEP 1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_a2_up";
				signal: "mouse,up,1";
				source: "sb_hbar_a2";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar_a2_arrow";
			}
			program { name: "sb_hbar_p1_down";
				signal: "mouse,down,1";
				source: "sb_hbar_p1";
				action:  DRAG_VAL_PAGE -1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_p2_down";
				signal: "mouse,down,1";
				source: "sb_hbar_p2";
				action:  DRAG_VAL_PAGE  1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_down";
				signal: "mouse,down,1";
				source: "e.dragable.hbar";
				action:  STATE_SET "clicked" 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_up";
				signal: "mouse,up,1";
				source: "e.dragable.hbar";
				action:  STATE_SET "default" 0.0;
				target: "e.dragable.hbar";
			}
		}
	}
	group { name: "e/fileman/desktop/scrollframe";
		images {
			image: "scrollbar_arrow_down.png" COMP;
			image: "scrollbar_arrow_left.png" COMP;
			image: "scrollbar_arrow_right.png" COMP;
			image: "scrollbar_arrow_up.png" COMP;
			image: "scrollbar-background.png" COMP;
			image: "slider-horiz-active.png" COMP;
			image: "slider-horiz.png" COMP;
			image: "slider-vert-active.png" COMP;
			image: "slider-vert.png" COMP;
			image: "scrollbar-background.png" COMP;
		}
		parts {
			part { name: "clipper";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
				}
			}
			part { name: "e.swallow.content";
				clip_to: "clipper";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.offset: 0 0;
					rel2 {
						relative: 0.0  0.0;
						offset:	-1	-1;
						to_x: "sb_vbar";
						to_y: "sb_hbar";
					}
				}
			}
			part { name: "sb_vbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 1.0 0.0;
					rel1 {
						relative: 1.0 0.0;
						offset:	-2 1;
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-2 -1;
						to_y:			 "sb_hbar";
					}
				}
				description { state: "hidden" 0.0;
					visible: 0;
					max: 0 99999;
					rel1 {
						relative: 1.0 0.0;
						offset:	-1 0;
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-1 -1;
						to_y:			 "sb_hbar";
					}
				}
			}
			part { name: "sb_vbar_base";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0  1.0;
						offset:	0			-2;
						to:				"sb_vbar_a1";
					}
					rel2 {
						relative: 1.0  0.0;
						offset:	0			1;
						to:				"sb_vbar_a2";
					}
				}
			}
			part { name: "sb_vbar_runner";
				clip_to: "sb_vbar";
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 16 99999;
					rel1.to:				"sb_vbar_base";
					rel1.offset:	0 0;
					rel2.to:				"sb_vbar_base";
					image {
						normal: "scrollbar-background.png";
						border: 2 2 3 3;
					}
					fill.smooth: 0;
				}
			}
			part { name: "sb_vbar_p1";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0 1.0;
						to:				"sb_vbar_a1";
					}
					rel2 {
						relative: 1.0 0.0;
						to:				"e.dragable.vbar";
					}
				}
			}
			part { name: "sb_vbar_p2";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0 1.0;
						to:				"e.dragable.vbar";
					}
					rel2 {
						relative: 1.0 0.0;
						to:				"sb_vbar_a2";
					}
				}
			}
			part { name: "e.dragable.vbar";
				clip_to: "sb_vbar";
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 0 0 0;
					y: 1 1 0;
					confine: "sb_vbar_base";
				}
				description { state: "default" 0.0;
					min: 16 40;
					max: 16 99999;
					rel1 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_vbar_base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_vbar_base";
					}
					image {
						normal: "slider-vert.png";
						border: 0 0 10 10;
					}
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider-vert-active.png";
				}
			}

			part { name: "sb_vbar_a1";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.5 0.0;
					aspect: 1.0 1.0;
					aspect_preference: HORIZONTAL;
					color: 0 0 0 0;
					rel1 { to: "sb_vbar";
						relative: 0.0  0.0;
						offset:	-1			0;
					}
					rel2 { to: "sb_vbar";
						relative: 1.0  0.0;
						offset:	-1	0;
					}
				}
			}
			part { name: "sb_vbar_a1_arrow";
				mouse_events: 0;
				clip_to: "sb_vbar";
				description { state: "default" 0.0;
					max:16 16;
					rel1.to: "sb_vbar_a1";
					rel1.offset:	1 0;
					rel2.to: "sb_vbar_a1";
					image.normal: "scrollbar_arrow_up.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 -1;
					rel2.offset: -1 -2;
				}
			}

			part { name: "sb_vbar_a2";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.5 1.0;
					aspect: 1.0 1.0;
					aspect_preference: HORIZONTAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_vbar";
						relative: 0.0  1.0;
						offset:	-1			0;
					}
					rel2 {
						to: "sb_vbar";
						relative: 1.0  1.0;
						offset:	-1	0;
					}
				}
			}
			part { name: "sb_vbar_a2_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_vbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_vbar_a2";
					rel1.offset:	1 0;
					rel2.to: "sb_vbar_a2";
					image.normal: "scrollbar_arrow_down.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 1;
					rel2.offset: -1 0;
				}
			}

			part { name: "sb_hbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.0 1.0;
					rel1 {
						relative: 0.0 1.0;
						offset:	1 -2;
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	-1 -2;
						to_x: "sb_vbar";
					}
				}
				description { state: "hidden" 0.0;
					visible: 0;
					rel1 {
						relative: 0.0  1.0;
						offset:	0 -1;
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	-1 -1;
						to_x: "sb_vbar";
					}
				}
			}
			part { name: "sb_hbar_base";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						offset:	-2 0;
						to: "sb_hbar_a1";
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	1 0;
						to: "sb_hbar_a2";
					}
				}
			}
			part { name: "sb_hbar_runner";
				clip_to: "sb_hbar";
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 99999 16;
					rel1.to: "sb_hbar_base";
					rel1.offset: 0 0;
					rel2.to: "sb_hbar_base";
					image {
						normal: "scrollbar-background.png";
						border: 3 3 2 2;
					}
					fill.smooth: 0;
				}
			}
			part { name: "sb_hbar_p1";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						to: "sb_hbar_a1";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "e.dragable.hbar";
					}
				}
			}
			part { name: "sb_hbar_p2";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						to: "e.dragable.hbar";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "sb_hbar_a2";
					}
				}
			}
			part { name: "e.dragable.hbar";
				clip_to: "sb_hbar";
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 1 1 0;
					y: 0 0 0;
					confine: "sb_hbar_base";
				}
				description { state: "default" 0.0;
					min: 40 16;
					max: 99999 16;
					rel1 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_hbar_base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_hbar_base";
					}
					image {
						normal: "slider-horiz.png";
						border: 10 10 0 0;
					}
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider-horiz-active.png";
				}
			}

			part { name: "sb_hbar_a1";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.0 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_hbar";
						relative: 0.0  0.0;
						offset:	0 -1;
					}
					rel2 {
						to: "sb_hbar";
						relative: 0.0  1.0;
						offset:	0 -1;
					}
				}
			}
			part { name: "sb_hbar_a1_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_hbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_hbar_a1";
					rel1.offset:	0 1;
					rel2.to: "sb_hbar_a1";
					image.normal: "scrollbar_arrow_left.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -1 0;
					rel2.offset: -2 -1;
				}
			}

			part { name: "sb_hbar_a2";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 1.0 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_hbar";
						relative: 1.0  0.0;
						offset:	-1 -1;
					}
					rel2 {
						to: "sb_hbar";
						relative: 1.0  1.0;
						offset:	-1	-1;
					}
				}
			}
			part { name: "sb_hbar_a2_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_hbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_hbar_a2";
					rel1.offset:	0 1;
					rel2.to: "sb_hbar_a2";
					image.normal: "scrollbar_arrow_right.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 1 0;
					rel2.offset: 0 -1;
				}
			}
		}
		programs {
			program { name: "sb_vbar_show";
				signal: "e,action,show,vbar";
				source: "e";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar";
			}
			program { name: "sb_vbar_hide";
				signal: "e,action,hide,vbar";
				source: "e";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_vbar";
			}
			program { name: "sb_hbar_show";
				signal: "e,action,show,hbar";
				source: "e";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar";
			}
			program { name: "sb_hbar_hide";
				signal: "e,action,hide,hbar";
				source: "e";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_hbar";
			}

			program { name: "sb_vbar_a1_down";
				signal: "mouse,down,1";
				source: "sb_vbar_a1";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_vbar_a1_arrow";
			}
			program { name: "sb_vbar_a1_down2";
				signal: "mouse,down,1";
				source: "sb_vbar_a1";
				action:  DRAG_VAL_STEP 0.0 -1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_a1_up";
				signal: "mouse,up,1";
				source: "sb_vbar_a1";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar_a1_arrow";
			}
			program { name: "sb_vbar_a2_down";
				signal: "mouse,down,1";
				source: "sb_vbar_a2";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_vbar_a2_arrow";
			}
			program { name: "sb_vbar_a2_down2";
				signal: "mouse,down,1";
				source: "sb_vbar_a2";
				action:  DRAG_VAL_STEP 0.0 1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_a2_up";
				signal: "mouse,up,1";
				source: "sb_vbar_a2";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar_a2_arrow";
			}
			program { name: "sb_vbar_p1_down";
				signal: "mouse,down,1";
				source: "sb_vbar_p1";
				action:  DRAG_VAL_PAGE 0.0 -1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_p2_down";
				signal: "mouse,down,1";
				source: "sb_vbar_p2";
				action:  DRAG_VAL_PAGE  0.0 1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_down";
				signal: "mouse,down,1";
				source: "e.dragable.vbar";
				action:  STATE_SET "clicked" 0.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_up";
				signal: "mouse,up,1";
				source: "e.dragable.vbar";
				action:  STATE_SET "default" 0.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_hbar_a1_down";
				signal: "mouse,down,1";
				source: "sb_hbar_a1";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_hbar_a1_arrow";
			}
			program { name: "sb_hbar_a1_down2";
				signal: "mouse,down,1";
				source: "sb_hbar_a1";
				action:  DRAG_VAL_STEP -1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_a1_up";
				signal: "mouse,up,1";
				source: "sb_hbar_a1";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar_a1_arrow";
			}
			program { name: "sb_hbar_a2_down";
				signal: "mouse,down,1";
				source: "sb_hbar_a2";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_hbar_a2_arrow";
			}
			program { name: "sb_hbar_a2_down2";
				signal: "mouse,down,1";
				source: "sb_hbar_a2";
				action:  DRAG_VAL_STEP 1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_a2_up";
				signal: "mouse,up,1";
				source: "sb_hbar_a2";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar_a2_arrow";
			}
			program { name: "sb_hbar_p1_down";
				signal: "mouse,down,1";
				source: "sb_hbar_p1";
				action:  DRAG_VAL_PAGE -1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_p2_down";
				signal: "mouse,down,1";
				source: "sb_hbar_p2";
				action:  DRAG_VAL_PAGE  1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_down";
				signal: "mouse,down,1";
				source: "e.dragable.hbar";
				action:  STATE_SET "clicked" 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_up";
				signal: "mouse,up,1";
				source: "e.dragable.hbar";
				action:  STATE_SET "default" 0.0;
				target: "e.dragable.hbar";
			}
		}
	}

	group { name: "e/fileman/default/icon/variable";
			alias: "e/fileman/desktop/icon/variable";
			alias: "e/fileman/desktop/icon/fixed";
		images {
			image: "button-normal.png" COMP;

			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		script {
      public longpressed;
   }
   styles {
      style { name: "fileman_icon_name";
         base: "font=Sans font_size=10 text_class=fileman_icon align=center color=#000000ff wrap=mixed style=shadow,bottom shadow_color=#00000000 align=center ellipsis=1.0";
      }
      style { name: "fileman_icon_name_selected";
         base: "font=Sans font_size=10 text_class=fileman_icon align=center color=#000000ff wrap=mixed style=shadow,bottom shadow_color=#00000000 align=center ellipsis=1.0";
      }
   }
		parts {
			part { name: "label0"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 1.0;
            rel1.offset: 4 -5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -5 -5;
            min: 0 20;
            max: 99999 26;
            fixed: 0 1;
         }
      }
			part { name: "label2";
				type: TEXTBLOCK;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 1 1;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
					color: 0 0 0 255;
					text {
						style: "fileman_icon_name";
						align: 0.5 0.0;
						text_class: "fileman_icon";
						text_source: "e.text.label";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
					image {
						normal: "button-normal.png";
						border: 12 12 4 12;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			part {	name: "icon_box_shadow";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box";
				type: RECT;
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image.normal: "inv.png";
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon0";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					visible: 0;
					rel1 {
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						to_y: "label0";
						relative: 1.0 0.0;
						offset: -3 -1;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1.to: "icon0";
					rel2.to: "icon0";
					color: 0 0 0 0;
				}
				description { state: "min" 0.0;
					inherit: "default" 0.0;
					max: 0 0;
				}
				description { state: "max" 0.0;
					inherit: "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description { state: "max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 0.5 0.5;
					//					fixed:			1 1;
					rel1.to: "icon";
					rel2.to: "icon";
				}
			}
			part { name: "e.text.label";
				type: TEXTBLOCK;
				effect: SOFT_SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 1 1;
					rel1.to: "label0";
					rel2.to: "label0";
					rel2.offset: -1 6;
					visible: 0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					text {
						style: "fileman_icon_name_selected";
						align: 0.5 0.0;
						text_class: "fileman_icon_selected";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "dnd_action";
				type: IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description { state: "default" 0.0;
					color:		0 0 0 0;
				}
				description { state: "visible" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					min: 24 24;
					rel1.relative: 0.75 0.0;
					rel2.relative: 1.0 1.0;
				}
				description { state: "copy" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_copy.png";
				}
				description { state: "ask" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_ask.png";
				}
				description { state: "move" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_move.png";
				}
			}
			part { name: "e.swallow.entry";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.to: "label0";
					rel2.to: "label0";
				}
			}
		}
		programs {
			program {
         signal: "mouse,down,1"; source: "label_event";
         script {
            set_int(longpressed, 0);
         }
      }
      program { name: "rename1";
         signal: "mouse,down,1"; source: "label_event";
         in: 0.4 0.0;
         script {
            set_int(longpressed, 1);
         }
      }
      program { name: "rename2";
         signal: "mouse,up,1"; source: "label_event";
         script {
            if (get_int(longpressed)) {
               set_int(longpressed, 0);
               emit("e,action,label,click", "e");
            }
         }
      }
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "bg";
				target:  "e.text.label";
				target:  "label2";
				transition: LINEAR 0.2;
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "bg";
				target:  "e.text.label";
				target:  "label2";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}

	group { name: "e/fileman/default/icon/fixed";
		images {
			image: "button-normal.png" COMP;
			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		parts {
			part { name: "label2";
				type: TEXT;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
					color: 0 0 0 255;
					text {
						font: "Sans";
						text_source: "e.text.label";
						size: 10;
						min: 0 1;
						align: 0.5 0.5;
						text_class: "fileman_icon";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
					image {
						normal: "button-normal.png";
						border: 12 12 4 12;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			part {	name: "icon_box_shadow";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box";
				type: RECT;
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image.normal: "inv.png";
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon0";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					visible: 0;
					rel1 {
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						to_y: "e.text.label";
						relative: 1.0 0.0;
						offset: -3 -1;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1.to: "icon0";
					rel2.to: "icon0";
					color: 0 0 0 0;
				}
				description { state: "min" 0.0;
					inherit: "default" 0.0;
					max: 0 0;
				}
				description { state: "max" 0.0;
					inherit: "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description { state: "max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 0.5 0.5;
					//					fixed:			1 1;
					rel1.to: "icon";
					rel2.to: "icon";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						offset:	2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-3 -2;
					}
					visible: 0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					text {
						font: "Sans:style=Bold";
						size: 10;
						min: 0 1;
						align: 0.5 0.5;
						text_class: "fileman_icon";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "dnd_action";
				type: IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description { state: "default" 0.0;
					color:		0 0 0 0;
				}
				description { state: "visible" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					min: 24 24;
					rel1.relative: 0.75 0.0;
					rel2.relative: 1.0 1.0;
				}
				description { state: "copy" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_copy.png";
				}
				description { state: "ask" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_ask.png";
				}
				description { state: "move" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_move.png";
				}
			}
			part { name: "e.swallow.entry";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "bg";
				target:  "e.text.label";
				target:  "label2";
				transition: LINEAR 0.2;
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "bg";
				target:  "e.text.label";
				target:  "label2";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}

/*	group { name: "e/fileman/desktop/icon/variable";
		images {
			image: "button-normal.png" COMP;
			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		parts {
			part { name: "bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
					image {
						normal: "button-normal.png";
						border: 12 12 4 12;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			part {	name: "icon_box_shadow";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box";
				type: RECT;
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image.normal: "inv.png";
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon0";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					visible: 0;
					rel1 {
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						to_y: "e.text.label";
						relative: 1.0 0.0;
						offset: -3 -1;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1.to: "icon0";
					rel2.to: "icon0";
					color: 0 0 0 0;
				}
				description { state: "min" 0.0;
					inherit: "default" 0.0;
					max: 0 0;
				}
				description { state: "max" 0.0;
					inherit: "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description { state: "max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 0.5 0.5;
					//					fixed:			1 1;
					rel1.to: "icon";
					rel2.to: "icon";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						offset:	2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-3 -2;
					}
					color: 224 224 224 255;
					color3: 0 0 0 32;
					text {
						font: "Sans:style=Bold";
						size: 10;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "desktop_icon";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "dnd_action";
				type: IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description { state: "default" 0.0;
					color:		0 0 0 0;
				}
				description { state: "visible" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					min: 24 24;
					rel1.relative: 0.75 0.0;
					rel2.relative: 1.0 1.0;
				}
				description { state: "copy" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_copy.png";
				}
				description { state: "ask" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_ask.png";
				}
				description { state: "move" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_move.png";
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "bg";
				target:  "e.text.label";
				transition: LINEAR 0.2;
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "bg";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}

	group { name: "e/fileman/desktop/icon/fixed";
		images {
			image: "button-normal.png" COMP;
			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		parts {
			part { name: "bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
					image {
						normal: "button-normal.png";
						border: 12 12 4 12;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			part {	name: "icon_box_shadow";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box";
				type: RECT;
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image.normal: "inv.png";
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "icon0";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					visible: 0;
					rel1 {
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						to_y: "e.text.label";
						relative: 1.0 0.0;
						offset: -3 -1;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1.to: "icon0";
					rel2.to: "icon0";
					color: 0 0 0 0;
				}
				description { state: "min" 0.0;
					inherit: "default" 0.0;
					max: 0 0;
				}
				description { state: "max" 0.0;
					inherit: "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description { state: "max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 0.5 0.5;
					//					fixed:			1 1;
					rel1.to: "icon";
					rel2.to: "icon";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						offset:	2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-3 -2;
					}
					color: 224 224 224 255;
					color3: 0 0 0 32;
					text {
						font: "Sans:style=Bold";
						size: 10;
						min: 0 1;
						align: 0.5 0.5;
						text_class: "desktop_icon";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "dnd_action";
				type: IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description { state: "default" 0.0;
					color:		0 0 0 0;
				}
				description { state: "visible" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					min: 24 24;
					rel1.relative: 0.75 0.0;
					rel2.relative: 1.0 1.0;
				}
				description { state: "copy" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_copy.png";
				}
				description { state: "ask" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_ask.png";
				}
				description { state: "move" 0.0;
					inherit: "visible" 0.0;
					image.normal:  "icon_efm_dnd_move.png";
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "bg";
				target:  "e.text.label";
				transition: LINEAR 0.2;
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "bg";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}*/

	group { name: "e/fileman/default/list/variable";
		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		images {
			image: "selected.png" COMP;

			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_base";
				}
			}
			part { name: "selected";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
					image {
						normal: "selected.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			////
			part { name: "icon_box_shadow";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box";
				type:					RECT;
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;

					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image {
						normal: "e17_fileman_thumb_bg.png";
					}
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon0";
				type:					RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.0 0.5;
					aspect:	1.0 1.0;
					aspect_preference: VERTICAL;
					visible:  0;
					rel1 {
						relative: 0.0  0.0;
						offset:	4			4;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	4	-5;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.5 0.5;
					aspect:	1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1 {
						to: "icon0";
					}
					rel2 {
						to: "icon0";
					}
					color: 0 0 0 0;
				}
				description {
					state:			"min" 0.0;
					inherit:  "default" 0.0;
					max:		0 0;
				}
				description {
					state:			"max" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description {
					state:			"max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					align:			0.5 0.5;
					//					fixed:			1 1;
					rel1 {
						to:		"icon";
					}
					rel2 {
						to:		"icon";
					}
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "icon0";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 0 0 0 255;
					color3: 0 0 0 0;
					color_class: "ilist_item";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					color_class: "ilist_item";
				}
			}
			part { name: "dnd_action";
				type:					IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description {
					state:		"default" 0.0;
					color:		0 0 0 0;
				}
				description {
					state:		"visible" 0.0;
					aspect:			 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					rel1 {
						relative: 0.75 0.0;
					}
					rel2 {
						relative: 1.0 1.0;
					}
				}
				description {
					state:		"copy" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_copy.png";
					}
				}
				description {
					state:		"ask" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_ask.png";
					}
				}
				description {
					state:		"move" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_move.png";
					}
				}
			}
			part {
				name:							"event";
				type:							RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "e.swallow.entry";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "selected";
				target:  "e.text.label";
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "selected";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}

	group { name: "e/fileman/default/list_odd/variable";
		data.item: "stacking" "below";
		data.item: "selectraise" "on";
		images {
			image: "selected.png" COMP;

			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_odd_base";
				}
			}
			part { name: "selected";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "selected.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			////
			part { name: "icon_box_shadow";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box";
				type:					RECT;
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;

					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image {
						normal: "e17_fileman_thumb_bg.png";
					}
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon0";
				type:					RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.0 0.5;
					aspect:	1.0 1.0;
					aspect_preference: VERTICAL;
					visible:  0;
					rel1 {
						relative: 0.0  0.0;
						offset:	4			4;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	4	-5;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.5 0.5;
					aspect:	1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1 {
						to: "icon0";
					}
					rel2 {
						to: "icon0";
					}
					color: 0 0 0 0;
				}
				description {
					state:			"min" 0.0;
					inherit:  "default" 0.0;
					max:		0 0;
				}
				description {
					state:			"max" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description {
					state:			"max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					align:			0.5 0.5;
					//					fixed:			1 1;
					rel1 {
						to:		"icon";
					}
					rel2 {
						to:		"icon";
					}
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "icon0";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 0 0 0 255;
					color3: 0 0 0 0;
					color_class: "ilist_item";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					color_class: "ilist_item";
				}
			}
			part { name: "dnd_action";
				type:					IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description {
					state:		"default" 0.0;
					color:		0 0 0 0;
				}
				description {
					state:		"visible" 0.0;
					aspect:			 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					rel1 {
						relative: 0.75 0.0;
					}
					rel2 {
						relative: 1.0 1.0;
					}
				}
				description {
					state:		"copy" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_copy.png";
					}
				}
				description {
					state:		"ask" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_ask.png";
					}
				}
				description {
					state:		"move" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_move.png";
					}
				}
			}
			part {
				name:							"event";
				type:							RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "e.swallow.entry";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "selected";
				target:  "e.text.label";
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "selected";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}

	group { name: "e/fileman/default/list/fixed";
		alias: "e/fileman/desktop/list/fixed";
		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		images {
			image: "selected.png" COMP;

			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_base";
				}
			}
			part { name: "selected";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
					image {
						normal: "selected.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			////
			part { name: "icon_box_shadow";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box";
				type:					RECT;
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;

					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image {
						normal: "e17_fileman_thumb_bg.png";
					}
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon0";
				type:					RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.0 0.5;
					aspect:	1.0 1.0;
					aspect_preference: VERTICAL;
					visible:  0;
					rel1 {
						relative: 0.0  0.0;
						offset:	4			4;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	4	-5;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.5 0.5;
					aspect:	1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1 {
						to: "icon0";
					}
					rel2 {
						to: "icon0";
					}
					color: 0 0 0 0;
				}
				description {
					state:			"min" 0.0;
					inherit:  "default" 0.0;
					max:		0 0;
				}
				description {
					state:			"max" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description {
					state:			"max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					align:			0.5 0.5;
					//					fixed:			1 1;
					rel1 {
						to:		"icon";
					}
					rel2 {
						to:		"icon";
					}
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "icon0";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 0 0 0 255;
					color3: 0 0 0 0;
					color_class: "ilist_item";
					text {
						font: "Sans";
						size: 10;
						min: 0 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					color_class: "ilist_item";
				}
			}
			part { name: "dnd_action";
				type:					IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description {
					state:		"default" 0.0;
					color:		0 0 0 0;
				}
				description {
					state:		"visible" 0.0;
					aspect:			 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					rel1 {
						relative: 0.75 0.0;
					}
					rel2 {
						relative: 1.0 1.0;
					}
				}
				description {
					state:		"copy" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_copy.png";
					}
				}
				description {
					state:		"ask" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_ask.png";
					}
				}
				description {
					state:		"move" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_move.png";
					}
				}
			}
			part {
				name:							"event";
				type:							RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "e.swallow.entry";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "selected";
				target:  "e.text.label";
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "selected";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}

	group { name: "e/fileman/default/list_odd/fixed";
		alias: "e/fileman/desktop/list_odd/fixed";
		data.item: "stacking" "below";
		data.item: "selectraise" "on";
		images {
			image: "selected.png" COMP;

			image: "e17_mini_button_shadow2.png" COMP;
			image: "e17_fileman_thumb_bg.png" COMP;
			image: "icon_efm_dnd_copy.png" COMP;
			image: "icon_efm_dnd_ask.png" COMP;
			image: "icon_efm_dnd_move.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_odd_base";
				}
			}
			part { name: "selected";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "selected.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
					rel1 {
						relative: 0.0 0.0;
						offset: -5 -5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 4 4;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1 {
						relative: 0.0 0.0;
						offset: -2 -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
					}
				}
			}
			////
			part { name: "icon_box_shadow";
				mouse_events:  0;
				description { state: "default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: 2 2;
					}
					image {
						normal: "e17_mini_button_shadow2.png";
						border: 6 6 6 6;
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box";
				type:					RECT;
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					align: 0.5 0.5;
					rel1 {
						to: "e.swallow.icon";
						relative: 0.0 0.0;
						offset: -1 -1;
					}
					rel2 {
						to: "e.swallow.icon";
						relative: 1.0 1.0;
						offset: 0 0;
					}
					color: 0 0 0 64;
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon_box_bg";
				mouse_events:  0;
				description {
					state:		"default" 0.0;
					visible:			0;
					rel1 {
						to: "icon_box";
						relative: 0.0 0.0;
						offset: 1 1;

					}
					rel2 {
						to: "icon_box";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
					image {
						normal: "e17_fileman_thumb_bg.png";
					}
					fill {
						smooth: 0;
						size {
							relative: 0 0;
							offset:	32 32;
						}
					}
				}
				description {
					state:		"visible" 0.0;
					inherit:			"default" 0.0;
					visible:			1;
				}
			}
			part { name: "icon0";
				type:					RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.0 0.5;
					aspect:	1.0 1.0;
					aspect_preference: VERTICAL;
					visible:  0;
					rel1 {
						relative: 0.0  0.0;
						offset:	4			4;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	4	-5;
					}
					color: 0 0 0 0;
				}
			}
			part { name: "icon";
				type: RECT;
				mouse_events:  0;
				description {
					state:			"default" 0.0;
					align:			0.5 0.5;
					aspect:	1.0 1.0;
					aspect_preference: BOTH;
					visible:  0;
					rel1 {
						to: "icon0";
					}
					rel2 {
						to: "icon0";
					}
					color: 0 0 0 0;
				}
				description {
					state:			"min" 0.0;
					inherit:  "default" 0.0;
					max:		0 0;
				}
				description {
					state:			"max" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-4	-4;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	3			3;
					}
				}
				description {
					state:			"max2" 0.0;
					inherit:  "default" 0.0;
					rel1 {
						to: "icon0";
						relative: 0.0  0.0;
						offset:	-2	-2;
					}
					rel2 {
						to: "icon0";
						relative: 1.0  1.0;
						offset:	1			1;
					}
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description { state: "default" 0.0;
					align:			0.5 0.5;
					//					fixed:			1 1;
					rel1 {
						to:		"icon";
					}
					rel2 {
						to:		"icon";
					}
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "icon0";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 0 0 0 255;
					color3: 0 0 0 0;
					color_class: "ilist_item";
					text {
						font: "Sans";
						size: 10;
						min: 0 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					color_class: "ilist_item";
				}
			}
			part { name: "dnd_action";
				type:					IMAGE;
				mouse_events:  0;
				repeat_events: 0;
				description {
					state:		"default" 0.0;
					color:		0 0 0 0;
				}
				description {
					state:		"visible" 0.0;
					aspect:			 1.0 1.0;
					aspect_preference: BOTH;
					align: 1.0 1.0;
					rel1 {
						relative: 0.75 0.0;
					}
					rel2 {
						relative: 1.0 1.0;
					}
				}
				description {
					state:		"copy" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_copy.png";
					}
				}
				description {
					state:		"ask" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_ask.png";
					}
				}
				description {
					state:		"move" 0.0;
					inherit:			"visible" 0.0;
					image {
						normal:  "icon_efm_dnd_move.png";
					}
				}
			}
			part {
				name:							"event";
				type:							RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "e.swallow.entry";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.to: "e.text.label";
					rel2.to: "e.text.label";
				}
			}
		}
		programs {
			program { name: "go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "selected";
				target:  "e.text.label";
			}
			program { name: "go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "selected";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
			program { name: "ask";
				signal: "e,state,ask";
				source: "e";
				action: STATE_SET "ask" 0.0;
				target: "dnd_action";
			}
			program { name: "move";
				signal: "e,state,move";
				source: "e";
				action: STATE_SET "move" 0.0;
				target: "dnd_action";
			}
			program { name: "copy";
				signal: "e,state,copy";
				source: "e";
				action: STATE_SET "copy" 0.0;
				target: "dnd_action";
			}
			program { name: "thumb_gen";
				signal:  "e,action,thumb,gen";
				source:  "e";
				action:  STATE_SET "visible" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen-";
				signal:  "e,action,thumb,gen,alpha";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "icon_box_shadow";
				target:  "icon_box";
				target:  "icon_box_bg";
				after:	"thumb_gen2";
			}
			program { name: "thumb_gen2";
				action:  STATE_SET "min" 0.0;
				target:  "icon";
				after:	"thumb_gen3";
			}
			program { name: "thumb_gen3";
				action:  STATE_SET "max" 0.0;
				target:  "icon";
				transition: DECELERATE 0.2;
				after:	"thumb_gen4";
			}
			program { name: "thumb_gen4";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.1;
				after:	"thumb_gen5";
			}
			program { name: "thumb_gen5";
				action:  STATE_SET "max2" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.2;
				after:	"thumb_gen6";
			}
			program { name: "thumb_gen6";
				action:  STATE_SET "default" 0.0;
				target:  "icon";
				transition: SINUSOIDAL 0.3;
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** SYSTEM ***/

	group { name: "e/sys/logout";
		alias: "e/sys/halt";
		alias: "e/sys/reboot";
		alias: "e/sys/suspend";
		alias: "e/sys/hibernate";
		data.item: "borderless" "1";
//		data.item: "shaped" "1";
		images {
			image: "inset_sunk.png" COMP;
			image: "logo.png" COMP;
			image: "busy-1.png" COMP;
			image: "busy-2.png" COMP;
			image: "busy-3.png" COMP;
			image: "busy-4.png" COMP;
			image: "busy-5.png" COMP;
			image: "busy-6.png" COMP;
			image: "busy-7.png" COMP;
			image: "busy-8.png" COMP;
			image: "busy-9.png" COMP;
			image: "busy-10.png" COMP;
			image: "busy-1a.png" COMP;
			image: "busy-2a.png" COMP;
			image: "busy-3a.png" COMP;
			image: "busy-4a.png" COMP;
			image: "busy-5a.png" COMP;
			image: "busy-6a.png" COMP;
			image: "busy-7a.png" COMP;
			image: "busy-8a.png" COMP;
			image: "busy-9a.png" COMP;
		}
		styles {
			style {
				name: "sys_style";
				base: "font=Sans:style=Bold font_size=12 text_class=tb_plain align=center color=#000 style=none wrap=word";
				tag:  "br" "\n";
				tag:  "hilight" "+ font=Sans:style=Bold text_class=tb_light";
			}
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: 250 250;
					color: 245 237 220 255;
				}
			}
			part { name: "over";
				mouse_events: 0;
				description { state: "default" 0.0;
					image.normal: "inset_sunk.png";
					image.border: 5 5 5 5;
					image.middle: 0;
					fill.smooth: 0;
				}
			}
			part { name: "busy";
				mouse_events:  0;
				description { state: "default" 0.0;
					FIXED_SIZE(128,18)
					//aspect: 1.0 1.0;
					align: 0.5 0.0;
					aspect_preference: BOTH;
					rel1 {
						to_y: "logo";
						relative: 0.0 1.0;
						offset:	0 3;
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-1 1;
					}
					image {
						normal: "busy-1.png";
						normal: "busy-1a.png";
						tween:  "busy-2.png";
						tween:  "busy-2a.png";
						tween:  "busy-3.png";
						tween:  "busy-3a.png";
						tween:  "busy-4.png";
						tween:  "busy-4a.png";
						tween:  "busy-5.png";
						tween:  "busy-5a.png";
						tween:  "busy-6.png";
						tween:  "busy-6a.png";
						tween:  "busy-7.png";
						tween:  "busy-7a.png";
						tween:  "busy-8.png";
						tween:  "busy-8a.png";
						tween:  "busy-9.png";
						tween:  "busy-9a.png";
						tween:  "busy-10.png";
						tween:  "busy-9a.png";
						tween:  "busy-9.png";
						tween:  "busy-8a.png";
						tween:  "busy-8.png";
						tween:  "busy-7a.png";
						tween:  "busy-7.png";
						tween:  "busy-6a.png";
						tween:  "busy-6.png";
						tween:  "busy-5a.png";
						tween:  "busy-5.png";
						tween:  "busy-4a.png";
						tween:  "busy-4.png";
						tween:  "busy-3a.png";
						tween:  "busy-3.png";
						tween:  "busy-2a.png";
						tween:  "busy-2.png";
						tween:  "busy-1a.png";
						tween:  "busy-1.png";
					}
				}
			}
			part { name: "logo";
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 128 128;
					max: 128 128;
					rel1.offset: 10 10;
					rel2.offset: -10 -10;
					align: 0.5 0.0;
					image.normal: "logo.png";
				}
				description { state: "done" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 0;
				}
			}
			part { name: "e.textblock.message";
				type: TEXTBLOCK;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						offset: 8 8;
						relative: 0.0 1.0;
						to_y: "busy";
					}
					rel2.offset: -9 -9;
					text {
						style:			"sys_style";
						min:		1 1;
					}
				}
			}
		}
		programs {
			program { name: "busy_anim";
				signal: "show";
				source: "";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 1.0;
				target: "busy";
				after:  "busy_anim";
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** DIALOG ***/
	group { name: "e/widgets/dialog/main";
		images {
			image: "dia_bg.png" COMP;
			image: "dia_topshad.png" COMP;
			image: "dia_botshad.png" COMP;
			image: "menu_sep.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
					color_class: "dialog_base";
					image.normal: "dia_bg.png";
					image.border: 15 15 1 1; 
					fill.smooth: 0;
				}
			}
			part { name: "shadow";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.0;
					rel2.offset: -1 31;
					image.normal: "dia_topshad.png";
					image.border: 15 15 1 1; 
					color_class: "dialog_base";
					fill.smooth: 0;
				}
			}
			part { name: "shadow2";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.relative: 0.0 1.0;
					rel1.offset: 0 -4;
					image.normal: "dia_botshad.png";
					image.border: 15 15 1 1; 
					color_class: "dialog_base";
					fill.smooth: 0;
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					align: 0.0 0.5;
					fixed: 1 0;
					rel1 {
						relative: 0.0 0.0;
						offset:	2  2;
					}
					rel2 {
						relative: 0.0 0.0;
						offset:	2  -5;
						to_y: "e.swallow.buttons";
					}
				}
			}
			part { name: "e.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1 {
						relative: 1.0 0.0;
						offset:	2	2;
						to_x:			 "e.swallow.icon";
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-3  -5;
						to_y: "e.swallow.buttons";
					}
				}
			}
			part { name: "separator";
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 16 2;
					rel1 {
						relative: 0.0  1.0;
						offset:	4			-1;
						to_y:			 "e.swallow.content";
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5	0;
						to_y:			 "e.swallow.content";
					}
					image {
						normal: "menu_sep.png";
						border: 2 2 0 0;
					}
					fill.smooth: 0;
				}
			}
			part {
				name: "e.swallow.buttons";
				type: SWALLOW;
				description { state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						offset:	4	-5;
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-5  -5;
					}
				}
			}
		}
	}

	group { name: "e/widgets/dialog/text";
		styles {
			style {
				name: "dialog_style";
				base: "font=Sans font_size=10 text_class=tb_plain align=center color=#000 style=shadow shadow_color=#ffffff80 wrap=word";
				tag:  "br" "\n";
				tag:  "hilight" "+ font=Sans:style=Bold text_class=tb_light";
			}
		}
		parts {
			part { name: "e.textblock.message";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1.offset: 4 4;
					rel2.offset: -5 -5;
					text {
						style:			"dialog_style";
						min:		1 1;
					}
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** CONFIGURATION PANEL ***/

	group { name: "e/widgets/configure/main";
		images {
			image: "dia_bg.png" COMP;
			image: "dia_topshad.png" COMP;
			image: "dia_botshad.png" COMP;
			image: "menu_sep.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
					color_class: "dialog_base";
					image.normal: "dia_bg.png";
					image.border: 15 15 1 1; 
					fill.smooth: 0;
				}
			}
			part { name: "shadow";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.0;
					rel2.offset: -1 31;
					image.normal: "dia_topshad.png";
					color_class: "dialog_base";
					image.border: 15 15 1 1; 
					fill.smooth: 0;
				}
			}
			part { name: "shadow2";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.relative: 0.0 1.0;
					rel1.offset: 0 -4;
					image.normal: "dia_botshad.png";
					image.border: 15 15 1 1; 
					fill.smooth: 0;
					color_class: "dialog_base";
				}
			}
			part { name: "separator"; mouse_events: 0;
         description { state: "default" 0.0;
            min: 16 2;
            max: 99999 2;
            rel1.relative: 0.0 1.0;
            rel1.offset: 2 4;
            rel1.to_y: "e.swallow.content";
            rel2.relative: 1.0 0.0;
            rel2.offset: -3 -5;
            rel2.to_y: "e.swallow.button";
            image.normal: "menu_sep.png";
            fill.smooth: 0;
            fixed: 0 1;
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 4 4;
            rel1.to_x: "base";
            rel2.relative: 1.0 0.0;
            rel2.offset: -5 -8;
            rel2.to_y: "e.swallow.button";
         }
      }
      part { name: "e.swallow.button"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.5 1.0;
            rel1.relative: 0.5 1.0;
            rel1.offset: 0 -5;
            rel2.relative: 0.5 1.0;
            rel2.offset: -1 -5;
            fixed: 1 1;
         }
      }
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** MOVE/RESIZE BOX ***/

	group { name: "e/widgets/border/default/move";
		images {
			image: "menuitem.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
					image {
						normal: "menuitem.png";
						border: 4 4 4 4;
					}
					fill.smooth: 0;
				}
			}
			part { name: "icon";
				mouse_events:  0;
				type: RECT;
				description { state: "default" 0.0;
					align: 0.0 0.5;
					min: 0 0;
					max: 0 0;
					fixed: 1 1;
					rel1.offset: 2 2;
					rel2.relative: 0.0 1.0;
					rel2.offset: 2 -3;
					color: 255 255 255 0;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to_x: "icon";
					rel1.offset: 2 4;
					rel1.relative: 1.0 0.0;
					rel2.offset: -5 -5;
					color: 0 0 0 255;
					color_class: "move_text";
					text { text: "X Y";
						font: "Sans";
						size: 10;
						align: 0.5 0.5;
						min: 1 1;
						text_class: "move_text";
					}
				}
			}
		}
	}

	group { name: "e/widgets/border/default/resize";
		images {
			image: "menuitem.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
					image {
						normal: "menuitem.png";
						border: 4 4 4 4;
					}
					fill.smooth: 0;
				}
			}
			part { name: "icon";
				mouse_events:  0;
				type: RECT;
				description { state: "default" 0.0;
					align: 0.0 0.5;
					min: 0 0;
					max: 0 0;
					fixed: 1 1;
					rel1.offset: 2 2;
					rel2.relative: 0.0 1.0;
					rel2.offset: 2 -3;
					color: 255 255 255 0;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to_x: "icon";
					rel1.offset: 2 4;
					rel1.relative: 1.0 0.0;
					rel2.offset: -5 -5;
					color: 0 0 0 255;
					color_class: "resize_text";
					text { text: "WxH";
						font: "Sans";
						size: 10;
						align: 0.5 0.5;
						min: 1 1;
						text_class: "resize_text";
					}
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** FILE MANAGER TOOLBAR ***/

group { name: "e/fileman/toolbar/default/base";
	images {
		//~ image: "toolbar_top.png" COMP;
		//~ image: "toolbar_bottom.png" COMP;
	}
	parts {
		part { name: "base";
		type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				max: 99999 48;
				color: 255 255 255 0;
				color_class: "fileman_base";
				//image.normal: "toolbar_top.png";
				//image.border: 4 4 4 4;
				//fill.smooth: 0;
			}
			description { state: "bottom" 0.0;
				inherit: "default" 0.0;
				//image.normal: "toolbar_bottom.png";
			}
		}
		part { name: "e.swallow.content";
			type: SWALLOW;
			description { state: "default" 0.0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
			}
			description { state: "bottom" 0.0;
				inherit: "default" 0.0;
			}
		}
	}
	programs {
		program { name: "orient1";
			signal: "e,state,orientation,top";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "e.swallow.content";
		}
		program { name: "orient2";
			signal: "e,state,orientation,bottom";
			source: "e";
			action: STATE_SET "bottom" 0.0;
			target: "base";
			target: "e.swallow.content";
		}
	}
}

/////////////////////////////////////////////////////////////////////////////
	/*** TRANSITIONS ***/
	group { name: "e/transpreview/0";
		parts {
			part { name: "bg";
				mouse_events: 0;
				type: RECT;
				description { state: "default" 0.0;
					color: 240 240 240 255;
				}
			}
		}
	}

	group { name: "e/transpreview/1";
		parts {
			part { name: "bg";
				mouse_events: 0;
				type: RECT;
				description { state: "default" 0.0;
					color: 30 30 30 255;
				}
			}
		}
	}

	group { name: "e/transitions/crossfade";
		parts {
			part { name:	"e.swallow.bg.old";
				type:	SWALLOW;
				description { state: "default" 0.0;
				}
			}
			part { name:	"e.swallow.bg.new";
				type:	SWALLOW;
				clip_to:	"bg_new_clip";
				description { state: "default" 0.0;
				}
			}
			part { name:	"bg_new_clip";
				type:	RECT;
				mouse_events:  0;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "done" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}
		}
		programs {
			program { name:	"go";
				signal:  "e,action,start";
				source:  "e";
				action:  STATE_SET "done" 0.0;
				transition: SINUSOIDAL 1.0;
				target:  "bg_new_clip";
				after:	"go2";
			}
			program { name:			"go2";
				action:  SIGNAL_EMIT "e,state,done" "";
			}
		}
	}

	group { name: "e/transitions/vswipe";
		images.image: "transition_vswipe.png" COMP;
		parts {
			part { name:	"e.swallow.bg.old";
				type:	SWALLOW;
				clip_to:	"bg_prev_clip";
				description { state: "default" 0.0;
				}
			}
			part { name:	"e.swallow.bg.new";
				type:	SWALLOW;
				clip_to:	"bg_new_clip";
				description { state: "default" 0.0;
				}
			}
			part { name:	"bg_prev_clip";
				type:	RECT;
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.offset:	0	-32;
					rel2.offset:  -1			31;
				}
				description { state: "done" 0.0;
					inherit: "default" 0.0;
					rel1 {
						relative: 0.0  1.0;
						offset:	0			31;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-1	31;
					}
				}
			}
			part { name:	"bg_new_clip";
				type:	RECT;
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1 {
						relative: 0.0  0.0;
						offset:	0			-32;
					}
					rel2 {
						relative: 1.0  0.0;
						offset:	-1	-32;
					}
				}
				description {
					state: "done" 0.0;
					rel1.offset:	0	-32;
					rel2.offset:  -1			31;
				}
			}
			part { name: "swipe_gap";
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 0 64;
					max: 99999 64;
					rel1 {
						to: "bg_prev_clip";
						relative: 0.0  0.0;
						offset:	0			0;
					}
					rel2 {
						to: "bg_prev_clip";
						relative: 1.0  0.0;
						offset:	-1	0;
					}
					image.normal: "transition_vswipe.png";
				}
			}
		}
		programs {
			program { name:			"go";
				signal:  "e,action,start";
				source:  "e";
				action:  STATE_SET "done" 0.0;
				transition: SINUSOIDAL 1.0;
				target:  "bg_new_clip";
				target:  "bg_prev_clip";
				after:	"go2";
			}
			program { name:			"go2";
				action:  SIGNAL_EMIT "e,state,done" "";
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** WIDGETS ***/
	group { name: "e/widgets/check";
		images {
			image: "check_base.png" COMP;
			image: "check_on.png" COMP;
			image: "check_sel.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 18 19;
					max: 18 19;
					align: 0.0 0.5;
					fixed: 1 1;
					rel1 {
						relative: 0.0  0.0;
						offset:	2			2;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	2	-3;
					}
					image.normal: "check_base.png";
				}
			}
			part { name: "mark";
				mouse_events: 0;
				clip_to: "mark_hold";
				description { state: "default" 0.0;
					rel1.to: "mark_hold";
					rel2.to: "mark_hold";
					image.normal: "check_on.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "check_sel.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "mark_hold";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						to: "base";
						offset: -5 -5;
					}
					rel2 {
						to: "base";
						offset: 4 4;
					}
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min:		18 19;
					rel1 {
						to_x:			 "base";
						relative: 1.0  0.0;
						offset:	2 2;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-2 -2;
					}
					color: 0 0 0 255;
					color_class: "check_text";
					text {
						font:			 "Sans";
						size:			 10;
						min:		1 1;
						align:			0.0 0.5;
						text_class: "check_button";
					}
				}
				description { state:			"disabled" 0.0;
					inherit:  "default" 0.0;
					color:			0	0	0 128;
					color_class: "check_text_disabled";
				}
			}
			part { name: "event";
				type: RECT;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
		}
		programs {
			program { name: "on"; /* if the checkmark is to be displayed */
				signal: "e,state,checked";
				source: "e";
				action: STATE_SET "on" 0.0;
				transition: LINEAR 0.15;
				target: "mark_hold";
			}
			program { name: "off"; /* check mark is not to be displayed */
				signal: "e,state,unchecked";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.2;
				target: "mark_hold";
			}
			program { name: "click";
				signal: "mouse,up,1";
				source: "event";
				action: SIGNAL_EMIT "e,action,toggle" "";
			}
			program { name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
			program { name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
		}
	}
	group { name: "e/widgets/check_icon";
		images {
			image: "check_base.png" COMP;
			image: "check_on.png" COMP;
			image: "check_sel.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 18 19;
					max: 18 19;
					align: 0.0 0.5;
					fixed: 1 1;
					rel1 {
						relative: 0.0  0.0;
						offset:	2			2;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	2	-3;
					}
					image.normal: "check_base.png";
				}
			}
			part { name: "mark";
				mouse_events: 0;
				clip_to: "mark_hold";
				description { state: "default" 0.0;
					rel1.to: "mark_hold";
					rel2.to: "mark_hold";
					image.normal: "check_on.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "check_sel.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "mark_hold";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						to: "base";
						offset: -5 -5;
					}
					rel2 {
						to: "base";
						offset: 4 4;
					}
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				clip_to: "icon_clip";
				description { state: "default" 0.0;
					min: 18 19;
					rel1 {
						to_x: "base";
						relative: 1.0  0.0;
						offset: 2 2;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -2 -2;
					}
				}
				description { state: "label_visible" 0.0;
					inherit: "default" 0.0;
					min: 18 19;
					rel2 {
						to_y: "base";
						relative: 1.0  0.0;
						offset:	-2 -2;
					}
				}
			}
			part { name: "icon_clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part { name: "label_clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "label_visible" 0.0;
					visible: 1;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				clip_to: "label_clip";
				description { state: "default" 0.0;
					min: 18 19;
					rel1 {
						to_x: "base";
						relative: 1.0  0.0;
						offset: 2 2;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -2 -2;
					}
					color: 0 0 0 255;
					color_class: "check_text";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "check_button";
					}
				}
				description { state:			"disabled" 0.0;
					inherit:  "default" 0.0;
					color:			0	0	0 128;
					color_class: "check_text_disabled";
				}
			}
			part { name: "event";
				type: RECT;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
		}
		programs {
			program { name: "on"; /* if the checkmark is to be displayed */
				signal: "e,state,checked";
				source: "e";
				action: STATE_SET "on" 0.0;
				transition: LINEAR 0.15;
				target: "mark_hold";
			}
			program { name: "off"; /* check mark is not to be displayed */
				signal: "e,state,unchecked";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.2;
				target: "mark_hold";
			}
			program { name: "click";
				signal: "mouse,up,1";
				source: "event";
				action: SIGNAL_EMIT "e,action,toggle" "";
			}
			program { name: "label_on";
				signal: "e,state,labeled";
				source: "e";
				action: STATE_SET "label_visible" 0.0;
				target: "e.swallow.icon";
				target: "label_clip";
			}
			program { name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
			program { name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
		}
	}

	/* for a radio menu item - same as check, but only one of a group of radio
			* menu item can be selected at any one time */
	group { name: "e/widgets/radio";
		images {
			image: "radio_base.png" COMP;
			image: "radio_on.png" COMP;
			image: "radio_sel.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 19 19;
					max: 19 19;
					align: 0.0 0.5;
					fixed: 1 1;
					rel1 {
						relative: 0.0  0.0;
						offset:	2			2;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	2	-3;
					}
					image.normal: "radio_base.png";
				}
			}
			part { name: "mark";
				mouse_events: 0;
				clip_to: "mark_hold";
				description { state: "default" 0.0;
					rel1.to: "mark_hold";
					rel2.to: "mark_hold";
					image.normal: "radio_on.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "radio_sel.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "mark_hold";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						to: "base";
						offset: -5 -5;
					}
					rel2 {
						to: "base";
						offset: 4 4;
					}
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "base";
						relative: 1.0  0.0;
						offset:	2 2;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-2 -2;
					}
					color: 0 0 0 255;
					color_class: "radio_text";
					text {
						font:			 "Sans";
						size:			 10;
						min:		1 1;
						align:			0.0 0.5;
						text_class: "radio_button";
					}
				}
				description { state:			"disabled" 0.0;
					inherit:  "default" 0.0;
					color:			0 0 0 128;
					color_class: "radio_text_disabled";
				}
			}
			part { name: "event";
				type: RECT;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
		}
		programs {
			program { name: "on"; /* if the checkmark is to be displayed */
				signal: "e,state,on";
				source: "e";
				action: STATE_SET "on" 0.0;
				transition: LINEAR 0.15;
				target: "mark_hold";
			}
			program { name: "off"; /* check mark is not to be displayed */
				signal: "e,state,off";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.2;
				target: "mark_hold";
			}
			program { name: "click";
				signal: "mouse,up,1";
				source: "event";
				action: SIGNAL_EMIT "e,action,toggle" "";
			}
			program { name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
			program { name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
		}
	}
	group { name: "e/widgets/radio_icon";
		images {
			image: "radio_base.png" COMP;
			image: "radio_on.png" COMP;
			image: "radio_sel.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 19 19;
					max: 19 19;
					align: 0.0 0.5;
					fixed: 1 1;
					rel1 {
						relative: 0.0  0.0;
						offset:	2			2;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	2	-3;
					}
					image.normal: "radio_base.png";
				}
			}
			part { name: "mark";
				mouse_events: 0;
				clip_to: "mark_hold";
				description { state: "default" 0.0;
					rel1.to: "mark_hold";
					rel2.to: "mark_hold";
					image.normal: "radio_on.png";
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					image.normal: "radio_sel.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "mark_hold";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					rel1 {
						to: "base";
						offset: -5 -5;
					}
					rel2 {
						to: "base";
						offset: 4 4;
					}
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
					rel1.offset: 0 0;
					rel2.offset: -1 -1;
				}
			}
			part { name: "e.swallow.icon";
				type: SWALLOW;
				clip_to: "icon_clip";
				description { state: "default" 0.0;
					min: 19 19;
					rel1 {
						to_x: "base";
						relative: 1.0  0.0;
						offset: 2 2;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -2 -2;
					}
				}
				description { state: "label_visible" 0.0;
					inherit: "default" 0.0;
					min: 19 19;
					rel2 {
						to_y: "e.text.label";
						relative: 1.0  0.0;
						offset:	-2 -2;
					}
				}
			}
 			part { name: "icon_clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part { name: "label_clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "label_visible" 0.0;
					visible: 1;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				clip_to: "label_clip";
				description { state: "default" 0.0;
					min: 19 19;
					rel1 {
						to_x: "base";
						relative: 1.0  0.5;
						offset: 2 1;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -2 -2;
					}
					color: 0 0 0 255;
					color_class: "radio_text";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "radio_button";
					}
				}
				description { state:			"disabled" 0.0;
					inherit:  "default" 0.0;
					color:			0	0	0 128;
					color_class: "radio_text_disabled";
				}
			}
			part { name: "event";
				type: RECT;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
		}
		programs {
			program { name: "on"; /* if the radiomark is to be displayed */
				signal: "e,state,on";
				source: "e";
				action: STATE_SET "on" 0.0;
				transition: LINEAR 0.15;
				target: "mark_hold";
			}
			program { name: "off"; /* radio mark is not to be displayed */
				signal: "e,state,off";
				source: "e";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 0.2;
				target: "mark_hold";
			}
			program { name: "click";
				signal: "mouse,up,1";
				source: "event";
				action: SIGNAL_EMIT "e,action,toggle" "";
			}
			program { name: "label_on";
				signal: "e,state,labeled";
				source: "e";
				action: STATE_SET "label_visible" 0.0;
				target: "e.swallow.icon";
				target: "label_clip";
			}
			program { name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
			program { name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "mark";
				target: "event";
		target: "e.text.label";
			}
		}
	}

	group { name: "e/widgets/button";
		images {
			image: "button-normal.png" COMP;
			image: "button-pressed.png" COMP;
			image: "button-prelight.png" COMP;
			image: "button-insensitive.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 54 26;
					image {
						normal: "button-normal.png";
						border: 10 10 10 10;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-pressed.png";
				}
				description { state: "over" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-prelight.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-insensitive.png";
				}
			}
			part {
				name: "e.swallow.icon";
				type: SWALLOW;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					align: 0.0 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset:	3	3;
						to: "button_image";
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	3  -4;
						to: "button_image";
					}
				}
				description {
					state: "combo" 0.0;
					inherit: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					align: 0.0 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset:	3  3;
						to: "button_image";
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	3	-4;
						to: "button_image";
					}
				}
				description {
					state: "icon" 0.0;
					inherit: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					align: 0.5 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset:	3  3;
						to: "button_image";
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-4	-4;
						to: "button_image";
					}
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						relative: 1.0  0.0;
						offset:	2			3;
						to_x:	"e.swallow.icon";
						to_y:	"button_image";
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-4	-4;
						to:			 "button_image";
					}
					color: 0 0 0 192;
					color3: 255 255 255 128;
					color_class: "button_text";
					text {
						font:			 "Sans";
						size:			 10;
						min:		1 1;
						align:			0.5 0.5;
						text_class: "button";
					}
				}
				description { state: "icon" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
				description { state: "combo" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 1.0 0.0;
					rel1.offset: 2 5;
					rel1.to_x: "e.swallow.icon";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 201 181 156 255;
					color3: 247 237 214 255;
					color_class: "button_text_disabled";
				}
			}
 			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			OVER_P("button_image","button_image","default","over")
			program {
				name:	"button_click";
				signal: "mouse,down,1";
				source: "button_image";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick";
				signal: "mouse,up,1";
				source: "button_image";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick2";
				signal: "mouse,clicked,1";
				source: "button_image";
				action: SIGNAL_EMIT "e,action,click" "";
			}
			program {
				name: "text_state";
				signal: "e,state,text";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "e.swallow.icon";
				target: "e.text.label";
			}
			program {
				name: "icon_state";
				signal: "e,state,icon";
				source: "e";
				action: STATE_SET "icon" 0.0;
				target: "e.swallow.icon";
				target: "e.text.label";
			}
			program {
				name: "combo_state";
				signal: "e,state,combo";
				source: "e";
				action: STATE_SET "combo" 0.0;
				target: "e.swallow.icon";
				target: "e.text.label";
			}
			program {
				name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "e.text.label";
				target: "disabler";
			}
			program {
				name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "e.text.label";
				target: "disabler";
			}
		}
	}

	group { name: "e/widgets/scrollframe";
		images {
			image: "scrollbar_arrow_down.png" COMP;
			image: "scrollbar_arrow_left.png" COMP;
			image: "scrollbar_arrow_right.png" COMP;
			image: "scrollbar_arrow_up.png" COMP;
			image: "scrollbar-background.png" COMP;
			image: "slider-horiz-active.png" COMP;
			image: "slider-horiz.png" COMP;
			image: "slider-vert-active.png" COMP;
			image: "slider-vert.png" COMP;
			image: "scrollbar-background.png" COMP;
		}
		parts {
			part { name: "bg";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					rel1.offset: 1 1;
					rel2.offset: -2 -2;
					color: 255 255 255 255;
					color_class: "scrollframe_base";
				}
			}
			part { name: "clipper";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1.to: "bg";
					rel2.to: "bg";
				}
			}
			part { name: "e.swallow.content";
				clip_to: "clipper";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.offset: 1 1;
					rel2 {
						relative: 0.0  0.0;
						offset:	-1	-1;
						to_x: "sb_vbar";
						to_y: "sb_hbar";
					}
				}
			}
			part { name: "conf_over";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.offset: -1 -1;
					rel2.offset: 0 0;
					image {
						normal: "inset_sunk.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			part { name: "sb_vbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 1.0 0.0;
					rel1 {
						relative: 1.0 0.0;
						offset:	-2 1;
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-2 -1;
						to_y:			 "sb_hbar";
					}
				}
				description { state: "hidden" 0.0;
					visible: 0;
					max: 0 99999;
					rel1 {
						relative: 1.0 0.0;
						offset:	-1 0;
					}
					rel2 {
						relative: 1.0 0.0;
						offset:	-1 -1;
						to_y:			 "sb_hbar";
					}
				}
			}
			part { name: "sb_vbar_base";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0  1.0;
						offset:	0			-2;
						to:				"sb_vbar_a1";
					}
					rel2 {
						relative: 1.0  0.0;
						offset:	0			1;
						to:				"sb_vbar_a2";
					}
				}
			}
			part { name: "sb_vbar_runner";
				clip_to: "sb_vbar";
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 16 99999;
					rel1.to:				"sb_vbar_base";
					rel1.offset:	0 0;
					rel2.to:				"sb_vbar_base";
					image {
						normal: "scrollbar-background.png";
						border: 2 2 3 3;
					}
					fill.smooth: 0;
				}
			}
			part { name: "sb_vbar_p1";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0 1.0;
						to:				"sb_vbar_a1";
					}
					rel2 {
						relative: 1.0 0.0;
						to:				"e.dragable.vbar";
					}
				}
			}
			part { name: "sb_vbar_p2";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0 1.0;
						to:				"e.dragable.vbar";
					}
					rel2 {
						relative: 1.0 0.0;
						to:				"sb_vbar_a2";
					}
				}
			}
			part { name: "e.dragable.vbar";
				clip_to: "sb_vbar";
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 0 0 0;
					y: 1 1 0;
					confine: "sb_vbar_base";
				}
				description { state: "default" 0.0;
					min: 16 40;
					max: 16 99999;
					rel1 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_vbar_base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_vbar_base";
					}
					image {
						normal: "slider-vert.png";
						border: 0 0 10 10;
					}
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider-vert-active.png";
				}
			}

			part { name: "sb_vbar_a1";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.5 0.0;
					aspect: 1.0 1.0;
					aspect_preference: HORIZONTAL;
					color: 0 0 0 0;
					rel1 { to: "sb_vbar";
						relative: 0.0  0.0;
						offset:	-1			0;
					}
					rel2 { to: "sb_vbar";
						relative: 1.0  0.0;
						offset:	-1	0;
					}
				}
			}
			part { name: "sb_vbar_a1_arrow";
				mouse_events: 0;
				clip_to: "sb_vbar";
				description { state: "default" 0.0;
					max:16 16;
					rel1.to: "sb_vbar_a1";
					rel1.offset:	1 0;
					rel2.to: "sb_vbar_a1";
					image.normal: "scrollbar_arrow_up.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 -1;
					rel2.offset: -1 -2;
				}
			}

			part { name: "sb_vbar_a2";
				type: RECT;
				clip_to: "sb_vbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.5 1.0;
					aspect: 1.0 1.0;
					aspect_preference: HORIZONTAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_vbar";
						relative: 0.0  1.0;
						offset:	-1			0;
					}
					rel2 {
						to: "sb_vbar";
						relative: 1.0  1.0;
						offset:	-1	0;
					}
				}
			}
			part { name: "sb_vbar_a2_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_vbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_vbar_a2";
					rel1.offset:	1 0;
					rel2.to: "sb_vbar_a2";
					image.normal: "scrollbar_arrow_down.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 1;
					rel2.offset: -1 0;
				}
			}

			part { name: "sb_hbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.0 1.0;
					rel1 {
						relative: 0.0 1.0;
						offset:	1 -2;
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	-1 -2;
						to_x: "sb_vbar";
					}
				}
				description { state: "hidden" 0.0;
					visible: 0;
					rel1 {
						relative: 0.0  1.0;
						offset:	0 -1;
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	-1 -1;
						to_x: "sb_vbar";
					}
				}
			}
			part { name: "sb_hbar_base";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						offset:	-2 0;
						to: "sb_hbar_a1";
					}
					rel2 {
						relative: 0.0 1.0;
						offset:	1 0;
						to: "sb_hbar_a2";
					}
				}
			}
			part { name: "sb_hbar_runner";
				clip_to: "sb_hbar";
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 99999 16;
					rel1.to: "sb_hbar_base";
					rel1.offset: 0 0;
					rel2.to: "sb_hbar_base";
					image {
						normal: "scrollbar-background.png";
						border: 3 3 2 2;
					}
					fill.smooth: 0;
				}
			}
			part { name: "sb_hbar_p1";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						to: "sb_hbar_a1";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "e.dragable.hbar";
					}
				}
			}
			part { name: "sb_hbar_p2";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						to: "e.dragable.hbar";
					}
					rel2 {
						relative: 0.0 1.0;
						to: "sb_hbar_a2";
					}
				}
			}
			part { name: "e.dragable.hbar";
				clip_to: "sb_hbar";
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 1 1 0;
					y: 0 0 0;
					confine: "sb_hbar_base";
				}
				description { state: "default" 0.0;
					min: 40 16;
					max: 99999 16;
					rel1 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_hbar_base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0 0;
						to: "sb_hbar_base";
					}
					image {
						normal: "slider-horiz.png";
						border: 10 10 0 0;
					}
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider-horiz-active.png";
				}
			}

			part { name: "sb_hbar_a1";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 0.0 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_hbar";
						relative: 0.0  0.0;
						offset:	0 -1;
					}
					rel2 {
						to: "sb_hbar";
						relative: 0.0  1.0;
						offset:	0 -1;
					}
				}
			}
			part { name: "sb_hbar_a1_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_hbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_hbar_a1";
					rel1.offset:	0 1;
					rel2.to: "sb_hbar_a1";
					image.normal: "scrollbar_arrow_left.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: -1 0;
					rel2.offset: -2 -1;
				}
			}

			part { name: "sb_hbar_a2";
				type: RECT;
				clip_to: "sb_hbar";
				mouse_events: 1;
				description { state: "default" 0.0;
					min: 16 16;
					align: 1.0 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
					rel1 {
						to: "sb_hbar";
						relative: 1.0  0.0;
						offset:	-1 -1;
					}
					rel2 {
						to: "sb_hbar";
						relative: 1.0  1.0;
						offset:	-1	-1;
					}
				}
			}
			part { name: "sb_hbar_a2_arrow";
				type: IMAGE;
				mouse_events: 0;
				clip_to: "sb_hbar";
				description { state: "default" 0.0;
					max: 16 16;
					rel1.to: "sb_hbar_a2";
					rel1.offset:	0 1;
					rel2.to: "sb_hbar_a2";
					image.normal: "scrollbar_arrow_right.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 1 0;
					rel2.offset: 0 -1;
				}
			}
		}
		programs {
			program { name: "sb_vbar_show";
				signal: "e,action,show,vbar";
				source: "e";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar";
			}
			program { name: "sb_vbar_hide";
				signal: "e,action,hide,vbar";
				source: "e";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_vbar";
			}
			program { name: "sb_hbar_show";
				signal: "e,action,show,hbar";
				source: "e";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar";
			}
			program { name: "sb_hbar_hide";
				signal: "e,action,hide,hbar";
				source: "e";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_hbar";
			}

			program { name: "sb_vbar_a1_down";
				signal: "mouse,down,1";
				source: "sb_vbar_a1";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_vbar_a1_arrow";
			}
			program { name: "sb_vbar_a1_down2";
				signal: "mouse,down,1";
				source: "sb_vbar_a1";
				action:  DRAG_VAL_STEP 0.0 -1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_a1_up";
				signal: "mouse,up,1";
				source: "sb_vbar_a1";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar_a1_arrow";
			}
			program { name: "sb_vbar_a2_down";
				signal: "mouse,down,1";
				source: "sb_vbar_a2";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_vbar_a2_arrow";
			}
			program { name: "sb_vbar_a2_down2";
				signal: "mouse,down,1";
				source: "sb_vbar_a2";
				action:  DRAG_VAL_STEP 0.0 1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_a2_up";
				signal: "mouse,up,1";
				source: "sb_vbar_a2";
				action:  STATE_SET "default" 0.0;
				target: "sb_vbar_a2_arrow";
			}
			program { name: "sb_vbar_p1_down";
				signal: "mouse,down,1";
				source: "sb_vbar_p1";
				action:  DRAG_VAL_PAGE 0.0 -1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_p2_down";
				signal: "mouse,down,1";
				source: "sb_vbar_p2";
				action:  DRAG_VAL_PAGE  0.0 1.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_down";
				signal: "mouse,down,1";
				source: "e.dragable.vbar";
				action:  STATE_SET "clicked" 0.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_vbar_up";
				signal: "mouse,up,1";
				source: "e.dragable.vbar";
				action:  STATE_SET "default" 0.0;
				target: "e.dragable.vbar";
			}
			program { name: "sb_hbar_a1_down";
				signal: "mouse,down,1";
				source: "sb_hbar_a1";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_hbar_a1_arrow";
			}
			program { name: "sb_hbar_a1_down2";
				signal: "mouse,down,1";
				source: "sb_hbar_a1";
				action:  DRAG_VAL_STEP -1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_a1_up";
				signal: "mouse,up,1";
				source: "sb_hbar_a1";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar_a1_arrow";
			}
			program { name: "sb_hbar_a2_down";
				signal: "mouse,down,1";
				source: "sb_hbar_a2";
				action:  STATE_SET "clicked" 0.0;
				target: "sb_hbar_a2_arrow";
			}
			program { name: "sb_hbar_a2_down2";
				signal: "mouse,down,1";
				source: "sb_hbar_a2";
				action:  DRAG_VAL_STEP 1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_a2_up";
				signal: "mouse,up,1";
				source: "sb_hbar_a2";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar_a2_arrow";
			}
			program { name: "sb_hbar_p1_down";
				signal: "mouse,down,1";
				source: "sb_hbar_p1";
				action:  DRAG_VAL_PAGE -1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_p2_down";
				signal: "mouse,down,1";
				source: "sb_hbar_p2";
				action:  DRAG_VAL_PAGE  1.0 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_down";
				signal: "mouse,down,1";
				source: "e.dragable.hbar";
				action:  STATE_SET "clicked" 0.0;
				target: "e.dragable.hbar";
			}
			program { name: "sb_hbar_up";
				signal: "mouse,up,1";
				source: "e.dragable.hbar";
				action:  STATE_SET "default" 0.0;
				target: "e.dragable.hbar";
			}
		}
	}
	
#include "elm/scroller.edc"
#include "elm/entry.edc"
#include "elm/photocam.edc"
#include "elm/map.edc"
	

	group { name: "e/widgets/ilist";
		data.item: "stacking" "above";
		data.item: "selectraise" "on";
		images {
			image: "selected.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_base";
				}
			}
			part { name: "selected";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "selected.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
			part {
				name:	"e.swallow.icon";
				type:	SWALLOW;
				description {
					state:	"default" 0.0;
					align:	0.0 0.5;
					aspect:	1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 {
						relative: 0.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	4 -5;
					}
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "e.swallow.icon";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 255 255 255 255;
					color3: 0 0 0 0;
					color_class: "ilist_item";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					color3: 0 0 0 64;
					color_class: "ilist_item_selected";
				}
			}
			part { name: "e.swallow.end"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            rel1.offset: -3 2;
            rel1.relative: 1.0 0.0;
            rel2.offset: -3 -3;
         }
      }
			part {
				name:							"event";
				type:							RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
		}
		programs {
			program {
				name:			"go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "selected";
				target:  "e.text.label";
			}
			program {
				name:			"go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "selected";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
		}
	}

	group { name: "e/widgets/ilist_odd";
		inherit: "e/widgets/ilist";
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_odd_base";
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "e.swallow.icon";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 255 255 255 255;
					color_class: "ilist_item_odd";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_selected";
				}
			}
	}
}

	group { name: "e/widgets/ilist_header";
		data.item: "stacking" "above";
		data.item: "selectraise" "on";
				images {
			image: "selected.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_header_base";
				}
			}
			part { name: "selected";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "selected.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
			part {
				name:					"e.swallow.icon";
				type:					SWALLOW;
				description {
					state:			"default" 0.0;
					align:			0.0 0.5;
					aspect:	1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 {
						relative: 0.0  0.0;
						offset:	4			4;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	4	-5;
					}
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "e.swallow.icon";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 224 224 224 255;
					color3: 0 0 0 32;
					color_class: "ilist_item";
					text {
						font: "Sans:style=Bold";
						size: 16;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					color_class: "ilist_item";
				}
			}
			part {
				name:							"event";
				type:							RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
		}
		programs {
			program {
				name:			"go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "selected";
				target:  "e.text.label";
			}
			program {
				name:			"go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "selected";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
		}
	}

	group { name: "e/widgets/ilist_header_odd";
		data.item: "stacking" "below";
		data.item: "selectraise" "on";
				images {
			image: "selected.png" COMP;
		}
		parts {
			part {
				name: "base";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					color: 255 255 255 255;
					color_class: "ilist_item_header_odd_base";
				}
			}
			part { name: "selected";
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "selected.png";
						border: 2 2 2 2;
					}
					fill.smooth: 0;
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
			part {
				name:					"e.swallow.icon";
				type:					SWALLOW;
				description {
					state:			"default" 0.0;
					align:			0.0 0.5;
					aspect:	1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 {
						relative: 0.0  0.0;
						offset:	4			4;
					}
					rel2 {
						relative: 0.0  1.0;
						offset:	4	-5;
					}
				}
			}
			part {
				name:	"e.text.label";
				type:	TEXT;
				effect:			SOFT_SHADOW;
				mouse_events:	0;
				scale: 1;
				description {
					state: "default" 0.0;
					min:		16 16;
					rel1 {
						to_x:			 "e.swallow.icon";
						relative: 1.0  0.0;
						offset:	4 4;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-5 -5;
					}
					color: 224 224 224 255;
					color3: 0 0 0 32;
					color_class: "ilist_item";
					text {
						font: "Sans:style=Bold";
						size: 16;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "ilist_item";
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color: 224 224 224 255;
					color3: 0 0 0 64;
					color_class: "ilist_item";
				}
			}
			part {
				name:							"event";
				type:							RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
		}
		programs {
			program {
				name:			"go_active";
				signal:  "e,state,selected";
				source:  "e";
				action:  STATE_SET "selected" 0.0;
				target:  "selected";
				target:  "e.text.label";
			}
			program {
				name:			"go_passive";
				signal:  "e,state,unselected";
				source:  "e";
				action:  STATE_SET "default" 0.0;
				target:  "selected";
				target:  "e.text.label";
				transition: LINEAR 0.1;
			}
		}
	}

	group { name: "e/widgets/ilist/toggle_end";
		inherit: "e/widgets/radio";
		programs {
      program {
		  name: "on";
         signal: "e,state,checked"; source: "e";
         action: STATE_SET "on" 0.0;
         target: "mark_hold";
      }
      program {
		  name: "off";
         signal: "e,state,unchecked"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "mark_hold";
      }
   }
	}

	group { name: "e/widgets/entry/scrollframe";
//		min: 12 12;
		images.image: "entry.png" COMP;
		parts {
			part { name: "base";
				type: IMAGE;
				description { state: "default" 0.0;
					image {
						normal: "entry.png";
						border: 4 4 4 4;
					}
					fill.smooth : 0;
				}
			}
			part { name: "clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 255 255 255 255;
					rel1 {
						to: "base"; 
						relative: 0.0 0.0;
						offset: 3 2; 
					}
					rel2 {
						to: "base"; 
						relative: 1.0 1.0;
						offset: -6 -2; 
					}
				}
			}
			part { name: "e.swallow.content";
				type: SWALLOW;
				clip_to: "clip";
				description { state: "default" 0.0;
					rel1.to: "clip";
					rel2.to: "clip"; 
				}
			}
		}
	}

group { name: "e/widgets/entry/text";
      styles {
         style { name: "entry_textblock_style";
            base: "font=Sans font_size=10 color=#ffffffff text_class=entry color_classs=entry_text";
         }
         style { name: "entry_textblock_disabled_style";
            base: "font=Sans font_size=10 color=#151515 style=shadow,bottom shadow_color=#ffffff19 text_class=entry color_class=entry_text_disabled";
         }
      }
   parts {
      part { name: "e.text.text"; type: TEXTBLOCK;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: DEFAULT;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "e/widgets/entry/selection"; // selection under
         source4: "e/widgets/entry/cursor"; // cursorover
         description { state: "default" 0.0;
            color_class: "entry_text";
            align: 0.0 0.5;
            text {
               text: "";
               style: "entry_textblock_style";
               min: 1 1;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "entry_textblock_disabled_style";
            color_class: "entry_text_disabled";
         }
      }
   }
		programs {
			program { name: "focus";
					signal: "load";
					source: "";
					action: FOCUS_SET;
					target: "e.text.text";
			}
			program { name: "disable";
					signal: "e,state,disabled";
					source: "e";
					action: STATE_SET "disabled" 0.0;
					target: "e.text.text";
			}
			program { name: "enable";
					signal: "e,state,enabled";
					source: "e";
					action: STATE_SET "default" 0.0;
					target: "e.text.text";
			}
		}
	}

group { name: "e/widgets/entry/password";
   inherit: "e/widgets/entry/text";
   parts {
      part { name: "e.text.text";
         entry_mode: PASSWORD;
         description { state: "default" 0.0;
            text.repch: "*";
         }
      }
   }
}

	group { name: "e/widgets/entry/cursor";
		min: 1 0;
		parts {
			part { name: "cursor";
				type: RECT;
				description { state: "default" 0.0;
					rel1.offset: 1 0;
					rel2.offset: 0 -1;
					color: 0 0 0 0;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 255;
				}
			}
		}
		programs {
			program { name: "on_cursor_show";
				signal:  "e,action,show,cursor";
				source:  "e";
				action: ACTION_STOP;
				target: "cursor_show";
				target: "cursor_hide";
				target: "cursor_show_timer";
				target: "cursor_hide_timer";
				after: "cursor_show";
			}
			program {
         name: "on_cursor_hide";
         signal: "e,action,hide,cursor";
         source: "e";
         action: ACTION_STOP;
         target: "cursor_show";
         target: "cursor_hide";
         target: "cursor_show_timer";
         target: "cursor_hide_timer";
         after: "cursor_hide_stop";
      }
      program {
         name: "cursor_hide_stop";
         action: STATE_SET "default" 0.0;
         target: "cursor";
      }
			program { name: "cursor_show";
				action: STATE_SET "visible" 0.0;
				target: "cursor";
				after: "cursor_show_timer";
			}
			program { name: "cursor_hide";
				action: STATE_SET "default" 0.0;
				target: "cursor";
				transition: SINUSOIDAL 0.2;
				after: "cursor_hide_timer";
			}
			program { name: "cursor_show_timer";
				in: 0.55 0.0;
				after: "cursor_hide";
			}
			program { name: "cursor_hide_timer";
				in: 0.2 0.0;
				after: "cursor_show";
			}
		}
	}

	group { name: "e/widgets/entry/selection";
		data.item: "on_foreground" "0";
		parts {
			part { name: "selection";
				type: RECT;
				description { state: "default" 0.0;
					rel1.offset: 2 0;
					rel2.offset: 1 -1;
					color_class: "focus";
				}
			}
		}
	}

	group { name: "e/widgets/preview";
		images.image: "inset_sunk.png" COMP;
		parts {
			part { name: "clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1.to: "e.swallow.content";
					rel2.to: "e.swallow.content";
				}
			}
			part { name: "e.swallow.content";
				clip_to: "clip";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.offset: 1 1;
					rel2.offset: -2 -2;
				}
			}
			part { name:					"border";
				mouse_events:  0;
				description { state:			"default" 0.0;
					image {
						normal: "inset_sunk.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
		}
	}

	group { name: "e/widgets/deskpreview/desk";
		images.image: "inset_sunk.png" COMP;
		parts {
			part { name: "clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1.to: "e.swallow.content";
					rel2.to: "e.swallow.content";
				}
			}
			part { name: "e.swallow.content";
				clip_to: "clip";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1.offset: 1 1;
					rel2.offset: -2 -2;
				}
			}
			part { name:					"border";
				mouse_events:  0;
				description { state:			"default" 0.0;
					image {
						normal: "inset_sunk.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			part { name: "e.event.menu";
				type: RECT;
				description { state: "default" 0.0;
			color: 0 0 0 0;
				}
			}
		}
	}

	group { name: "e/widgets/color_well";
		alias:  "e/widgets/gradpreview";
		images.image: "inset_sunk.png" COMP;
		parts {
			part { name:  "content_clip";
				type:  RECT;
				mouse_events:  0;
				description { state:			"default" 0.0;
					rel1.to:  "e.swallow.content";
					rel2.to:  "e.swallow.content";
					color: 255 255 255 255;
				}
				description { state:			"disabled" 0.0;
					inherit:  "default" 0.0;
					color: 255 255 255 0;
				}
			}
			part { name:  "e.swallow.content";
				type:  SWALLOW;
				clip_to:  "content_clip";
				description { state:			"default" 0.0;
					rel1.offset:	4  4;
					rel2.offset:	-5  -5;
				}
			}
			part { name:					"border";
				mouse_events:  1;
				description { state:			"default" 0.0;
					rel1 {
						to:  "e.swallow.content";
						offset: -1 -1;
					}
					rel2 {
						to:  "e.swallow.content";
						offset: 0 0;
					}
					image {
						normal: "inset_sunk.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			 }
		programs {
			program { name: "send_click";
				signal: "mouse,clicked,1";
				source: "border";
				action: SIGNAL_EMIT "e,action,click" "";
			}
			program { name: "disable";
						signal: "e,state,disabled";
						source: "e";
						action: STATE_SET "disabled" 0.0;
						target: "content_clip";
			}
			program { name: "enable";
						signal: "e,state,enabled";
						source: "e";
						action: STATE_SET "default" 0.0;
						target: "content_clip";
			}
		}
	}

	group { name: "e/widgets/spectrum";
		images.image: "inset_sunk.png" COMP;
		parts {
			part { name:  "content_clip";
				type:  RECT;
				mouse_events:  0;
				description { state:			"default" 0.0;
					rel1.to:  "e.swallow.content";
					rel2.to:  "e.swallow.content";
					color: 255 255 255 255;
				}
			}
			part { name:  "e.swallow.content";
				type:  SWALLOW;
				clip_to:  "content_clip";
				description { state:			"default" 0.0;
					rel1.offset:	4  4;
					rel2.offset:	-5  -5;
				}
			}
			part { name:					"border";
				mouse_events:  1;
				description { state:			"default" 0.0;
					rel1 {
						to:  "e.swallow.content";
						offset: -1 -1;
					}
					rel2 {
						to:  "e.swallow.content";
						offset: 0 0;
					}
					image {
						normal: "inset_sunk.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			part { name: "e.dragable.cursor";
				type: RECT;
				dragable {
					confine: "e.swallow.content";
					x: 1 1 0;
					y: 1 1 0;
				}
				description { state: "default" 0.0;
					min: 1 1;
					max: 1 1;
					fixed: 1 1;
					visible: 0;
					rel1 {
						to: "e.swallow.content";
						relative: 0.5 0.5;
						offset: 0 0;
					}
					rel2 {
						to: "e.swallow.content";
						relative: 0.5 0.5;
						offset: 0 0;
					}
				}
			}
			part { name: "cursor_x";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						to_x: "e.dragable.cursor";
						to_y: "e.swallow.content";
					}
					rel2 {
						to_x: "e.dragable.cursor";
						to_y: "e.swallow.content";
					}
					color: 255 255 255 150;
				}
			}
			part { name: "cursor_y";
				type: RECT;
				description { state: "default" 0.0;
					rel1 {
						to_x: "e.swallow.content";
						to_y: "e.dragable.cursor";
					}
					rel2 {
						to_x: "e.swallow.content";
						to_y: "e.dragable.cursor";
					}
					color: 255 255 255 150;
				}
			}
		}
	}

	group { name: "e/widgets/cslider";
		images.image: "inset_sunk.png" COMP;
		parts {
			part { name:  "content_clip";
				type:  RECT;
				mouse_events:  0;
				description { state:			"default" 0.0;
					rel1.to:  "e.swallow.content";
					rel2.to:  "e.swallow.content";
					color: 255 255 255 255;
				}
			}
			part { name:  "e.swallow.content";
				type:  SWALLOW;
				clip_to:  "content_clip";
				description { state:			"default" 0.0;
					min: 50 20;
					rel1.offset:	4			4;
					rel2.offset:	-5			-5;
				}
				description { state: "vertical" 0.0;
					inherit: "default" 0.0;
					min: 20 50;
				}
			}
			part { name: "border";
				mouse_events:  0;
				description { state:			"default" 0.0;
					rel1 {
						to:  "e.swallow.content";
						offset: -1 -1;
					}
					rel2 {
						to:  "e.swallow.content";
						offset: 0 0;
					}
					image {
						normal: "inset_sunk.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			part { name: "e.dragable.cursor";
				type: RECT;
				clip_to:				"content_clip";
				dragable {
					confine: "e.swallow.content";
					x: 1 1 0;
					y: -1 1 0;
				}
				description { state: "default" 0.0;
					min: 1 24;
					max: 1 9999;
					fixed: 1 1;
					rel1 {
						to: "e.swallow.content";
						relative: 0.5 0.0;
						offset: 0 0;
					}
					rel2 {
						to: "e.swallow.content";
						relative: 0.5 1.0;
						offset: 0 -1;
					}
					color: 255 255 255 150;
				}
				description { state: "vertical" 0.0;
					min: 24 1;
					max: 9999 1;
					fixed: 1 1;
					rel1 {
						to: "e.swallow.content";
						relative: 0.0 0.5 ;
						offset: 0 0;
					}
					rel2 {
						to: "e.swallow.content";
						relative: 1.0 0.5;
						offset: -1 0;
					}
					color: 255 255 255 150;
				}
			}
		}
		programs {
			program { name: "go_vertical";
				signal: "e,state,direction,v";
				source: "e";
				action: STATE_SET "vertical" 0.0;
				target: "e.dragable.cursor";
				target: "e.swallow.content";
			}
		}
	}

	group { name: "e/widgets/slider_vertical";
		images {
			image: "slider.png" COMP;
			image: "slider_clicked.png" COMP;
			image: "slider_runnerv.png" COMP;
			image: "entry.png" COMP;
		}
		parts {
			part { name: "base";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					min: 22 0;
					rel1.offset: 2 2;
					rel2.offset: -3 -3;
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					rel2 {
						to_y: "label";
						relative: 1.0  0.0;
						offset:	-3	-1;
					}
				}
			}
			part { name: "runner";
				mouse_events: 0;
				clip_to: "clip";
				description { state: "default" 0.0;
					max: 12 99999;
					rel1.to: "base";
					rel2.to: "base";
					image {
						normal: "slider_runnerv.png";
						border: 4 4 4 4;
					}
					fill.smooth: 0;
				}
			}
			part { name: "label_base";
				clip_to: "clip";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
					visible: 0;
					rel1.to: "label";
					rel1.offset: 1 1;
					rel2.to: "label";
					rel2.offset: -2 -2;
				}
				description { state:  "active" 0.0;
					inherit: "default" 0.0;
					visible:  1;
				}
			}
			part { name:  "label";
				mouse_events:  0;
				clip_to: "clip";
				description { state:  "default" 0.0;
					visible:  0;
				}
				description { state:  "active" 0.0;
					rel1 {
						to:  "e.text.label";
						offset:  -4  -2;
					}
					rel2 {
						to:  "e.text.label";
						offset:  3  1;
					}
					image {
						normal: "entry.png";
						border: 7 7 7 7;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			part { name:  "e.text.label";
				type:  TEXT;
				mouse_events:	0;
				clip_to: "clip";
				scale: 1;
				description { state:  "default" 0.0;
					visible:  0;
				}
				description { state: "active" 0.0;
					align: 0.5 1.0;
					fixed: 1 1;
					rel1 {
						relative: 0.0  1.0;
						offset:	7			-8;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-8  -8;
					}
					color: 0 0 0 255;
					color_class: "slider_text";
					text { text:			 "0.0";
						font:			 "Sans";
						size:			 10;
						min:		1 1;
						align:			0.5 0.5;
						text_class: "slider";
						ellipsis: -1;
					}
				}
			}
			part { name: "sld_p1";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel2 {
						relative: 1.0 0.0;
						to:  "e.dragable.slider";
					}
				}
			}
			part { name: "sld_p2";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 0.0 1.0;
						to:  "e.dragable.slider";
					}
				}
			}
			
			part {
            name: "e.swallow.bar";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "e.dragable.slider";
                  to_y: "base";
                  offset: 0 5;
               }
               rel2 {
                  to_x: "e.dragable.slider";
                  to_y: "base";
                  offset: -1 -6;
               }
            }
         }
			
			part { name: "e.dragable.slider";
				type: RECT;
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 0 0 0;
					y: -1 1 0;
					confine: "base";
				}
				description { state: "default" 0.0;
					min: 11 11;
					fixed: 1 1;
					rel1 {
						relative: 0.5  0.5;
						offset:	0			0;
						to: "base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0			0;
						to: "base";
					}
					color: 0 0 0 0;
				}
			}
			part { name: "button";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					min: 9 9;
					max: 9 9;
					fixed: 1 1;
					rel1.to: "e.dragable.slider";
					rel1.offset: -1 0;
					rel2.to: "e.dragable.slider";
					image.normal: "slider.png";
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider_clicked.png";
				}
			}
			part { name: "clip";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					color: 0 0 0 0;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "sld_p1_down";
				signal: "mouse,down,1";
				source: "sld_p1";
				action:  DRAG_VAL_PAGE 0.0 -1.0;
				target: "e.dragable.slider";
			}
			program { name: "sld_p2_down";
				signal: "mouse,down,1";
				source: "sld_p2";
				action:  DRAG_VAL_PAGE  0.0 1.0;
				target: "e.dragable.slider";
			}
			program { name: "button_down";
				signal: "mouse,down,1";
				source: "e.dragable.slider";
				action:  STATE_SET "clicked" 0.0;
				target: "button";
			}
			program { name: "button_up";
				signal: "mouse,up,1";
				source: "e.dragable.slider";
				action:  STATE_SET "default" 0.0;
				target: "button";
			}
			program { name: "show_label";
				signal: "e,action,show,label";
				source: "e";
				action: STATE_SET "active" 0.0;
				target: "base";
				target: "label";
				target: "label_base";
				target: "e.text.label";
			}
			program { name: "hide_label";
				signal: "e,action,hide,label";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "base";
				target: "label";
				target: "label_base";
				target: "e.text.label";
			}
			program { name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "clip";
				target: "event";
			}
			program { name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "clip";
				target: "event";
			}
		}
	}

	group { name: "e/widgets/slider_horizontal";
		images {
			image: "slider.png" COMP;
			image: "slider_clicked.png" COMP;
			image: "slider_runnerh.png" COMP;
			image: "entry.png" COMP;
		}
		parts {
			part { name: "base";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					min: 0 22;
					rel1.offset: 15 2;
					rel2.offset: -3 -3;
				}
				description { state: "active" 0.0;
					inherit: "default" 0.0;
					rel2 {
						to_x: "label";
						relative: 0.0  1.0;
						offset:	-1	-3;
					}
				}
			}
			part { name: "runner";
				mouse_events: 0;
				clip_to: "clip";
				description { state: "default" 0.0;
					max: 99999 12;
					rel1.to:  "base";
					rel2.to:  "base";
					image {
						normal: "slider_runnerh.png";
						border: 4 4 4 4;
					}
					fill.smooth: 0;
				}
			}
			part { name: "label_base";
				clip_to: "clip";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
					visible: 0;
					rel1.to: "label";
					rel1.offset: 1 1;
					rel2.to: "label";
					rel2.offset: -2 -2;
				}
				description { state:  "active" 0.0;
					inherit: "default" 0.0;
					visible:  1;
				}
			}
			part { name:  "label";
				mouse_events:  0;
				clip_to: "clip";
				description { state:  "default" 0.0;
					visible:  0;
				}
				description { state:  "active" 0.0;
					min: 20 0;
					rel1 {
						to:  "e.text.label";
						offset:  -4 -2;
					}
					rel2 {
						to:				"e.text.label";
						offset:	2	1;
					}
					image {
						normal: "entry.png";
						border: 5 5 5 5;
						middle: 0;
					}
					fill.smooth : 0;
				}
			}
			part { name:  "e.text.label";
				type:  TEXT;
				mouse_events:  0;
				clip_to: "clip";
				scale: 1;
				description { state:  "default" 0.0;
					visible:  0;
				}
				description { state: "active" 0.0;
					align: 1.0 0.5;
					fixed: 1 0;
					rel1 {
						relative: 1.0  0.0;
						offset:	-8	7;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-8 -8;
					}
					color: 0 0 0 255;
					color_class: "slider_text";
					text { text:  "0.0";
						font:		"Sans";
						size:		10;
						min:		1 1;
						align:		0.5 0.5;
						text_class: "slider";
						ellipsis: -1;
					}
				}
			}
			part { name: "sld_p1";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel2 {
						relative: 0.0 1.0;
						to:  "e.dragable.slider";
					}
				}
			}
			part { name: "sld_p2";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel1 {
						relative: 1.0 0.0;
						to:  "e.dragable.slider";
					}
				}
			}
			
			part {
            name: "e.swallow.bar";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "base";
                  to_y: "e.dragable.slider";
                  offset: 5 0;
               }
               rel2 {
                  to_x: "base";
                  to_y: "e.dragable.slider";
                  offset: -6 -1;
               }
            }
         }
			
			part { name: "e.dragable.slider";
				type: RECT;
				mouse_events: 1;
				scale: 1;
				dragable {
					x: 1 1 0;
					y: 0 0 0;
					confine: "base";
				}
				description { state: "default" 0.0;
					min: 11 11;
					fixed: 1 1;
					rel1 {
						relative: 0.5  0.5;
						to: "base";
					}
					rel2 {
						relative: 0.5  0.5;
						offset:	0			0;
						to: "base";
					}
					color: 0 0 0 0;
				}
			}
			part { name: "slider";
				mouse_events: 0;
				clip_to: "clip";
				scale: 1;
				description { state: "default" 0.0;
					min: 9 9;
					max: 9 9;
					fixed: 1 1;
					rel1.to: "e.dragable.slider";
					rel1.offset: 0 1;
					rel2.to: "e.dragable.slider";
					image.normal: "slider.png";
					fill.smooth: 0;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "slider_clicked.png";
				}
			}
			part { name: "clip";
				type: RECT;
				description { state: "default" 0.0; }
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "event";
				type: RECT;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					color: 0 0 0 0;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "sld_p1_down";
				signal: "mouse,down,1";
				source: "sld_p1";
				action:  DRAG_VAL_PAGE -1.0 0.0;
				target: "e.dragable.slider";
			}
			program { name: "sld_p2_down";
				signal: "mouse,down,1";
				source: "sld_p2";
				action:  DRAG_VAL_PAGE  1.0 0.0;
				target: "e.dragable.slider";
			}
			program { name: "sld_down";
				signal: "mouse,down,1";
				source: "e.dragable.slider";
				action:  STATE_SET "clicked" 0.0;
				target: "slider";
			}
			program { name: "sld_up";
				signal: "mouse,up,1";
				source: "e.dragable.slider";
				action:  STATE_SET "default" 0.0;
				target: "slider";
			}
			program { name: "show_label";
				signal: "e,action,show,label";
				source: "e";
				action: STATE_SET "active" 0.0;
				target: "base";
				target: "label";
				target: "label_base";
				target: "e.text.label";
			}
			program { name: "hide_label";
				signal: "e,action,hide,label";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "base";
				target: "label";
				target: "label_base";
				target: "e.text.label";
			}
			program { name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "clip";
				target: "event";
			}
			program { name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "clip";
				target: "event";
			}
		}
	}

	group { name: "e/widgets/frame";
		images {
			image: "frame.png" COMP;
		}
		parts {
			part { name: "base";
				mouse_events:  0;
				description { state: "default" 0.0;
					rel1.offset: 1 1;
					rel2.offset: -2 -2;
					image {
						normal: "frame.png";
						border: 8 8 8 8;
					}
					fill.smooth : 0;
				}
			}
			part { name: "e.swallow.content";
				type: SWALLOW;
				description { state: "default" 0.0;
					rel1 {
						to_y: "e.text.label";
						relative: 0.0 1.0;
						offset: 8 2;
					}
					rel2.offset: -9 -9;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				mouse_events:	0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 0.0;
						offset: 6 6;
					}
					rel2 {
						relative: 1.0 0.0;
						offset: -7 6;
					}
					color: 0 0 0 128;
					text {
						font: "Sans:style=Bold";
						size: 10;
						min: 1 1;
						max: 1 1;
						align: 0.0 0.0;
						text_class: "frame";
					}
				}
			}
		}
	}

#include "elm/frame.edc"


	group { name: "e/widgets/label";
		parts {
			part { name: "e.text.label";
				type: TEXT;
				mouse_events:	0;
				scale: 1;
				description { state: "default" 0.0;
					rel1.offset: 2 2;
					rel2.offset: -3 -3;
					color: 0 0 0 255;
					color_class: "label_text";
					text {
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.0 0.5;
						text_class: "label";
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color_class: "label_text_disabled";
				}
			}
		}
		programs {
			program { name: "disable";
				signal: "e,state,disabled";
				source: "e";
				action: STATE_SET "disabled" 0.0;
				target: "e.text.label";
			}
			program { name: "enable";
				signal: "e,state,enabled";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "e.text.label";
			}
		}
	}

	group { name: "e/widgets/fontpreview";
		parts {
			part { name: "e.fontpreview.text";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					color: 0 0 0 255;
					color_class: "entry_text";
					rel1.offset: 6 6;
					rel2.offset: -7 -7;
					text {
						text: "The quick brown fox jumped over YA MUM!";
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "_e_font_preview";
					}
				}
			}
		}
	}

	group { name: "e/widgets/textblock";
		styles {
			style { name: "textblock_style";
				base: "font=Sans font_size=10 align=left color=#000 style=shadow shadow_color=#ffffff80 wrap=word";
				tag:  "title" "+ font=Sans:style=Bold font_size=12 style=soft_shadow color=#fff shadow_color=#00000021";
				tag:  "hilight" "+ font=Sans:style=Bold style=glow color=#fff glow2_color=#333333be glow_color=#0000005a";
				tag:  "urgent" "+ font=Sans:style=Bold style=glow color=#fff glow2_color=#333 glow_color=#b01010";
				tag:  "b" "+ font=Sans:style=Bold";
				tag:  "br" "\n";
			}
		}
		parts {
			part { name:	"e.textblock.text";
				type:	TEXTBLOCK;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					rel1.offset: 4 4;
					rel2.offset: -5 -5;
					text {
						style:			"textblock_style";
						min:		1 1;
					}
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** MOD: CONIFGURE BUTTON ***/

group { name: "e/modules/conf/main";

   images.image: "spanner_inset.png" COMP;
   
   min: 16 16;
   max: 144 144;
   parts {
	   part { name: "base";
         description { state: "default" 0.0;
            image.normal: "button-normal.png";
            image.border: 8 8 8 8;
         }
         description { state: "over" 0.0;
			 inherit: "default" 0.0;
            image.normal: "button-prelight.png";
         }
         description { state: "clicked" 0.0;
			 inherit: "default" 0.0;			 
            image.normal: "button-pressed.png";
         }
      }

		part { name: "icon";
			description { state: "default" 0.0;
			image.normal: "spanner_inset.png";
			max: 144 144;
			rel1.offset: 2 2;
			rel1.to: "base";
			rel2.to: "base";
            rel2.offset: -3 -3;
			}
		}      

      }      
 
   programs {
	   OVER_P("base", "icon","default","over")
	   program {
         signal: "mouse,down,1*"; source: "icon";
         action: STATE_SET "clicked" 0.0;
         target: "base";
      }
      program {
         signal: "mouse,up,1*"; source: "icon";
         action: STATE_SET "default" 0.0;
         target: "base";
      }
  }
}



/////////////////////////////////////////////////////////////////////////////
	/*** MOD: DESKLOCK ***/

	group { name: "e/desklock/login_box";
		images {
			image: "logo.png" COMP;
			image: "entry.png" COMP;
		}
		parts {
			part { name: "logo";
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 64 64;
					max: 64 64;
					image.normal: "logo.png";
				}
			}
			part { name: "e.text.title";
				type: TEXT;
				effect: SOFT_SHADOW;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 1.0;
						offset: 0 8;
						to_y: "logo";
					}
					rel2 {
						relative: 1.0 1.0;
						offset: -1 8;
						to_y: "logo";
					}
					color: 224 224 224 255;
					color3: 0 0 0 32;
					text {
						text: "Enter Password";
						font: "Sans:style=Bold";
						size: 10;
						align: 0.5 0.5;
						min: 1 1;
						text_class: "desklock_title";
					}
				}
			}
			part { name: "pulse_clip";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1.to: "passwd_border";
					rel2.to: "passwd_border";
				}
				description { state: "pulse" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "error";
				type: RECT;
				mouse_events: 0;
				clip_to: "error_clip";
				description { state: "default" 0.0;
					rel1.to: "passwd_border";
					rel2.to: "passwd_border";
					color: 255 255 255 0;
				}
			}
			part { name: "error_clip";
				type: RECT;
				mouse_events: 0;
				clip_to: "pulse_clip";
				description { state: "default" 0.0;
					rel1.to: "passwd_border";
					rel2.to: "passwd_border";
					color: 255 255 255 255;
				}
				description { state: "invalid" 0.0;
					inherit: "default" 0.0;
					color: 255 128 128 255;	/*FIXME: Document how this works */
				}
			}
			part { name: "passwd_entry_clip";
				type: RECT;
				mouse_events: 0;
				clip_to: "pulse_clip";
				description { state: "default" 0.0;
					color: 255 255 255 255;
					rel1 {
						to: "passwd_border"; 
						relative: 0.0 0.0;
						offset: 3 2; 
					}
					rel2 {
						to: "passwd_border"; 
						relative: 1.0 1.0;
						offset: -6 -2; 
					}
				}
			}
			part { name: "passwd_border";
				mouse_events: 0;
				clip_to: "error_clip";
				description { state: "default" 0.0;
					rel1 {
						relative: 0.5 1.0;
						offset: -80 2;
						to_y: "e.text.title";
					}
					rel2 {
						relative: 0.5 1.0;
						offset: 79 20;
						to_y: "e.text.title";
					}
					image {
						normal: "entry.png";
						middle: 0;
						border: 8 8 10 10;
					}
					fill.smooth: 0;
				}
				description { state: "checking" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 128;
				}
			}
			part { name: "e.text.password";
				type: TEXT;
				clip_to: "passwd_entry_clip";
				scale: 1;
				description { state: "default" 0.0;
					fixed: 0 1;
					align: 0.0 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset: 0 0;
						to: "passwd_entry_clip";
					}
					rel2 {
						relative: 0.0 1.0;
						offset: 0 0;
						to: "passwd_entry_clip";
					}
					color: 0 0 0 255;
					text {
						text: "****";
						font: "Sans:style=Bold";
						size: 16;
						align: 0.0 0.5;
						min: 1 1;
						text_class: "desklock_passwd";
					}
				}
			}
			part { name: "cursor";
				type: RECT;
				mouse_events: 0;
				clip_to: "passwd_entry_clip";
				description { state: "default" 0.0;
					min: 1 16;
					max: 1 16;
					align: 0.0 0.5;
					fixed: 1 1;
					rel1 {
						relative: 1.0 0.0;
						offset: 0 -3;
						to: "e.text.password";
					}
					rel2 {
						relative: 1.0 1.0;
						offset: 1 1;
						to: "e.text.password";
					}
					color: 0 0 0 255;
				}
			}
		}
		programs {
			program { name: "pulse.1";
				signal: "e,state,checking";
				source: "e.desklock";
				action: STATE_SET "pulse" 0.0;
				target: "pulse_clip";
				transition: SINUSOIDAL 0.5;
				after: "pulse.2";
			}
			program { name: "pulse.2";
				action: STATE_SET "default" 0.0;
				target: "pulse_clip";
				transition: SINUSOIDAL 0.5;
				after: "pulse.1";
			}
			program { name: "pulse.stop";
				signal: "e,state,invalid";
				source: "e.desklock";
				action: ACTION_STOP;
				target: "pulse.1";
				target: "pulse.2";
				after: "pulse.reset";
			}
			program { name: "pulse.reset";
				action: STATE_SET "default" 0.0;
				target: "pulse_clip";
				transition: SINUSOIDAL 0.5;
			}
			program { name: "go_invalid";
				signal: "e,state,invalid";
				source: "e.desklock";
				action: STATE_SET "invalid" 0.0;
				target: "error_clip";
				transition: DECELERATE 0.5;
			}
			program { name: "stop_invalid";
				action: STATE_SET "default" 0.0;
				target: "error_clip";
				transition: DECELERATE 1.5;
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** EFM POPUP ***/
	group { name: "e/fileman/popup/default";
		inherit: "e/gadman/popup";
		/*	inherit function: it starts with another group. You can add parts
		*	from the base with "insert_after" or editing some variables
		*	of a part just like description.inherit				 */
		parts {
			part { name: "e.text.title";
				type: TEXT;
				effect: OUTLINE_SHADOW;
				insert_after: "e.swallow.content";
				description {
					state: "default" 0.0;
					color_class: "fileman_popup_title";
					rel1.relative: 0.0 0.0;
					rel1.offset: 8 3;
					rel2.relative: 1.0 0.0;
					rel2.offset: -8 3;
					align: 0.5 0.0;
					color: 255 255 255 255;
					color2: 255 255 255 255;
					color3: 255 255 255 255;
					text { font: "Sans:style=Bold"; size: 11;
						text_class: "fileman_popup_title";
						align: 0.5 0.0;
						min: 0 1;
						}
				fixed: 0 1;
				}
			}
			part { name: "e.swallow.content";
				description { state: "default" 0.0;
					rel1.relative: 0.0 1.0;
					rel1.to_y: "e.text.title";
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** ABOUT E ***/
		styles {
			style { name: "about_style";
				base: "font=Sans:style=Bold font_size=10 align=center color=#ffffff style=soft_shadow shadow_color=#00000020 wrap=word";
				tag:  "hilight" "+ font=Sans:style=Bold text_class=tb_light color=#f00 style=soft_shadow";
				tag:  "title" "+ font_size=12 font=Sans:style=Bold text_class=tb_big style=soft_shadow color=#fff shadow_color=#00000020";
				tag:  "/title" "- \n \n";
				tag:  "br" "\n";
			}
		}
	group {
		images {
			image: "about_bottom.png" COMP;
			image: "about_far.png" COMP;
			image: "about_shades.png" COMP;
			image: "about_shades_left.png" COMP;
			image: "about_top.png" COMP;
			image: "button-normal.png" COMP;
			image: "button-pressed.png" COMP;
			image: "entry.png" COMP;
			image: "logo.png" COMP;
		}
		name: "e/widgets/about/main";
		parts {
			part { name: "base";
				mouse_events: 0;
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 255;
				}
			}
			part { name: "background_top";
				description { state: "default" 0.0;
					image.normal: "about_top.png";
					rel2.to: "base";
					rel2.relative: 1.0 0.55;
				}
			}
			part { name: "background_far";
				description { state: "default" 0.0;
					image.normal: "about_far.png";
					rel1.to: "base";
					rel2.to: "base";
					rel1.relative: 0.0 0.47;
					rel2.relative: 0.5 0.57;
				}
			}
			part { name: "background_shades_left";
				description { state: "default" 0.0;
					image.normal: "about_shades_left.png";
					rel2.to: "base";
					rel2.relative: 0.6 0.75;
				}
			}
			part { name: "background_shades_right";
				description { state: "default" 0.0;
					image.normal: "about_shades.png";
					rel1.to: "base";
					rel2.to: "base";
					rel1.relative: 0.4 0.0;
					rel2.relative: 1.0 0.75;
				}
			}
			part { name: "background_bottom";
				description { state: "default" 0.0;
					image.normal: "about_bottom.png";
					rel1.to: "base";
					rel1.relative: 0.0 0.42;
				}
			}
			part { name: "space";
				type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 400 64;
					max: 400 64;
					align: 0.5 1.0;
					fixed: 1 1;
					rel1 {
						relative: 0.0 1.0;
						offset: 7 -1;
					}
					rel2 {
						relative: 1.0 1.0;
						offset: -8 -1;
					}
					color: 255 255 255 0;
				}
			}
			part { name: "about_bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "e.textblock.about";
						offset: -7 -7;
					}
					rel2 {
						to: "e.textblock.about";
						offset: 6 6;
					}
					image {
						normal: "entry.png";
						border: 7 7 7 7;
					}
					color: 255 255 255 200;
				}
			}
			part { name: "authors_bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "e.textblock.authors";
						offset: -7 -7;
					}
					rel2 {
						to: "e.textblock.authors";
						offset: 6 6;
					}
					image {
						normal: "entry.png";
						border: 7 7 7 7;
					}
					color: 255 255 255 200;
				}
			}
			part { name: "e.textblock.about";
				type: TEXTBLOCK;
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 200 1000;
					min: 200 0;
					rel1 {
						to_y: "e.text.version";
						relative: 0.0 1.0;
						offset: 16 8;
					}
					rel2 {
						to_y: "space";
						to_x: "logo";
						relative: 0.0 0.4;
						offset: -9 -9;
					}
					text {
						style: "about_style";
						min: 0 1;
					}
				}
			}
			part { name: "e.textblock.authors";
				type: TEXTBLOCK;
				mouse_events: 0;
				description { state: "default" 0.0;
					max: 1000 1000;
					min: 200  0;
					rel1 {
						to_y: "e.text.version";
						to_x: "logo";
						relative: 1.0 1.0;
						offset: 8 8;
					}
					rel2 {
						to_y: "space";
						relative: 1.0 0.4;
						offset: -17 -9;
					}
					text {
						style: "about_style";
						min: 1 1;
					}
				}
			}
			part { name: "e.text.title";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				description { state: "default" 0.0;
					fixed: 0 1;
					align: 0.5 0.0;
					rel1 {
						relative: 0.0 0.0;
						offset: 6 6;
					}
					rel2 {
						relative: 1.0 0.0;
						offset: -7 6;
					}
					color: 255 255 255 255;
					color3: 0 0 0 32;
					color_class: "about_title";
					text {
						text: "Enlightenment";
						font: "Sans:style=Bold,Edje-Vera-Bold";
						size: 16;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "about_title";	       
					}
				}
			}
			part { name: "e.text.version";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events:  0;
				description { state: "default" 0.0;
					fixed: 0 1;
					align: 0.5 0.0;
					rel1 {
						to: "e.text.title";
						relative: 0.0 1.0;
						offset: 6 2;
					}
					rel2 {
						to: "e.text.title";
						relative: 1.0 1.0;
						offset: -7 2;
					}
					color: 255 255 255 255;
					color3: 0 0 0 32;
					color_class: "about_version";
					text {
						text: "0.17.0.000";
						font: "Sans:style=Bold,Edje-Vera-Bold";
						size: 12;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "about_version";	       
					}
				}
			}
			part { name: "logo";
				type: IMAGE;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 63 63;
					max: 63 63;
					align: 0.5 0.5;
					fixed: 1 1;
					rel1 {
						relative: 0.5 0.5;
						offset: 0 0;
						to_y: "e.textblock.about";
					}
					rel2 {
						relative: 0.5 0.5;
						offset: 0 0;
						to_y: "e.textblock.about";
					}
					image.normal: "logo.png";
					image.border: 1 1 1 1;
				}
			}
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 1.0;
					rel1 {
						relative: 0.5 1.0;
						offset: 0 -7;
					}
					rel2 {
						relative: 0.5 1.0;
						offset: 0 -7;
					}
					min: 64 26;
					max: 64 26;
					image {
						normal: "button-normal.png";
						border: 10 10 10 10;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-pressed.png";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						to: "button_image";
						relative: 0.0 0.0;
						offset:	3 3;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-4 -4;
						to: "button_image";
					}
					color: 0 0 0 192;
					color3: 255 255 255 128;
					color_class: "button_text";
					text {
						text: "Close";
						font: "Sans";
						size: 10;
						min: 1 1;
						align: 0.5 0.5;
						text_class: "button";
					}
				}
			}
		}
		programs {
			program {
				name:	"button_click";
				signal: "mouse,down,1";
				source: "button_image";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick";
				signal: "mouse,up,1";
				source: "button_image";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick2";
				signal: "mouse,clicked,1";
				source: "button_image";
				action: SIGNAL_EMIT "e,action,close" "";
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** THEME ABOUT ***/
	group { name: "e/theme/about";
		images {
			image: "about_bottom.png" COMP;
			image: "about_far.png" COMP;
			image: "about_shades.png" COMP;
			image: "about_shades_left.png" COMP;
			image: "about_top.png" COMP;
			image: "button-normal.png" COMP;
			image: "button-pressed.png" COMP;
			image: "entry.png" COMP;
			image: "logo.png" COMP;
		}
		styles {
			style { name: "theme_about_style";
				base: "font=Sans:style=Bold font_size=10 align=center color=#ffffff style=soft_shadow shadow_color=#00000020 wrap=word";
				tag:  "br" "\n";
			}
		}
		min: 300 240;
		max: 640 640;
		parts {
			part { name: "base";
				mouse_events: 0;
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 255;
				}
			}
			part { name: "background_top";
				description { state: "default" 0.0;
					image.normal: "about_top.png";
					rel2.to: "base";
					rel2.relative: 1.0 0.55;
				}
			}
			part { name: "background_far";
				description { state: "default" 0.0;
					image.normal: "about_far.png";
					rel1.to: "base";
					rel2.to: "base";
					rel1.relative: 0.0 0.47;
					rel2.relative: 0.5 0.57;
				}
			}
			part { name: "background_shades_left";
				description { state: "default" 0.0;
					image.normal: "about_shades_left.png";
					rel2.to: "base";
					rel2.relative: 0.6 0.75;
				}
			}
			part { name: "background_shades_right";
				description { state: "default" 0.0;
					image.normal: "about_shades.png";
					rel1.to: "base";
					rel2.to: "base";
					rel1.relative: 0.4 0.0;
					rel2.relative: 1.0 0.75;
				}
			}
			part { name: "background_bottom";
				description { state: "default" 0.0;
					image.normal: "about_bottom.png";
					rel1.to: "base";
					rel1.relative: 0.0 0.42;
				}
			}
			part { name: "logo";
				description { state: "default" 0.0;
					image.normal: "logo.png";
					align: 0.5 0.2;
					min: 128 128;
					max: 128 128;
				}
			}
			part { name: "about_bg";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to_y: "logo";
						relative: 0.0 1.0;
						offset: 8 0;
					}
					rel2 {
						to_y: "button_image";
						offset: -9 -19;
						relative: 1.0 0.0;
					}
					image {
						normal: "entry.png";
						border: 7 7 7 7;
					}
					color: 255 255 255 200;
				}
			}
			part { name: "about";
				type: TEXTBLOCK;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						to: "about_bg";
					}
					rel2 {
						to: "about_bg";
					}
					text {
						style: "theme_about_style";
						min: 1 1;
						text:
					"Sunshine - The default theme for<br>"
					"the good, old OpenGEU Quarto di Luna.<br>"
					"Recompiled for E19 stable version by<br>"
					"Alberto <hilight>Duma</hilight> Verdoja"
					;
					}
				}
			}
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 1.0;
					rel1.relative: 0.5 0.98;
					rel1.offset: 0 -1;
					rel2.relative: 0.5 0.98;
					rel2.offset: 0 -1;
					min: 64 26;
					max: 64 26;
					image {
						normal: "button-normal.png";
						border: 10 10 10 10;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.border: 4 4 4 4;
					image.normal: "button-pressed.png";
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1 {
						to: "button_image";
						relative: 0.0  0.0;
						offset:	3			3;
					}
					rel2 {
						relative: 1.0  1.0;
						offset:	-4	-4;
						to:			 "button_image";
					}
					color: 0 0 0 192;
					color3: 255 255 255 128;
					color_class: "button_text";
					text {
						text:			 "Close";
						font:			 "Sans";
						size:			 10;
						min:		1 1;
						align:			0.5 0.5;
						text_class: "button";
					}
				}
			}
		}
		programs {
			program {
				name:	"button_click";
				signal: "mouse,down,1";
				source: "button_image";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick";
				signal: "mouse,up,1";
				source: "button_image";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
			program {
				name:	"button_unclick2";
				signal: "mouse,clicked,1";
				source: "button_image";
				action: SIGNAL_EMIT "e,action,close" "";
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
	/*** INIT SPLASH ***/
	/* this first group is used for the primary screen (or only screen) so in
			* a multi-monitor setup whichever is first (screen 0) will get this
			* splash on it */
	group {
		name: "e/init/splash";
		/* images used */
		images {
			image: "wp_bottom.png" COMP;
			image: "wp_far.png" COMP;
			//~ image: "wp_logo_overlay.png" COMP;
			image: "wp_logo_overlay2.png" COMP;
			image: "wp_shades.png" COMP;
			image: "wp_shades_left.png" COMP;
			image: "wp_top.png" COMP;
			image: "init_check1.png" COMP;
			image: "init_check2.png" COMP;
			image: "logo_blue_small.png" COMP;
            image: "logo_blue_small_glow.png" COMP;
		}
		script {
			public is_ready;
			public do_end;
		}
		parts {
			/* splash is fullscreen so we want a background of some sort. we have
			 * taken the default desktop wallpaper here as it should look nice */
			part { name: "background";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part { name: "background_top";
				description { state: "default" 0.0;
					image.normal: "wp_top.png";
					rel2.to: "background";
					rel2.relative: 1.0 0.55;
				}
			}
			part { name: "background_far";
				description { state: "default" 0.0;
					image.normal: "wp_far.png";
					rel1.to: "background";
					rel2.to: "background";
					rel1.relative: 0.0 0.47;
					rel2.relative: 0.5 0.57;
				}
			}
			part { name: "background_shades_left";
				description { state: "default" 0.0;
					image.normal: "wp_shades_left.png";
					rel2.to: "background";
					rel2.relative: 0.6 0.75;
				}
			}
			part { name: "background_shades_right";
				description { state: "default" 0.0;
					image.normal: "wp_shades.png";
					rel1.to: "background";
					rel2.to: "background";
					rel1.relative: 0.4 0.0;
					rel2.relative: 1.0 0.75;
				}
			}
			part { name: "logo";
         description { state: "default" 0.0;
            image.normal: "logo_blue_small.png";
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
            FIXED_SIZE(100, 127)
         }
         description { state: "done" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
      }
      part { name: "logo_glow";
         description { state: "default" 0.0;
            image.normal: "logo_blue_small_glow.png";
            rel1.to: "logo";
            rel2.to: "logo";
            color: 255 255 255 128;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
			part { name: "logo2";
				description { state: "default" 0.0;
					aspect: 1 1;
					aspect_preference: HORIZONTAL;
					image.normal: "wp_logo_overlay2.png";
					rel1.to: "background";
					rel2.to: "background";
					rel1.relative: 0.2 0.0;
					rel2.relative: 0.9 0.6;
					color: 255 255 255 0;
				}
				description { state: "shiny" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part { name: "background_bottom";
				description { state: "default" 0.0;
					image.normal: "wp_bottom.png";
					rel1.to: "background";
					rel1.relative: 0.0 0.42;
				}
			}
			part {
				name: "e.text.version";
				type: TEXT;
				effect: SOFT_SHADOW;
				description {
					state: "default" 0.0;
					align: 1.0 1.0;
					rel1 {
						relative: 1.0 1.0;
						offset:	-2  -2;
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	-2  -2;
					}
					color: 255 255 255 255;
					color3: 0 0 0 32;
					text {
						text: "0.19";
						font: "Sans";
						size: 8;
						min:  1 1;
						align: 0.0 0.0;
						text_class: "init_version";
					}
				}
			}
			part {
				name: "e.text.status";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					align: 0.5 0.0;
					rel1 {
						to: "background_bottom";
					}
					rel2 {
						to: "background_bottom";
					}
					color: 255 255 255 255;
					color3: 0 0 0 32;
					text {
						text: "Starting Enlightenment. Please wait.";
						font: "Sans:style=Bold";
						size: 10;
						min:  1 1;
						align: 0.5 0.5;
						text_class: "init_text";
					}
				}
			}
			part {
				name: "e.text.disable_text";
				type: TEXT;
				effect: SOFT_SHADOW;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					rel1 {
						relative: 0.0 0.0;
						offset:	8	8;
					}
					rel2 {
						relative: 0.0 0.0;
						offset:	8	8;
					}
					color: 255 255 255 255;
					color3: 0 0 0 32;
					text {
						text: "Disable this splash screen in future.";
						font: "Sans";
						size: 10;
						min:	1 1;
						align: 0.0 0.0;
						text_class: "init_text";
					}
				}
			}
			part {
				name: "disable_check";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: 20 20;
					max: 20 20;
					align: 0.0 0.5;
					rel1 {
						relative: 1.0 0.0;
						offset:	0 0;
						to: "e.text.disable_text";
					}
					rel2 {
						relative: 1.0 1.0;
						offset:	0  -1;
						to: "e.text.disable_text";
					}
					image {
						normal: "init_check1.png";
					}
				}
				description {
					state: "active" 0.0;
					inherit: "default" 0.0;
					image {
						normal: "init_check2.png";
					}
				}
			}
			part {
				name: "enable_event";
				type: RECT;
				description {
					state: "default" 0.0;
					visible: 0;
					color: 0 0 0 0;
					rel1 {
						to: "e.text.disable_text";
						relative: 0.0 0.0;
						offset:	-5 -5;
					}
					rel2 {
						to: "disable_check";
						relative: 1.0 1.0;
						offset:	4 4;
					}
				}
				description {
					state: "active" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part {
				name: "disable_event";
				type: RECT;
				description {
					state: "default" 0.0;
					visible: 1;
					color: 0 0 0 0;
					rel1 {
						to: "e.text.disable_text";
						relative: 0.0 0.0;
						offset:	-5 -5;
					}
					rel2 {
						to: "disable_check";
						relative: 1.0 1.0;
						offset:	4 4;
					}
				}
				description {
					state: "active" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
		}
		programs {
			program {
				name: "init";
				signal: "load";
				source: "";
				script {
					set_int(is_ready, 1);
					set_int(do_end, 0);
				}
			}
			program {
				name: "ready";
				script {
					new val;

					val = get_int(do_end);
					if (val == 1)
				run_program(PROGRAM:"done2");
					else
				set_int(is_ready, 1);
				}
			}
			program {
				name: "done1"; /* when e tells the splash screen it is done
						* starting up, the init splash gets this signal */
				signal: "e,state,done";
				source: "e";
				script {
					new val;

					val = get_int(is_ready);
					if (val == 1)
				run_program(PROGRAM:"done2");
					else
				set_int(do_end, 1);
				}
			}
			program {
				name: "done2";
				action: STATE_SET "done" 0.0;
				transition: LINEAR 1.0;
				target: "logo";
				after: "event_logo2";
			}
/*			program { name: "event_logo";
				action: STATE_SET "default" 0.0;
				target: "logo";
				after: "event_logo2";
			}*/
			program { name: "event_logo2";
				action: STATE_SET "shiny" 0.0;
				transition: LINEAR 1.0;
				target: "logo2";
				after: "event_logo3";
			}
			program { name: "event_logo3";
				action: STATE_SET "default" 0.0;
				transition: LINEAR 1.0;
				target: "logo2";
				after: "event_logo4";
			}
			program { name: "event_logo4";
				action: STATE_SET "done" 0.0;
				target: "logo";
				after: "done3";
			}
			program {
				name: "done3"; /* at the end signal back to e we are done shutting
						* down the splash ans all animations are done */
				action: SIGNAL_EMIT "e,state,done_ok" "e";
			}
			/* handle a mouse down (click) event on the disable splash check
			 * event area (covering both label and checkbox) */
			program {
				name: "disable_down"; /* name of program */
				signal: "mouse,down,1"; /* signal that triggers it */
				source: "disable_event"; /* source of the signal */
				action: STATE_SET "active" 0.0; /* set state to active */
				target: "disable_check"; /* these are the thngs to set to active */
				target: "disable_event";
				target: "enable_event";
				after: "disable_on"; /* and after that is done run the disable_on
								* program to tell e about this */
			}
			program {
				name: "enable_down";
				signal: "mouse,down,1";
				source: "enable_event";
				action: STATE_SET "default" 0.0;
				target: "disable_check";
				target: "disable_event";
				target: "enable_event";
				after: "disable_off";
			}
			/* when a user toggles the checkbox - these programs signal back to
			 * e to enable or disable the splash */
			program {
				name: "disable_on";
				action: SIGNAL_EMIT "e,action,init,disable" "e";
			}
			program {
				name: "disable_off";
				action: SIGNAL_EMIT "e,action,init,enable" "e";
			}
		}
	}
	/* this group is used for other screens/xinerama zones etc. other than
			* the primary as only the primary shows the full splash - this just
			* shows the below image. it can animate etc. but not display status
			* etc. */
	group {
		name: "e/init/extra_screen";
		parts {
			part { name: "background";
				type: RECT;
				description { state: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part { name: "background_top";
				description { state: "default" 0.0;
					image.normal: "wp_top.png";
					rel2.to: "background";
					rel2.relative: 1.0 0.55;
				}
			}
			part { name: "background_far";
				description { state: "default" 0.0;
					image.normal: "wp_far.png";
					rel1.to: "background";
					rel2.to: "background";
					rel1.relative: 0.0 0.47;
					rel2.relative: 0.5 0.57;
				}
			}
			part { name: "background_shades_left";
				description { state: "default" 0.0;
					image.normal: "wp_shades_left.png";
					rel2.to: "background";
					rel2.relative: 0.6 0.75;
				}
			}
			part { name: "background_shades_right";
				description { state: "default" 0.0;
					image.normal: "wp_shades.png";
					rel1.to: "background";
					rel2.to: "background";
					rel1.relative: 0.4 0.0;
					rel2.relative: 1.0 0.75;
				}
			}
			part { name: "background_bottom";
				description { state: "default" 0.0;
					image.normal: "wp_bottom.png";
					rel1.to: "background";
					rel1.relative: 0.0 0.42;
				}
			}
		}
	}


/////////////////////////////////////////////////////////////////////////////
	/*** MOD: ENGAGE ***/

#define ENGAGE_BG(POS, IMG, OFF1, OFF2, BORDER)			\
	group {												\
		name: "e/modules/engage/bg_"POS;				\
		images.image: IMG COMP;								\
		parts {											\
			part {										\
				name: "bg";								\
				type: IMAGE;							\
				mouse_events: 0;						\
				description { state: "default" 0.0;		\
					rel1 {								\
						relative: 0.0 0.0;				\
						offset: OFF1;					\
					}									\
					rel2 {								\
						relative: 1.0 1.0;				\
						offset: OFF2;					\
					}									\
					image {								\
						normal: IMG;					\
						border: BORDER;					\
					}									\
				}										\
			}											\
		}												\
	}												
		
ENGAGE_BG("bottom", "itask_im0.png", -6 -7, 6 -1, 18 18 20 0)
ENGAGE_BG("top", "itask_im1.png", -7 -1, 6 6, 18 18 0 28)
ENGAGE_BG("left", "itask_im2.png", -1 -7, 10 6, 0 20 32 18)
ENGAGE_BG("right", "itask_im3.png", -10 -7, 10 6, 20 0 32 18)
				
	/* the vertical and horizontal separator image. it can be a rectangle
	 * as it is in this example.
	 */
#define ENGAGE_SEP(NAME, MAX, ALIGN, OFF1, OFF2)	\
	group {										\
		name: NAME;								\
		parts {									\
			part {								\
				name: "separator";				\
				type: RECT;						\
				mouse_events: 0;				\
				description {					\
					state: "default" 0.0;		\
					color: 255 255 255 150;		\
					max: MAX;					\
					align: ALIGN;				\
					rel1.offset: OFF1;			\
					rel2.offset: OFF2;			\
				}								\
			}									\
		}										\
	}

ENGAGE_SEP("e/modules/engage/separator_bottom", 2 999, 0.5 0.0, 0 0, -1 -1);
ENGAGE_SEP("e/modules/engage/separator_top",    2 999, 0.5 0.0, 0 0,  -1  0);
ENGAGE_SEP("e/modules/engage/separator_left",   999 2, 0.0 0.5, 0 0,   -0 -1);
ENGAGE_SEP("e/modules/engage/separator_right",  999 2, 0.0 0.5, 0 0, -1 -1);

group {
		/* bg frame that keeps is not affected by 'Background
		 * Transparency' setting */
		name: "e/modules/engage/frame_bottom";
		alias: "e/modules/engage/frame_top";
		alias: "e/modules/engage/frame_left";
		alias: "e/modules/engage/frame_right";

		data {
			/* space between icons */
			item: "icon_spacing"    "3";

			/* space between boxes */
			item: "separator_width" "12";

			/* space between screen edge and icons */
			item: "edge_offset"    "3";

			/* clip separator to background group
			 * change opacity with background transparency */
			item: "clip_separator"  "1";

			/* extra space between icons and bg
			   (required for autohide to hide the whole background) */
			item: "bg_offset" "10";
		}

		parts {
			part {
				name: "frame";
				type: RECT;
				mouse_events: 0;

				description {
					state: "default" 0.0;
					visible: 0;
				}
			}
		}
	}



//end of collection
}
